{"ast":null,"code":"var _jsxFileName = \"/root/sayeed/demo/meditro/src/markup/pages/prescription.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport drLogo from \"../../images/prescription/drlogo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prescription = () => {\n  _s();\n  const doctors = [{\n    name: 'Dr. Bhavesh C. Jain',\n    specialty: 'Family Physician & Homeopathic Consultant',\n    qualifications: 'BHMS, MD-Homeopathy',\n    address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n  }, {\n    name: 'Dr. Sarah Smith',\n    specialty: 'Pediatrician',\n    qualifications: 'MBBS, DCH',\n    address: '123 Elm Street, Mumbai'\n  }\n  // Add more doctor objects as needed\n  ];\n\n  const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n  const [ageError, setAgeError] = useState(false); // State for age validation error\n  const [medicineName, setMedicineName] = useState(''); // State for medicine name\n  const [medicines, setMedicines] = useState([]); // State for medicine details\n  const [dosage, setDosage] = useState(''); // State for dosage\n  const [duration, setDuration] = useState(''); // State for duration\n  const [foodType, setFoodType] = useState('before'); // State for food type\n  const [frequency, setFrequency] = useState(''); // State for frequency\n  const [gender, setGender] = useState(''); // State for gender\n  const [errorMessage, setErrorMessage] = useState(''); // State for error message\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n  const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n  // Function to handle adding medicine details\n  const handleAddMedicine = () => {\n    if (medicineName.trim() !== \"\" && dosage.trim() !== \"\" && duration.trim() !== \"\" && foodType.trim() !== \"\" && frequency.trim() !== \"\" && /^[10+]+$/.test(frequency.trim()) // Check if frequency contains only allowed characters\n    ) {\n      const newMedicine = {\n        name: medicineName.trim(),\n        dosage: dosage.trim(),\n        duration: duration.trim(),\n        foodType: foodType.trim(),\n        frequency: frequency.trim()\n      };\n      setMedicines([...medicines, newMedicine]);\n      // Clear input fields\n      setMedicineName(\"\");\n      setDosage(\"\");\n      setDuration(\"\");\n      setFoodType(\"before\");\n      setFrequency(\"\");\n    } else {\n      setErrorMessage(\"Please fill in all fields or enter a valid frequency (only '1', '+', '0', '2' are allowed).\");\n      setSuccessMessage(\"\");\n    }\n  };\n  const containerStyle = {\n    maxWidth: '800px',\n    margin: '100px auto 0',\n    padding: '10px'\n  };\n  const bigBoxStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: '#f9f9f9',\n    padding: '20px',\n    marginBottom: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const logoAndDoctorInfoContainerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#6666ff',\n    // Add background color to the container\n    borderRadius: '5px',\n    padding: '10px',\n    width: '100%',\n    // Ensure the container takes full width\n    marginBottom: '20px'\n  };\n  const logoStyle = {\n    width: '100px',\n    height: '100px',\n    marginRight: '20px'\n  };\n  const labelStyle = {\n    marginRight: '10px',\n    marginBottom: '15px',\n    fontWeight: 'bold',\n    width: '150px',\n    // Adjusted width for labels\n    textAlign: 'right' // Align labels to the right\n  };\n\n  const doctorInfoStyle = {\n    color: 'white'\n  };\n  const horizontalLineStyle = {\n    borderTop: '1px solid #ccc',\n    margin: '20px 0',\n    width: '100%'\n  };\n  const inputStyle = {\n    border: 'none',\n    borderBottom: '1px solid #ccc',\n    outline: 'none',\n    padding: '5px',\n    width: '80%',\n    // Adjusted width for responsiveness\n    marginBottom: '10px',\n    textAlign: 'center'\n  };\n  const cardContainerStyle = {\n    width: '100%',\n    // Change width to 100% for responsiveness\n    marginBottom: '10px'\n  };\n  const cardStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '15px',\n    // Adjust padding to mimic the textarea size\n    width: '100%',\n    // Adjusted width\n    height: 'auto',\n    // Adjusted height to 'auto'\n    position: 'relative' // Position the textboxes relative to the card\n  };\n\n  const textboxStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '8px',\n    // Adjust padding to minimize height\n    width: '100%',\n    // Adjusted width for the first textbox\n    fontSize: '14px',\n    // Adjust font size\n    lineHeight: '1.5',\n    // Adjust line height\n    marginBottom: '20px',\n    // Add margin between textboxes\n    boxSizing: 'border-box' // Include padding and border in the width\n  };\n\n  const textboxGroupStyle = {\n    display: 'flex',\n    flexDirection: 'column' // Stack the textboxes vertically\n  };\n\n  const smallTextboxStyle = {\n    ...textboxStyle,\n    flex: '1',\n    // Use flexbox to distribute available space evenly\n    marginBottom: '10px',\n    // Adjust margin between textboxes\n    width: 'calc(25% - 20px)' // Adjusted width for the small textboxes\n  };\n\n  const medicineNameStyle = {\n    ...textboxStyle,\n    width: '50%',\n    // Adjusted width for the medicine name textbox\n    marginBottom: '30px',\n    // Remove bottom margin\n    textAlign: 'left' // Align text to the left\n  };\n\n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    // Center align the button horizontally\n    marginBottom: '10px',\n    alignItems: 'center' // Center align the button with the input fields\n  };\n\n  const buttonStyle = {\n    padding: '5px 15px',\n    // Increase padding for better visibility\n    borderRadius: '5px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer'\n  };\n  const inputNameStyle = {\n    ...inputStyle,\n    width: '100%',\n    marginLeft: '20px'\n  };\n  const inputAgeStyle = {\n    ...inputStyle,\n    width: '100%',\n    // Adjusted width for the age input\n    marginLeft: '110px'\n  };\n  const inputGenderStyle = {\n    ...inputStyle,\n    width: '100%',\n    // Adjusted width to fill the parent container\n    marginLeft: '85px'\n  };\n  const inputDateStyle = {\n    ...inputStyle,\n    marginTop: '10px',\n    marginLeft: 'auto',\n    // Pushes the element to the right\n    minWidth: '120px' // Ensure a minimum width for the date input\n  };\n\n  const signatureDateContainer = {\n    marginTop: '20px',\n    marginLeft: 'auto',\n    // Pushes the container to the right\n    textAlign: 'right' // Align content to the right\n  };\n\n  const signatureStyle = {\n    fontWeight: 'bold'\n  };\n  const handlePrint = () => {\n    const container = document.getElementById('container');\n    const content = container.innerHTML;\n    const printWindow = window.open('', '_blank'); // Show container for printing\n    printWindow.document.open();\n    printWindow.document.write('<html><head><title>Print</title></head><body>' + content + '</body></html>');\n    printWindow.document.close();\n    printWindow.print();\n  };\n  const handleAgeChange = event => {\n    const age = event.target.value;\n    if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n      setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n    } else {\n      setAgeError(false); // Clear error if input contains only digits and age is positive\n    }\n  };\n\n  // Function to handle removing medicine from the list\n  const handleRemoveMedicine = index => {\n    const updatedMedicines = [...medicines];\n    updatedMedicines.splice(index, 1);\n    setMedicines(updatedMedicines);\n  };\n\n  // Function to handle submitting the prescription form\n  const handleSubmit = () => {\n    if (medicines.length === 0 || !gender) {\n      setErrorMessage('Please fill in all fields.');\n      setSuccessMessage('');\n    } else {\n      setErrorMessage('');\n      setSuccessMessage('Information saved successfully.');\n      // Here you can add code to submit the form data\n    }\n\n    setTimeout(() => {\n      setErrorMessage('');\n      setSuccessMessage('');\n    }, 1000);\n  };\n\n  // Get current date in \"DD-MM-YYYY\" format\n  const getCurrentDate = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    // Add leading zero to month and day if needed\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    return `${day}-${month}-${year}`;\n  };\n  const currentDate = getCurrentDate(); // Get current date\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: bigBoxStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: logoAndDoctorInfoContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: drLogo,\n            alt: \"Logo\",\n            style: logoStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: doctorInfoStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedDoctor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedDoctor.specialty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedDoctor.qualifications\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Address: \", selectedDoctor.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: horizontalLineStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'left',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '15px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: labelStyle,\n                  children: \"Patient's Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  style: inputNameStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '-75px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: labelStyle,\n                  children: \"Age:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  style: inputAgeStyle,\n                  onChange: handleAgeChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this), ageError && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'blue'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 64\n                  }, this), \" Only digits are allowed for age\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '-50px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: labelStyle,\n                  children: \"Gender:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  style: inputGenderStyle,\n                  onChange: e => setGender(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: labelStyle,\n                children: \"Prescriptions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: cardContainerStyle,\n                children: [medicines.map((medicine, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: cardStyle,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontWeight: 'bold',\n                      marginBottom: '10px'\n                    },\n                    children: [\"Medicine Name: \", medicine.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Frequency: \", medicine.frequency]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Dosage: \", medicine.dosage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Duration: \", medicine.duration]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Food Type: \", medicine.foodType]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRemoveMedicine(index),\n                    style: {\n                      background: 'none',\n                      border: 'none',\n                      cursor: 'pointer',\n                      color: 'red'\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  style: medicineNameStyle,\n                  placeholder: \"Enter medicine name\",\n                  value: medicineName,\n                  onChange: e => setMedicineName(e.target.value),\n                  onKeyPress: e => e.key === 'Enter' && handleAddMedicine()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: textboxGroupStyle,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    style: {\n                      ...smallTextboxStyle,\n                      marginBottom: '10px'\n                    },\n                    placeholder: \"Dosage eg.500mg\",\n                    value: dosage,\n                    onChange: e => setDosage(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    style: {\n                      ...smallTextboxStyle,\n                      marginBottom: '10px'\n                    },\n                    placeholder: \"Frequency e.g. 1+0+1\",\n                    value: frequency,\n                    onChange: e => setFrequency(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    style: {\n                      ...smallTextboxStyle,\n                      marginBottom: '10px'\n                    },\n                    placeholder: \"Duration e.g. 5 days\",\n                    value: duration,\n                    onChange: e => setDuration(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    style: smallTextboxStyle,\n                    value: foodType,\n                    onChange: e => setFoodType(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"before\",\n                      children: \"Before food\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"after\",\n                      children: \"After food\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: buttonContainerStyle,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleAddMedicine,\n                    style: {\n                      background: 'none',\n                      border: 'none',\n                      cursor: 'pointer',\n                      color: 'blue',\n                      marginRight: '580px'\n                    },\n                    children: \"Add Medicine\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: buttonContainerStyle,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: handleSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 32\n            }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'green'\n              },\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: signatureDateContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              style: signatureStyle,\n              children: \"Signature : ____________________\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: signatureStyle,\n              children: \"Date :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              style: {\n                ...inputDateStyle\n              },\n              value: currentDate,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handlePrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(Prescription, \"Lz4yr4sFkKt8jbwCP+ix4kcWO5w=\");\n_c = Prescription;\nexport default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineName, setMedicineName] = useState(''); // State for medicine name\n//   const [medicines, setMedicines] = useState([]); // State for medicine details\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [frequency, setFrequency] = useState(''); // State for frequency\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   // Function to handle adding medicine details\n//   const handleAddMedicine = () => {\n//     if (medicineName.trim() !== \"\" && dosage.trim() !== \"\" && duration.trim() !== \"\" && foodType.trim() !== \"\" && frequency.trim() !== \"\") {\n//       const newMedicine = { name: medicineName.trim(), dosage: dosage.trim(), duration: duration.trim(), foodType: foodType.trim(), frequency: frequency.trim() };\n//       setMedicines([...medicines, newMedicine]);\n//       // Clear input fields\n//       setMedicineName('');\n//       setDosage('');\n//       setDuration('');\n//       setFoodType('before');\n//       setFrequency('');\n//     } else {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     }\n//   };\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '30px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   // Function to handle removing medicine from the list\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines.splice(index, 1);\n//     setMedicines(updatedMedicines);\n//   };\n\n//   // Function to handle submitting the prescription form\n//   const handleSubmit = () => {\n//     if (medicines.length === 0 || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"DD-MM-YYYY\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>Medicine Name: {medicine.name}</p>\n//                                             <p>Frequency: {medicine.frequency}</p>\n\n//                       <p>Dosage: {medicine.dosage}</p>\n//                       <p>Duration: {medicine.duration}</p>\n//                       <p>Food Type: {medicine.foodType}</p>\n//                       <button onClick={() => handleRemoveMedicine(index)} style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'red' }}>Remove</button>\n//                     </div>\n//                   ))}\n//                   <input type=\"text\" style={medicineNameStyle} placeholder=\"Enter medicine name\" value={medicineName} onChange={(e) => setMedicineName(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleAddMedicine()} />\n//                   <div style={textboxGroupStyle}>\n\n//                   <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg.500mg\" value={dosage} onChange={(e) => setDosage(e.target.value)} />\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Frequency e.g. 1+0+1\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration e.g. 5 days\" value={duration} onChange={(e) => setDuration(e.target.value)} />\n//                     <select style={smallTextboxStyle} value={foodType} onChange={(e) => setFoodType(e.target.value)}>\n//                       <option value=\"before\">Before food</option>\n//                       <option value=\"after\">After food</option>\n//                     </select>\n//                   </div>\n//                   <div style={buttonContainerStyle}>\n//                     <button onClick={handleAddMedicine}style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'blue',marginRight:'580px' }}>Add Medicine</button>\n//                   </div>\n//                 </div>\n//               </div>\n//               <div style={buttonContainerStyle}>\n//                 <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//               </div>\n//               {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//               {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineName, setMedicineName] = useState(''); // State for medicine name\n//   const [medicines, setMedicines] = useState([]); // State for medicine details\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [frequency, setFrequency] = useState(''); // State for frequency\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   // Function to handle adding medicine details\n//   const handleAddMedicine = () => {\n//     if (medicineName.trim() !== \"\" && dosage.trim() !== \"\" && duration.trim() !== \"\" && foodType.trim() !== \"\" && frequency.trim() !== \"\") {\n//       const newMedicine = { name: medicineName.trim(), dosage: dosage.trim(), duration: duration.trim(), foodType: foodType.trim(), frequency: frequency.trim() };\n//       setMedicines([...medicines, newMedicine]);\n//       // Clear input fields\n//       setMedicineName('');\n//       setDosage('');\n//       setDuration('');\n//       setFoodType('before');\n//       setFrequency('');\n//     } else {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     }\n//   };\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '30px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   // Function to handle removing medicine from the list\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines.splice(index, 1);\n//     setMedicines(updatedMedicines);\n//   };\n\n//   // Function to handle submitting the prescription form\n//   const handleSubmit = () => {\n//     if (medicines.length === 0 || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"DD-MM-YYYY\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>Medicine Name: {medicine.name}</p>\n//                       <p>Dosage: {medicine.dosage}</p>\n//                       <p>Duration: {medicine.duration}</p>\n//                       <p>Food Type: {medicine.foodType}</p>\n//                       <p>Frequency: {medicine.frequency}</p>\n//                       <button onClick={() => handleRemoveMedicine(index)} style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'red' }}>Remove</button>\n//                     </div>\n//                   ))}\n//                   <input type=\"text\" style={medicineNameStyle} placeholder=\"Enter medicine name\" value={medicineName} onChange={(e) => setMedicineName(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleAddMedicine()} />\n//                   <div style={textboxGroupStyle}>\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage e.g. 1+0+1\" value={dosage} onChange={(e) => setDosage(e.target.value)} />\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration e.g. 5 days\" value={duration} onChange={(e) => setDuration(e.target.value)} />\n//                     <select style={smallTextboxStyle} value={foodType} onChange={(e) => setFoodType(e.target.value)}>\n//                       <option value=\"before\">Before food</option>\n//                       <option value=\"after\">After food</option>\n//                     </select>\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Frequency\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n//                   </div>\n//                 </div>\n//               </div>\n//               <div style={buttonContainerStyle}>\n//                 <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//               </div>\n//               {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//               {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineName, setMedicineName] = useState(''); // State for medicine name\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '30px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicineName || !dosage || !duration || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//   <label style={labelStyle}>Prescriptions:</label><br /> \n//   <div style={cardContainerStyle}>\n//     <div style={cardStyle}>\n//       <p style={labelStyle}>Medicine names:</p>\n//       <input type=\"text\" style={medicineNameStyle} placeholder=\"Medicine names\" onChange={(e) => setMedicineName(e.target.value)} />\n//       {medicineName && <p style={{ marginTop: '10px' }}>Medicine names: {medicineName}</p>}\n\n//       <div style={textboxGroupStyle}>\n//         <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\n//         <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\n//         <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\n//           <option value=\"before\">Before food</option>\n//           <option value=\"after\">After food</option>\n//         </select>\n//       </div>\n//       <div style={buttonContainerStyle}>\n//         <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//       </div>\n//       {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//       {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//     </div>\n//   </div>\n// </div>\n\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineNames, setMedicineNames] = useState(['']); // State for medicine names\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '10px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicineNames([...medicineNames, '']);\n//   };\n\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicineNames = [...medicineNames];\n//     updatedMedicineNames.splice(index, 1);\n//     setMedicineNames(updatedMedicineNames);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicineNames.every(name => name.trim()) || !dosage || !duration || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   <div style={cardStyle}>\n//                     <p style={labelStyle}>Medicine names:</p>\n//                     {medicineNames.map((medicine, index) => (\n//                       <div key={index} style={{ marginBottom: '10px' }}>\n//                         <input\n//                           type=\"text\"\n//                           style={medicineNameStyle}\n//                           value={medicine}\n//                           onChange={(e) => {\n//                             const updatedMedicineNames = [...medicineNames];\n//                             updatedMedicineNames[index] = e.target.value;\n//                             setMedicineNames(updatedMedicineNames);\n//                           }}\n//                         />\n//                         <button style={{ marginLeft: '10px' }} onClick={() => handleRemoveMedicine(index)}>Remove</button>\n//                       </div>\n//                     ))}\n//                     <button onClick={handleAddMedicine}>Add Medicine</button>\n//                     <div style={textboxGroupStyle}>\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\n//                       <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\n//                         <option value=\"before\">Before food</option>\n//                         <option value=\"after\">After food</option>\n//                       </select>\n//                     </div>\n//                     <div style={buttonContainerStyle}>\n//                       <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                     </div>\n//                     {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                     {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                   </div>\n//                 </div>\n//               </div>\n\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]); // State for medicines\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                         onKeyPress={(e) => {\n//                           if (e.key === 'Enter') handleAddMedicine();\n//                         }}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                   <div style={buttonContainerStyle}>\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                   </div>\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                 </div>\n//               </div>\n\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\n//   const [ageError, setAgeError] = useState(false);\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   const [gender, setGender] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const selectedDoctor = doctors[selectedDoctorIndex];\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff',\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%',\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px',\n//     textAlign: 'right',\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%',\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%',\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px',\n//     width: '100%',\n//     height: 'auto',\n//     position: 'relative',\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px',\n//     width: '100%',\n//     fontSize: '14px',\n//     lineHeight: '1.5',\n//     marginBottom: '20px',\n//     boxSizing: 'border-box',\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1',\n//     marginBottom: '10px',\n//     width: 'calc(25% - 20px)',\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     marginBottom: '10px',\n//     alignItems: 'center',\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px',\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto',\n//     minWidth: '120px',\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto',\n//     textAlign: 'right',\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block';\n//     window.print();\n//     container.style.display = originalDisplayStyle;\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true);\n//     } else {\n//       setAgeError(false);\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n\n//     // Update the content of the next medicine box if it exists\n//     if (index < medicines.length - 1) {\n//       updatedMedicines[index + 1][field] = value;\n//     }\n\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate();\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                         onKeyPress={(e) => {\n//                           if (e.key === 'Enter') handleAddMedicine();\n//                         }}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                   <div style={buttonContainerStyle}>\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                   </div>\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\n//   const [ageError, setAgeError] = useState(false);\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   const [gender, setGender] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const selectedDoctor = doctors[selectedDoctorIndex];\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff',\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%',\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px',\n//     textAlign: 'right',\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%',\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%',\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px',\n//     width: '100%',\n//     height: 'auto',\n//     position: 'relative',\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px',\n//     width: '100%',\n//     fontSize: '14px',\n//     lineHeight: '1.5',\n//     marginBottom: '20px',\n//     boxSizing: 'border-box',\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1',\n//     marginBottom: '10px',\n//     width: 'calc(25% - 20px)',\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'none', // Hides the button container\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px',\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto',\n//     minWidth: '120px',\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto',\n//     textAlign: 'right',\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block';\n//     window.print();\n//     container.style.display = originalDisplayStyle;\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true);\n//     } else {\n//       setAgeError(false);\n//     }\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n\n//     // Update the content of the next medicine box if it exists\n//     if (index < medicines.length - 1) {\n//       updatedMedicines[index + 1][field] = value;\n//     }\n\n//     // Add a new medicine box if the last medicine box is being typed in\n//     if (index === medicines.length - 1 && value.trim() !== '') {\n//       updatedMedicines.push({ name: '', dosage: '', duration: '', frequency: '', foodType: '' });\n//     }\n\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate();\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\nvar _c;\n$RefreshReg$(_c, \"Prescription\");","map":{"version":3,"names":["React","useState","drLogo","jsxDEV","_jsxDEV","Prescription","_s","doctors","name","specialty","qualifications","address","selectedDoctorIndex","setSelectedDoctorIndex","ageError","setAgeError","medicineName","setMedicineName","medicines","setMedicines","dosage","setDosage","duration","setDuration","foodType","setFoodType","frequency","setFrequency","gender","setGender","errorMessage","setErrorMessage","successMessage","setSuccessMessage","selectedDoctor","handleAddMedicine","trim","test","newMedicine","containerStyle","maxWidth","margin","padding","bigBoxStyle","border","borderRadius","backgroundColor","marginBottom","display","flexDirection","alignItems","logoAndDoctorInfoContainerStyle","width","logoStyle","height","marginRight","labelStyle","fontWeight","textAlign","doctorInfoStyle","color","horizontalLineStyle","borderTop","inputStyle","borderBottom","outline","cardContainerStyle","cardStyle","position","textboxStyle","fontSize","lineHeight","boxSizing","textboxGroupStyle","smallTextboxStyle","flex","medicineNameStyle","buttonContainerStyle","justifyContent","buttonStyle","cursor","inputNameStyle","marginLeft","inputAgeStyle","inputGenderStyle","inputDateStyle","marginTop","minWidth","signatureDateContainer","signatureStyle","handlePrint","container","document","getElementById","content","innerHTML","printWindow","window","open","write","close","print","handleAgeChange","event","age","target","value","parseInt","handleRemoveMedicine","index","updatedMedicines","splice","handleSubmit","length","setTimeout","getCurrentDate","date","Date","year","getFullYear","month","getMonth","day","getDate","currentDate","children","style","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","map","medicine","onClick","background","placeholder","onKeyPress","key","readOnly","_c","$RefreshReg$"],"sources":["/root/sayeed/demo/meditro/src/markup/pages/prescription.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport drLogo from \"../../images/prescription/drlogo.png\";\n\nconst Prescription = () => {\n  const doctors = [\n    {\n      name: 'Dr. Bhavesh C. Jain',\n      specialty: 'Family Physician & Homeopathic Consultant',\n      qualifications: 'BHMS, MD-Homeopathy',\n      address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n    },\n    {\n      name: 'Dr. Sarah Smith',\n      specialty: 'Pediatrician',\n      qualifications: 'MBBS, DCH',\n      address: '123 Elm Street, Mumbai'\n    }\n    // Add more doctor objects as needed\n  ];\n\n  const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n  const [ageError, setAgeError] = useState(false); // State for age validation error\n  const [medicineName, setMedicineName] = useState(''); // State for medicine name\n  const [medicines, setMedicines] = useState([]); // State for medicine details\n  const [dosage, setDosage] = useState(''); // State for dosage\n  const [duration, setDuration] = useState(''); // State for duration\n  const [foodType, setFoodType] = useState('before'); // State for food type\n  const [frequency, setFrequency] = useState(''); // State for frequency\n  const [gender, setGender] = useState(''); // State for gender\n  const [errorMessage, setErrorMessage] = useState(''); // State for error message\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n  const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n  // Function to handle adding medicine details\n  const handleAddMedicine = () => {\n    if (\n      medicineName.trim() !== \"\" &&\n      dosage.trim() !== \"\" &&\n      duration.trim() !== \"\" &&\n      foodType.trim() !== \"\" &&\n      frequency.trim() !== \"\" &&\n      /^[10+]+$/.test(frequency.trim()) // Check if frequency contains only allowed characters\n    ) {\n      const newMedicine = {\n        name: medicineName.trim(),\n        dosage: dosage.trim(),\n        duration: duration.trim(),\n        foodType: foodType.trim(),\n        frequency: frequency.trim()\n      };\n      setMedicines([...medicines, newMedicine]);\n      // Clear input fields\n      setMedicineName(\"\");\n      setDosage(\"\");\n      setDuration(\"\");\n      setFoodType(\"before\");\n      setFrequency(\"\");\n    } else {\n      setErrorMessage(\"Please fill in all fields or enter a valid frequency (only '1', '+', '0', '2' are allowed).\");\n      setSuccessMessage(\"\");\n    }\n  };\n\n  const containerStyle = {\n    maxWidth: '800px',\n    margin: '100px auto 0',\n    padding: '10px',\n  };\n\n  const bigBoxStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: '#f9f9f9',\n    padding: '20px',\n    marginBottom: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  };\n\n  const logoAndDoctorInfoContainerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#6666ff', // Add background color to the container\n    borderRadius: '5px',\n    padding: '10px',\n    width: '100%', // Ensure the container takes full width\n    marginBottom: '20px',\n  };\n  \n  const logoStyle = {\n    width: '100px',\n    height: '100px',\n    marginRight: '20px',\n  };\n  const labelStyle = {\n    marginRight: '10px',\n    marginBottom: '15px',\n    fontWeight: 'bold',\n    width: '150px', // Adjusted width for labels\n    textAlign: 'right', // Align labels to the right\n  };\n  const doctorInfoStyle = {\n    color: 'white',\n  };\n  \n  const horizontalLineStyle = {\n    borderTop: '1px solid #ccc',\n    margin: '20px 0',\n    width: '100%',\n  };\n\n  const inputStyle = {\n    border: 'none',\n    borderBottom: '1px solid #ccc',\n    outline: 'none',\n    padding: '5px',\n    width: '80%', // Adjusted width for responsiveness\n    marginBottom: '10px',\n    textAlign: 'center'\n  };\n\n  const cardContainerStyle = {\n    width: '100%', // Change width to 100% for responsiveness\n    marginBottom: '10px',\n  };\n\n  const cardStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '15px', // Adjust padding to mimic the textarea size\n    width: '100%', // Adjusted width\n    height: 'auto', // Adjusted height to 'auto'\n    position: 'relative', // Position the textboxes relative to the card\n  };\n\n  const textboxStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '8px', // Adjust padding to minimize height\n    width: '100%', // Adjusted width for the first textbox\n    fontSize: '14px', // Adjust font size\n    lineHeight: '1.5', // Adjust line height\n    marginBottom: '20px', // Add margin between textboxes\n    boxSizing: 'border-box', // Include padding and border in the width\n  };\n\n  const textboxGroupStyle = {\n    display: 'flex',\n    flexDirection: 'column', // Stack the textboxes vertically\n  };\n\n  const smallTextboxStyle = {\n    ...textboxStyle,\n    flex: '1', // Use flexbox to distribute available space evenly\n    marginBottom: '10px', // Adjust margin between textboxes\n    width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n  };\n\n  const medicineNameStyle = {\n    ...textboxStyle,\n    width: '50%', // Adjusted width for the medicine name textbox\n    marginBottom: '30px', // Remove bottom margin\n    textAlign: 'left', // Align text to the left\n  };\n  \n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'center', // Center align the button horizontally\n    marginBottom: '10px',\n    alignItems: 'center', // Center align the button with the input fields\n  };\n\n  const buttonStyle = {\n    padding: '5px 15px', // Increase padding for better visibility\n    borderRadius: '5px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer',\n  };\n  \n  const inputNameStyle = {\n    ...inputStyle,\n    width: '100%', \n    marginLeft: '20px' \n  };\n  \n  \n  const inputAgeStyle = {\n    ...inputStyle,\n    width: '100%', // Adjusted width for the age input\n    marginLeft: '110px' \n  };\n\n  const inputGenderStyle = {\n    ...inputStyle,\n    width: '100%', // Adjusted width to fill the parent container\n    marginLeft: '85px' \n  };\n  \n\n  const inputDateStyle = {\n    ...inputStyle,\n    marginTop: '10px',\n    marginLeft: 'auto', // Pushes the element to the right\n    minWidth: '120px', // Ensure a minimum width for the date input\n  };\n  \n  const signatureDateContainer = {\n    marginTop: '20px',\n    marginLeft: 'auto', // Pushes the container to the right\n    textAlign: 'right', // Align content to the right\n  };\n  \n  const signatureStyle = {\n    fontWeight: 'bold',\n  };\n\n  const handlePrint = () => {\n    const container = document.getElementById('container');\n    const content = container.innerHTML;\n    const printWindow = window.open('', '_blank'); // Show container for printing\n    printWindow.document.open();\n    printWindow.document.write('<html><head><title>Print</title></head><body>' + content + '</body></html>');\n    printWindow.document.close();\n    printWindow.print();\n   \n  };\n  \n\n  const handleAgeChange = (event) => {\n    const age = event.target.value;\n    if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n      setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n    } else {\n      setAgeError(false); // Clear error if input contains only digits and age is positive\n    }\n  };\n  \n  // Function to handle removing medicine from the list\n  const handleRemoveMedicine = (index) => {\n    const updatedMedicines = [...medicines];\n    updatedMedicines.splice(index, 1);\n    setMedicines(updatedMedicines);\n  };\n\n  // Function to handle submitting the prescription form\n  const handleSubmit = () => {\n    if (medicines.length === 0 || !gender) {\n      setErrorMessage('Please fill in all fields.');\n      setSuccessMessage('');\n    } else {\n      setErrorMessage('');\n      setSuccessMessage('Information saved successfully.');\n      // Here you can add code to submit the form data\n    }\n    setTimeout(() => {\n      setErrorMessage('');\n      setSuccessMessage('');\n    }, 1000);\n  };\n\n  // Get current date in \"DD-MM-YYYY\" format\n  const getCurrentDate = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    // Add leading zero to month and day if needed\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    if (day < 10) {\n      day = `0${day}`;\n    }\n\n    return `${day}-${month}-${year}`;\n  };\n\n  const currentDate = getCurrentDate(); // Get current date\n\n  return (\n    <div>\n      <div style={containerStyle} id=\"container\">\n        <div style={bigBoxStyle}>\n          <div style={logoAndDoctorInfoContainerStyle}>\n            <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n            <div style={doctorInfoStyle}>\n              <p>{selectedDoctor.name}</p>\n              <p>{selectedDoctor.specialty}</p>\n              <p>{selectedDoctor.qualifications}</p>\n              <p>Address: {selectedDoctor.address}</p>\n            </div>\n          </div>\n          <hr style={horizontalLineStyle} />\n          <div style={{ textAlign: 'left', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n            <div style={{ textAlign: 'left', width: '100%' }}>\n              <div style={{ display: 'flex', alignItems: 'left', marginBottom: '10px' }}>\n                <div style={{ marginLeft: '15px' }}>\n                  <label style={labelStyle}>Patient's Name:</label>\n                </div>\n                <div>\n                  <input type=\"text\" style={inputNameStyle} />\n                </div>\n              </div>\n              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n                <div style={{ marginLeft: '-75px' }}>\n                  <label style={labelStyle}>Age:</label>\n                </div>\n                <div>\n                  <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n                  {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n                </div>\n              </div>\n              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n                <div style={{ marginLeft: '-50px' }}>\n                  <label style={labelStyle}>Gender:</label>\n                </div>\n                <div>\n                  <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n                    {/* <option value=\"\">Select</option> */}\n                    <option value=\"male\">Male</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n              </div>\n              <div style={{ position: 'relative' }}>\n                <label style={labelStyle}>Prescriptions:</label><br /> \n                <div style={cardContainerStyle}>\n                  {medicines.map((medicine, index) => (\n                    <div key={index} style={cardStyle}>\n                      <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>Medicine Name: {medicine.name}</p>\n                      <p>Frequency: {medicine.frequency}</p>\n                      <p>Dosage: {medicine.dosage}</p>\n                      <p>Duration: {medicine.duration}</p>\n                      <p>Food Type: {medicine.foodType}</p>\n                      <button onClick={() => handleRemoveMedicine(index)} style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'red' }}>Remove</button>\n                    </div>\n                  ))}\n                  <input type=\"text\" style={medicineNameStyle} placeholder=\"Enter medicine name\" value={medicineName} onChange={(e) => setMedicineName(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleAddMedicine()} />\n                  <div style={textboxGroupStyle}>\n                    <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg.500mg\" value={dosage} onChange={(e) => setDosage(e.target.value)} />\n                    <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Frequency e.g. 1+0+1\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n                    <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration e.g. 5 days\" value={duration} onChange={(e) => setDuration(e.target.value)} />\n                    <select style={smallTextboxStyle} value={foodType} onChange={(e) => setFoodType(e.target.value)}>\n                      <option value=\"before\">Before food</option>\n                      <option value=\"after\">After food</option>\n                    </select>\n                  </div>\n                  <div style={buttonContainerStyle}>\n                    <button onClick={handleAddMedicine}style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'blue',marginRight:'580px' }}>Add Medicine</button>\n                  </div>\n                </div>\n              </div>\n              <div style={buttonContainerStyle}>\n                <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n              </div>\n              {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n              {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n            </div>\n          </div>\n          <div style={signatureDateContainer}>\n            <div>\n              <label style={signatureStyle}>Signature : ____________________</label>\n            </div>\n            <div>\n              <label style={signatureStyle}>Date :</label>\n              <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <button style={buttonStyle} onClick={handlePrint}>Print</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Prescription;\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineName, setMedicineName] = useState(''); // State for medicine name\n//   const [medicines, setMedicines] = useState([]); // State for medicine details\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [frequency, setFrequency] = useState(''); // State for frequency\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   // Function to handle adding medicine details\n//   const handleAddMedicine = () => {\n//     if (medicineName.trim() !== \"\" && dosage.trim() !== \"\" && duration.trim() !== \"\" && foodType.trim() !== \"\" && frequency.trim() !== \"\") {\n//       const newMedicine = { name: medicineName.trim(), dosage: dosage.trim(), duration: duration.trim(), foodType: foodType.trim(), frequency: frequency.trim() };\n//       setMedicines([...medicines, newMedicine]);\n//       // Clear input fields\n//       setMedicineName('');\n//       setDosage('');\n//       setDuration('');\n//       setFoodType('before');\n//       setFrequency('');\n//     } else {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     }\n//   };\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '30px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n  \n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n  \n//   // Function to handle removing medicine from the list\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines.splice(index, 1);\n//     setMedicines(updatedMedicines);\n//   };\n\n//   // Function to handle submitting the prescription form\n//   const handleSubmit = () => {\n//     if (medicines.length === 0 || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"DD-MM-YYYY\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>Medicine Name: {medicine.name}</p>\n//                                             <p>Frequency: {medicine.frequency}</p>\n\n//                       <p>Dosage: {medicine.dosage}</p>\n//                       <p>Duration: {medicine.duration}</p>\n//                       <p>Food Type: {medicine.foodType}</p>\n//                       <button onClick={() => handleRemoveMedicine(index)} style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'red' }}>Remove</button>\n//                     </div>\n//                   ))}\n//                   <input type=\"text\" style={medicineNameStyle} placeholder=\"Enter medicine name\" value={medicineName} onChange={(e) => setMedicineName(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleAddMedicine()} />\n//                   <div style={textboxGroupStyle}>\n\n//                   <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg.500mg\" value={dosage} onChange={(e) => setDosage(e.target.value)} />\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Frequency e.g. 1+0+1\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration e.g. 5 days\" value={duration} onChange={(e) => setDuration(e.target.value)} />\n//                     <select style={smallTextboxStyle} value={foodType} onChange={(e) => setFoodType(e.target.value)}>\n//                       <option value=\"before\">Before food</option>\n//                       <option value=\"after\">After food</option>\n//                     </select>\n//                   </div>\n//                   <div style={buttonContainerStyle}>\n//                     <button onClick={handleAddMedicine}style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'blue',marginRight:'580px' }}>Add Medicine</button>\n//                   </div>\n//                 </div>\n//               </div>\n//               <div style={buttonContainerStyle}>\n//                 <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//               </div>\n//               {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//               {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineName, setMedicineName] = useState(''); // State for medicine name\n//   const [medicines, setMedicines] = useState([]); // State for medicine details\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [frequency, setFrequency] = useState(''); // State for frequency\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   // Function to handle adding medicine details\n//   const handleAddMedicine = () => {\n//     if (medicineName.trim() !== \"\" && dosage.trim() !== \"\" && duration.trim() !== \"\" && foodType.trim() !== \"\" && frequency.trim() !== \"\") {\n//       const newMedicine = { name: medicineName.trim(), dosage: dosage.trim(), duration: duration.trim(), foodType: foodType.trim(), frequency: frequency.trim() };\n//       setMedicines([...medicines, newMedicine]);\n//       // Clear input fields\n//       setMedicineName('');\n//       setDosage('');\n//       setDuration('');\n//       setFoodType('before');\n//       setFrequency('');\n//     } else {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     }\n//   };\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '30px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n  \n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n  \n//   // Function to handle removing medicine from the list\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines.splice(index, 1);\n//     setMedicines(updatedMedicines);\n//   };\n\n//   // Function to handle submitting the prescription form\n//   const handleSubmit = () => {\n//     if (medicines.length === 0 || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"DD-MM-YYYY\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>Medicine Name: {medicine.name}</p>\n//                       <p>Dosage: {medicine.dosage}</p>\n//                       <p>Duration: {medicine.duration}</p>\n//                       <p>Food Type: {medicine.foodType}</p>\n//                       <p>Frequency: {medicine.frequency}</p>\n//                       <button onClick={() => handleRemoveMedicine(index)} style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'red' }}>Remove</button>\n//                     </div>\n//                   ))}\n//                   <input type=\"text\" style={medicineNameStyle} placeholder=\"Enter medicine name\" value={medicineName} onChange={(e) => setMedicineName(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleAddMedicine()} />\n//                   <div style={textboxGroupStyle}>\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage e.g. 1+0+1\" value={dosage} onChange={(e) => setDosage(e.target.value)} />\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration e.g. 5 days\" value={duration} onChange={(e) => setDuration(e.target.value)} />\n//                     <select style={smallTextboxStyle} value={foodType} onChange={(e) => setFoodType(e.target.value)}>\n//                       <option value=\"before\">Before food</option>\n//                       <option value=\"after\">After food</option>\n//                     </select>\n//                     <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Frequency\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n//                   </div>\n//                 </div>\n//               </div>\n//               <div style={buttonContainerStyle}>\n//                 <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//               </div>\n//               {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//               {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineName, setMedicineName] = useState(''); // State for medicine name\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '30px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n  \n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n  \n\n//   const handleSubmit = () => {\n//     if (!medicineName || !dosage || !duration || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//   <label style={labelStyle}>Prescriptions:</label><br /> \n//   <div style={cardContainerStyle}>\n//     <div style={cardStyle}>\n//       <p style={labelStyle}>Medicine names:</p>\n//       <input type=\"text\" style={medicineNameStyle} placeholder=\"Medicine names\" onChange={(e) => setMedicineName(e.target.value)} />\n//       {medicineName && <p style={{ marginTop: '10px' }}>Medicine names: {medicineName}</p>}\n\n//       <div style={textboxGroupStyle}>\n//         <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\n//         <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\n//         <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\n//           <option value=\"before\">Before food</option>\n//           <option value=\"after\">After food</option>\n//         </select>\n//       </div>\n//       <div style={buttonContainerStyle}>\n//         <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//       </div>\n//       {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//       {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//     </div>\n//   </div>\n// </div>\n\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineNames, setMedicineNames] = useState(['']); // State for medicine names\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '10px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n  \n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicineNames([...medicineNames, '']);\n//   };\n\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicineNames = [...medicineNames];\n//     updatedMedicineNames.splice(index, 1);\n//     setMedicineNames(updatedMedicineNames);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicineNames.every(name => name.trim()) || !dosage || !duration || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   <div style={cardStyle}>\n//                     <p style={labelStyle}>Medicine names:</p>\n//                     {medicineNames.map((medicine, index) => (\n//                       <div key={index} style={{ marginBottom: '10px' }}>\n//                         <input\n//                           type=\"text\"\n//                           style={medicineNameStyle}\n//                           value={medicine}\n//                           onChange={(e) => {\n//                             const updatedMedicineNames = [...medicineNames];\n//                             updatedMedicineNames[index] = e.target.value;\n//                             setMedicineNames(updatedMedicineNames);\n//                           }}\n//                         />\n//                         <button style={{ marginLeft: '10px' }} onClick={() => handleRemoveMedicine(index)}>Remove</button>\n//                       </div>\n//                     ))}\n//                     <button onClick={handleAddMedicine}>Add Medicine</button>\n//                     <div style={textboxGroupStyle}>\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\n//                       <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\n//                         <option value=\"before\">Before food</option>\n//                         <option value=\"after\">After food</option>\n//                       </select>\n//                     </div>\n//                     <div style={buttonContainerStyle}>\n//                       <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                     </div>\n//                     {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                     {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                   </div>\n//                 </div>\n//               </div>\n              \n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]); // State for medicines\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                         onKeyPress={(e) => {\n//                           if (e.key === 'Enter') handleAddMedicine();\n//                         }}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                   <div style={buttonContainerStyle}>\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                   </div>\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                 </div>\n//               </div>\n              \n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\n//   const [ageError, setAgeError] = useState(false);\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   const [gender, setGender] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const selectedDoctor = doctors[selectedDoctorIndex];\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff',\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%',\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px',\n//     textAlign: 'right',\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%',\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%',\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px',\n//     width: '100%',\n//     height: 'auto',\n//     position: 'relative',\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px',\n//     width: '100%',\n//     fontSize: '14px',\n//     lineHeight: '1.5',\n//     marginBottom: '20px',\n//     boxSizing: 'border-box',\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1',\n//     marginBottom: '10px',\n//     width: 'calc(25% - 20px)',\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     marginBottom: '10px',\n//     alignItems: 'center',\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px',\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto',\n//     minWidth: '120px',\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto',\n//     textAlign: 'right',\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block';\n//     window.print();\n//     container.style.display = originalDisplayStyle;\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true);\n//     } else {\n//       setAgeError(false);\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n    \n//     // Update the content of the next medicine box if it exists\n//     if (index < medicines.length - 1) {\n//       updatedMedicines[index + 1][field] = value;\n//     }\n    \n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate();\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                         onKeyPress={(e) => {\n//                           if (e.key === 'Enter') handleAddMedicine();\n//                         }}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                   <div style={buttonContainerStyle}>\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                   </div>\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\n//   const [ageError, setAgeError] = useState(false);\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   const [gender, setGender] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const selectedDoctor = doctors[selectedDoctorIndex];\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff',\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%',\n//     marginBottom: '20px',\n//   };\n  \n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px',\n//     textAlign: 'right',\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n  \n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%',\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%',\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px',\n//     width: '100%',\n//     height: 'auto',\n//     position: 'relative',\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px',\n//     width: '100%',\n//     fontSize: '14px',\n//     lineHeight: '1.5',\n//     marginBottom: '20px',\n//     boxSizing: 'border-box',\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1',\n//     marginBottom: '10px',\n//     width: 'calc(25% - 20px)',\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'none', // Hides the button container\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px',\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n  \n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto',\n//     minWidth: '120px',\n//   };\n  \n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto',\n//     textAlign: 'right',\n//   };\n  \n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block';\n//     window.print();\n//     container.style.display = originalDisplayStyle;\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true);\n//     } else {\n//       setAgeError(false);\n//     }\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n    \n//     // Update the content of the next medicine box if it exists\n//     if (index < medicines.length - 1) {\n//       updatedMedicines[index + 1][field] = value;\n//     }\n    \n//     // Add a new medicine box if the last medicine box is being typed in\n//     if (index === medicines.length - 1 && value.trim() !== '') {\n//       updatedMedicines.push({ name: '', dosage: '', duration: '', frequency: '', foodType: '' });\n//     }\n    \n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate();\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,qBAAqB;IAC3BC,SAAS,EAAE,2CAA2C;IACtDC,cAAc,EAAE,qBAAqB;IACrCC,OAAO,EAAE;EACX,CAAC,EACD;IACEH,IAAI,EAAE,iBAAiB;IACvBC,SAAS,EAAE,cAAc;IACzBC,cAAc,EAAE,WAAW;IAC3BC,OAAO,EAAE;EACX;EACA;EAAA,CACD;;EAED,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACpD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1D,MAAMiC,cAAc,GAAG3B,OAAO,CAACK,mBAAmB,CAAC,CAAC,CAAC;;EAErD;EACA,MAAMuB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IACEnB,YAAY,CAACoB,IAAI,CAAC,CAAC,KAAK,EAAE,IAC1BhB,MAAM,CAACgB,IAAI,CAAC,CAAC,KAAK,EAAE,IACpBd,QAAQ,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,IACtBZ,QAAQ,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,IACtBV,SAAS,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,IACvB,UAAU,CAACC,IAAI,CAACX,SAAS,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,EAClC;MACA,MAAME,WAAW,GAAG;QAClB9B,IAAI,EAAEQ,YAAY,CAACoB,IAAI,CAAC,CAAC;QACzBhB,MAAM,EAAEA,MAAM,CAACgB,IAAI,CAAC,CAAC;QACrBd,QAAQ,EAAEA,QAAQ,CAACc,IAAI,CAAC,CAAC;QACzBZ,QAAQ,EAAEA,QAAQ,CAACY,IAAI,CAAC,CAAC;QACzBV,SAAS,EAAEA,SAAS,CAACU,IAAI,CAAC;MAC5B,CAAC;MACDjB,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEoB,WAAW,CAAC,CAAC;MACzC;MACArB,eAAe,CAAC,EAAE,CAAC;MACnBI,SAAS,CAAC,EAAE,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,QAAQ,CAAC;MACrBE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACLI,eAAe,CAAC,6FAA6F,CAAC;MAC9GE,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EAED,MAAMM,cAAc,GAAG;IACrBC,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE,cAAc;IACtBC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,SAAS;IAC1BJ,OAAO,EAAE,MAAM;IACfK,YAAY,EAAE,MAAM;IACpBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,+BAA+B,GAAG;IACtCH,OAAO,EAAE,MAAM;IACfE,UAAU,EAAE,QAAQ;IACpBJ,eAAe,EAAE,SAAS;IAAE;IAC5BD,YAAY,EAAE,KAAK;IACnBH,OAAO,EAAE,MAAM;IACfU,KAAK,EAAE,MAAM;IAAE;IACfL,YAAY,EAAE;EAChB,CAAC;EAED,MAAMM,SAAS,GAAG;IAChBD,KAAK,EAAE,OAAO;IACdE,MAAM,EAAE,OAAO;IACfC,WAAW,EAAE;EACf,CAAC;EACD,MAAMC,UAAU,GAAG;IACjBD,WAAW,EAAE,MAAM;IACnBR,YAAY,EAAE,MAAM;IACpBU,UAAU,EAAE,MAAM;IAClBL,KAAK,EAAE,OAAO;IAAE;IAChBM,SAAS,EAAE,OAAO,CAAE;EACtB,CAAC;;EACD,MAAMC,eAAe,GAAG;IACtBC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,mBAAmB,GAAG;IAC1BC,SAAS,EAAE,gBAAgB;IAC3BrB,MAAM,EAAE,QAAQ;IAChBW,KAAK,EAAE;EACT,CAAC;EAED,MAAMW,UAAU,GAAG;IACjBnB,MAAM,EAAE,MAAM;IACdoB,YAAY,EAAE,gBAAgB;IAC9BC,OAAO,EAAE,MAAM;IACfvB,OAAO,EAAE,KAAK;IACdU,KAAK,EAAE,KAAK;IAAE;IACdL,YAAY,EAAE,MAAM;IACpBW,SAAS,EAAE;EACb,CAAC;EAED,MAAMQ,kBAAkB,GAAG;IACzBd,KAAK,EAAE,MAAM;IAAE;IACfL,YAAY,EAAE;EAChB,CAAC;EAED,MAAMoB,SAAS,GAAG;IAChBvB,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBH,OAAO,EAAE,MAAM;IAAE;IACjBU,KAAK,EAAE,MAAM;IAAE;IACfE,MAAM,EAAE,MAAM;IAAE;IAChBc,QAAQ,EAAE,UAAU,CAAE;EACxB,CAAC;;EAED,MAAMC,YAAY,GAAG;IACnBzB,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBH,OAAO,EAAE,KAAK;IAAE;IAChBU,KAAK,EAAE,MAAM;IAAE;IACfkB,QAAQ,EAAE,MAAM;IAAE;IAClBC,UAAU,EAAE,KAAK;IAAE;IACnBxB,YAAY,EAAE,MAAM;IAAE;IACtByB,SAAS,EAAE,YAAY,CAAE;EAC3B,CAAC;;EAED,MAAMC,iBAAiB,GAAG;IACxBzB,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ,CAAE;EAC3B,CAAC;;EAED,MAAMyB,iBAAiB,GAAG;IACxB,GAAGL,YAAY;IACfM,IAAI,EAAE,GAAG;IAAE;IACX5B,YAAY,EAAE,MAAM;IAAE;IACtBK,KAAK,EAAE,kBAAkB,CAAE;EAC7B,CAAC;;EAED,MAAMwB,iBAAiB,GAAG;IACxB,GAAGP,YAAY;IACfjB,KAAK,EAAE,KAAK;IAAE;IACdL,YAAY,EAAE,MAAM;IAAE;IACtBW,SAAS,EAAE,MAAM,CAAE;EACrB,CAAC;;EAED,MAAMmB,oBAAoB,GAAG;IAC3B7B,OAAO,EAAE,MAAM;IACf8B,cAAc,EAAE,QAAQ;IAAE;IAC1B/B,YAAY,EAAE,MAAM;IACpBG,UAAU,EAAE,QAAQ,CAAE;EACxB,CAAC;;EAED,MAAM6B,WAAW,GAAG;IAClBrC,OAAO,EAAE,UAAU;IAAE;IACrBG,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,SAAS;IAC1Bc,KAAK,EAAE,MAAM;IACbhB,MAAM,EAAE,MAAM;IACdoC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,cAAc,GAAG;IACrB,GAAGlB,UAAU;IACbX,KAAK,EAAE,MAAM;IACb8B,UAAU,EAAE;EACd,CAAC;EAGD,MAAMC,aAAa,GAAG;IACpB,GAAGpB,UAAU;IACbX,KAAK,EAAE,MAAM;IAAE;IACf8B,UAAU,EAAE;EACd,CAAC;EAED,MAAME,gBAAgB,GAAG;IACvB,GAAGrB,UAAU;IACbX,KAAK,EAAE,MAAM;IAAE;IACf8B,UAAU,EAAE;EACd,CAAC;EAGD,MAAMG,cAAc,GAAG;IACrB,GAAGtB,UAAU;IACbuB,SAAS,EAAE,MAAM;IACjBJ,UAAU,EAAE,MAAM;IAAE;IACpBK,QAAQ,EAAE,OAAO,CAAE;EACrB,CAAC;;EAED,MAAMC,sBAAsB,GAAG;IAC7BF,SAAS,EAAE,MAAM;IACjBJ,UAAU,EAAE,MAAM;IAAE;IACpBxB,SAAS,EAAE,OAAO,CAAE;EACtB,CAAC;;EAED,MAAM+B,cAAc,GAAG;IACrBhC,UAAU,EAAE;EACd,CAAC;EAED,MAAMiC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACtD,MAAMC,OAAO,GAAGH,SAAS,CAACI,SAAS;IACnC,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC/CF,WAAW,CAACJ,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC3BF,WAAW,CAACJ,QAAQ,CAACO,KAAK,CAAC,+CAA+C,GAAGL,OAAO,GAAG,gBAAgB,CAAC;IACxGE,WAAW,CAACJ,QAAQ,CAACQ,KAAK,CAAC,CAAC;IAC5BJ,WAAW,CAACK,KAAK,CAAC,CAAC;EAErB,CAAC;EAGD,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC9B,IAAI,CAAC,OAAO,CAACrE,IAAI,CAACmE,GAAG,CAAC,IAAIG,QAAQ,CAACH,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;MAChDzF,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLA,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAM6F,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,gBAAgB,GAAG,CAAC,GAAG5F,SAAS,CAAC;IACvC4F,gBAAgB,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjC1F,YAAY,CAAC2F,gBAAgB,CAAC;EAChC,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI9F,SAAS,CAAC+F,MAAM,KAAK,CAAC,IAAI,CAACrF,MAAM,EAAE;MACrCG,eAAe,CAAC,4BAA4B,CAAC;MAC7CE,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,MAAM;MACLF,eAAe,CAAC,EAAE,CAAC;MACnBE,iBAAiB,CAAC,iCAAiC,CAAC;MACpD;IACF;;IACAiF,UAAU,CAAC,MAAM;MACfnF,eAAe,CAAC,EAAE,CAAC;MACnBE,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMkF,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvB,MAAMC,IAAI,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;IAC/B,IAAIC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC/B,IAAIC,GAAG,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC;;IAExB;IACA,IAAIH,KAAK,GAAG,EAAE,EAAE;MACdA,KAAK,GAAI,IAAGA,KAAM,EAAC;IACrB;IACA,IAAIE,GAAG,GAAG,EAAE,EAAE;MACZA,GAAG,GAAI,IAAGA,GAAI,EAAC;IACjB;IAEA,OAAQ,GAAEA,GAAI,IAAGF,KAAM,IAAGF,IAAK,EAAC;EAClC,CAAC;EAED,MAAMM,WAAW,GAAGT,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtC,oBACE/G,OAAA;IAAAyH,QAAA,gBACEzH,OAAA;MAAK0H,KAAK,EAAEvF,cAAe;MAACwF,EAAE,EAAC,WAAW;MAAAF,QAAA,eACxCzH,OAAA;QAAK0H,KAAK,EAAEnF,WAAY;QAAAkF,QAAA,gBACtBzH,OAAA;UAAK0H,KAAK,EAAE3E,+BAAgC;UAAA0E,QAAA,gBAC1CzH,OAAA;YAAK4H,GAAG,EAAE9H,MAAO;YAAC+H,GAAG,EAAC,MAAM;YAACH,KAAK,EAAEzE;UAAU;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjDjI,OAAA;YAAK0H,KAAK,EAAEnE,eAAgB;YAAAkE,QAAA,gBAC1BzH,OAAA;cAAAyH,QAAA,EAAI3F,cAAc,CAAC1B;YAAI;cAAA0H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5BjI,OAAA;cAAAyH,QAAA,EAAI3F,cAAc,CAACzB;YAAS;cAAAyH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjCjI,OAAA;cAAAyH,QAAA,EAAI3F,cAAc,CAACxB;YAAc;cAAAwH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtCjI,OAAA;cAAAyH,QAAA,GAAG,WAAS,EAAC3F,cAAc,CAACvB,OAAO;YAAA;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjI,OAAA;UAAI0H,KAAK,EAAEjE;QAAoB;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClCjI,OAAA;UAAK0H,KAAK,EAAE;YAAEpE,SAAS,EAAE,MAAM;YAAEN,KAAK,EAAE,MAAM;YAAEJ,OAAO,EAAE,MAAM;YAAE8B,cAAc,EAAE;UAAgB,CAAE;UAAA+C,QAAA,eACjGzH,OAAA;YAAK0H,KAAK,EAAE;cAAEpE,SAAS,EAAE,MAAM;cAAEN,KAAK,EAAE;YAAO,CAAE;YAAAyE,QAAA,gBAC/CzH,OAAA;cAAK0H,KAAK,EAAE;gBAAE9E,OAAO,EAAE,MAAM;gBAAEE,UAAU,EAAE,MAAM;gBAAEH,YAAY,EAAE;cAAO,CAAE;cAAA8E,QAAA,gBACxEzH,OAAA;gBAAK0H,KAAK,EAAE;kBAAE5C,UAAU,EAAE;gBAAO,CAAE;gBAAA2C,QAAA,eACjCzH,OAAA;kBAAO0H,KAAK,EAAEtE,UAAW;kBAAAqE,QAAA,EAAC;gBAAe;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eACNjI,OAAA;gBAAAyH,QAAA,eACEzH,OAAA;kBAAOkI,IAAI,EAAC,MAAM;kBAACR,KAAK,EAAE7C;gBAAe;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNjI,OAAA;cAAK0H,KAAK,EAAE;gBAAE9E,OAAO,EAAE,MAAM;gBAAEE,UAAU,EAAE,QAAQ;gBAAEH,YAAY,EAAE;cAAO,CAAE;cAAA8E,QAAA,gBAC1EzH,OAAA;gBAAK0H,KAAK,EAAE;kBAAE5C,UAAU,EAAE;gBAAQ,CAAE;gBAAA2C,QAAA,eAClCzH,OAAA;kBAAO0H,KAAK,EAAEtE,UAAW;kBAAAqE,QAAA,EAAC;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC,eACNjI,OAAA;gBAAAyH,QAAA,gBACEzH,OAAA;kBAAOkI,IAAI,EAAC,QAAQ;kBAACR,KAAK,EAAE3C,aAAc;kBAACoD,QAAQ,EAAEjC;gBAAgB;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,EACvEvH,QAAQ,iBAAIV,OAAA;kBAAM0H,KAAK,EAAE;oBAAElE,KAAK,EAAE;kBAAO,CAAE;kBAAAiE,QAAA,gBAACzH,OAAA;oBAAA8H,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,oCAAgC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNjI,OAAA;cAAK0H,KAAK,EAAE;gBAAE9E,OAAO,EAAE,MAAM;gBAAEE,UAAU,EAAE,QAAQ;gBAAEH,YAAY,EAAE;cAAO,CAAE;cAAA8E,QAAA,gBAC1EzH,OAAA;gBAAK0H,KAAK,EAAE;kBAAE5C,UAAU,EAAE;gBAAQ,CAAE;gBAAA2C,QAAA,eAClCzH,OAAA;kBAAO0H,KAAK,EAAEtE,UAAW;kBAAAqE,QAAA,EAAC;gBAAO;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC,eACNjI,OAAA;gBAAAyH,QAAA,eACEzH,OAAA;kBAAQ0H,KAAK,EAAE1C,gBAAiB;kBAACmD,QAAQ,EAAGC,CAAC,IAAK3G,SAAS,CAAC2G,CAAC,CAAC/B,MAAM,CAACC,KAAK,CAAE;kBAAAmB,QAAA,gBAE1EzH,OAAA;oBAAQsG,KAAK,EAAC,MAAM;oBAAAmB,QAAA,EAAC;kBAAI;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAClCjI,OAAA;oBAAQsG,KAAK,EAAC,QAAQ;oBAAAmB,QAAA,EAAC;kBAAM;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtCjI,OAAA;oBAAQsG,KAAK,EAAC,OAAO;oBAAAmB,QAAA,EAAC;kBAAK;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNjI,OAAA;cAAK0H,KAAK,EAAE;gBAAE1D,QAAQ,EAAE;cAAW,CAAE;cAAAyD,QAAA,gBACnCzH,OAAA;gBAAO0H,KAAK,EAAEtE,UAAW;gBAAAqE,QAAA,EAAC;cAAc;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAAAjI,OAAA;gBAAA8H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtDjI,OAAA;gBAAK0H,KAAK,EAAE5D,kBAAmB;gBAAA2D,QAAA,GAC5B3G,SAAS,CAACuH,GAAG,CAAC,CAACC,QAAQ,EAAE7B,KAAK,kBAC7BzG,OAAA;kBAAiB0H,KAAK,EAAE3D,SAAU;kBAAA0D,QAAA,gBAChCzH,OAAA;oBAAG0H,KAAK,EAAE;sBAAErE,UAAU,EAAE,MAAM;sBAAEV,YAAY,EAAE;oBAAO,CAAE;oBAAA8E,QAAA,GAAC,iBAAe,EAACa,QAAQ,CAAClI,IAAI;kBAAA;oBAAA0H,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC1FjI,OAAA;oBAAAyH,QAAA,GAAG,aAAW,EAACa,QAAQ,CAAChH,SAAS;kBAAA;oBAAAwG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACtCjI,OAAA;oBAAAyH,QAAA,GAAG,UAAQ,EAACa,QAAQ,CAACtH,MAAM;kBAAA;oBAAA8G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChCjI,OAAA;oBAAAyH,QAAA,GAAG,YAAU,EAACa,QAAQ,CAACpH,QAAQ;kBAAA;oBAAA4G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACpCjI,OAAA;oBAAAyH,QAAA,GAAG,aAAW,EAACa,QAAQ,CAAClH,QAAQ;kBAAA;oBAAA0G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrCjI,OAAA;oBAAQuI,OAAO,EAAEA,CAAA,KAAM/B,oBAAoB,CAACC,KAAK,CAAE;oBAACiB,KAAK,EAAE;sBAAEc,UAAU,EAAE,MAAM;sBAAEhG,MAAM,EAAE,MAAM;sBAAEoC,MAAM,EAAE,SAAS;sBAAEpB,KAAK,EAAE;oBAAM,CAAE;oBAAAiE,QAAA,EAAC;kBAAM;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GAN3IxB,KAAK;kBAAAqB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAOV,CACN,CAAC,eACFjI,OAAA;kBAAOkI,IAAI,EAAC,MAAM;kBAACR,KAAK,EAAElD,iBAAkB;kBAACiE,WAAW,EAAC,qBAAqB;kBAACnC,KAAK,EAAE1F,YAAa;kBAACuH,QAAQ,EAAGC,CAAC,IAAKvH,eAAe,CAACuH,CAAC,CAAC/B,MAAM,CAACC,KAAK,CAAE;kBAACoC,UAAU,EAAGN,CAAC,IAAKA,CAAC,CAACO,GAAG,KAAK,OAAO,IAAI5G,iBAAiB,CAAC;gBAAE;kBAAA+F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACrNjI,OAAA;kBAAK0H,KAAK,EAAErD,iBAAkB;kBAAAoD,QAAA,gBAC5BzH,OAAA;oBAAOkI,IAAI,EAAC,MAAM;oBAACR,KAAK,EAAE;sBAAE,GAAGpD,iBAAiB;sBAAE3B,YAAY,EAAE;oBAAO,CAAE;oBAAC8F,WAAW,EAAC,iBAAiB;oBAACnC,KAAK,EAAEtF,MAAO;oBAACmH,QAAQ,EAAGC,CAAC,IAAKnH,SAAS,CAACmH,CAAC,CAAC/B,MAAM,CAACC,KAAK;kBAAE;oBAAAwB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACrKjI,OAAA;oBAAOkI,IAAI,EAAC,MAAM;oBAACR,KAAK,EAAE;sBAAE,GAAGpD,iBAAiB;sBAAE3B,YAAY,EAAE;oBAAO,CAAE;oBAAC8F,WAAW,EAAC,sBAAsB;oBAACnC,KAAK,EAAEhF,SAAU;oBAAC6G,QAAQ,EAAGC,CAAC,IAAK7G,YAAY,CAAC6G,CAAC,CAAC/B,MAAM,CAACC,KAAK;kBAAE;oBAAAwB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAChLjI,OAAA;oBAAOkI,IAAI,EAAC,MAAM;oBAACR,KAAK,EAAE;sBAAE,GAAGpD,iBAAiB;sBAAE3B,YAAY,EAAE;oBAAO,CAAE;oBAAC8F,WAAW,EAAC,sBAAsB;oBAACnC,KAAK,EAAEpF,QAAS;oBAACiH,QAAQ,EAAGC,CAAC,IAAKjH,WAAW,CAACiH,CAAC,CAAC/B,MAAM,CAACC,KAAK;kBAAE;oBAAAwB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAC9KjI,OAAA;oBAAQ0H,KAAK,EAAEpD,iBAAkB;oBAACgC,KAAK,EAAElF,QAAS;oBAAC+G,QAAQ,EAAGC,CAAC,IAAK/G,WAAW,CAAC+G,CAAC,CAAC/B,MAAM,CAACC,KAAK,CAAE;oBAAAmB,QAAA,gBAC9FzH,OAAA;sBAAQsG,KAAK,EAAC,QAAQ;sBAAAmB,QAAA,EAAC;oBAAW;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAC3CjI,OAAA;sBAAQsG,KAAK,EAAC,OAAO;sBAAAmB,QAAA,EAAC;oBAAU;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,eACNjI,OAAA;kBAAK0H,KAAK,EAAEjD,oBAAqB;kBAAAgD,QAAA,eAC/BzH,OAAA;oBAAQuI,OAAO,EAAExG,iBAAkB;oBAAA2F,KAAK,EAAE;sBAAEc,UAAU,EAAE,MAAM;sBAAEhG,MAAM,EAAE,MAAM;sBAAEoC,MAAM,EAAE,SAAS;sBAAEpB,KAAK,EAAE,MAAM;sBAACL,WAAW,EAAC;oBAAQ,CAAE;oBAAAsE,QAAA,EAAC;kBAAY;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1J,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNjI,OAAA;cAAK0H,KAAK,EAAEjD,oBAAqB;cAAAgD,QAAA,eAC/BzH,OAAA;gBAAQ0H,KAAK,EAAE/C,WAAY;gBAAC4D,OAAO,EAAE3B,YAAa;gBAAAa,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D,CAAC,EACLvG,YAAY,iBAAI1B,OAAA;cAAG0H,KAAK,EAAE;gBAAElE,KAAK,EAAE;cAAM,CAAE;cAAAiE,QAAA,EAAE/F;YAAY;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC9DrG,cAAc,iBAAI5B,OAAA;cAAG0H,KAAK,EAAE;gBAAElE,KAAK,EAAE;cAAQ,CAAE;cAAAiE,QAAA,EAAE7F;YAAc;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjI,OAAA;UAAK0H,KAAK,EAAEtC,sBAAuB;UAAAqC,QAAA,gBACjCzH,OAAA;YAAAyH,QAAA,eACEzH,OAAA;cAAO0H,KAAK,EAAErC,cAAe;cAAAoC,QAAA,EAAC;YAAgC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC,eACNjI,OAAA;YAAAyH,QAAA,gBACEzH,OAAA;cAAO0H,KAAK,EAAErC,cAAe;cAAAoC,QAAA,EAAC;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5CjI,OAAA;cAAOkI,IAAI,EAAC,MAAM;cAACR,KAAK,EAAE;gBAAE,GAAGzC;cAAe,CAAE;cAACqB,KAAK,EAAEkB,WAAY;cAACoB,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjI,OAAA;MAAK0H,KAAK,EAAE;QAAEpE,SAAS,EAAE,QAAQ;QAAE4B,SAAS,EAAE;MAAO,CAAE;MAAAuC,QAAA,eACrDzH,OAAA;QAAQ0H,KAAK,EAAE/C,WAAY;QAAC4D,OAAO,EAAEjD,WAAY;QAAAmC,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/H,EAAA,CA1XID,YAAY;AAAA4I,EAAA,GAAZ5I,YAAY;AA4XlB,eAAeA,YAAY;;AAaae},"metadata":{},"sourceType":"module","externalDependencies":[]}