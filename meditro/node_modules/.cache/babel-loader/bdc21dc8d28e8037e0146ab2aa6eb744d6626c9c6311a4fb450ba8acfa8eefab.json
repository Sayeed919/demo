{"ast":null,"code":"import _regeneratorRuntime from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// import React, { Component } from 'react';\n// class appointmentForm extends Component{\n// \trender(){\n// \t\treturn(\n// \t\t\t<>\n// \t\t\t\t<div className=\"appointment-form form-wraper\">\n// \t\t\t\t\t<h3 className=\"title\">Book Appointment</h3>\n// \t\t\t\t\t<form action=\"#\">\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Selecty Department</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Select Doctor</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Your Name\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n//     \t\t\t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\"Your Email\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"date\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"slot\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n// \t\t\t</>\n// \t\t);\n// \t}\n// }\n// export default appointmentForm;\n// import React, { Component } from 'react';\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"\" className=\"form-control\" placeholder=\"Slot\" onClick={this.toggleSlotPopup} value={selectedSlot} />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//         {showSlotPopup &&\n//           <div className=\"slot-popup\">\n//             <h3>Select Slot</h3>\n//             <ul>\n//               {timeSlots.map((slot, index) => (\n//                 <li key={index} onClick={() => this.selectSlot(slot.time)}>{slot.time}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         }\n//       </>\n//     );\n//   }\n// }\n// export default AppointmentForm;\n// import React, { Component } from 'react';\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       selectedSlot: ''\n//     };\n//   }\n//   handleSlotChange = (event) => {\n//     this.setState({\n//       selectedSlot: event.target.value\n//     });\n//   }\n//   render() {\n//     const { selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n//     return (\n//       <div className=\"appointment-form form-wraper\">\n//         <h3 className=\"title\">Book Appointment</h3>\n//         <form action=\"#\">\n//           <div className=\"form-group\">\n//             <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"date\" className=\"form-control\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <select className=\"form-control\" value={selectedSlot} onChange={this.handleSlotChange}>\n//               <option value=\"\">Select Slot</option>\n//               {timeSlots.map((slot, index) => (\n//                 <option key={index} value={slot.time}>{slot.time}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// export default AppointmentForm;\n// import React, { Component } from 'react';\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer'\n//                         }} onClick={() => this.selectSlot(slot.time)}>\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n// export default AppointmentForm;\n// import React, { Component } from 'react';\n// import React, { useState } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n// class AppointmentForm extends Component {\n// \tconst [phone, setPhone] = useState(\"\");\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             {/* <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div> */}\n// \t\t\t<div className=\"form-group\">\n//             <PhoneInput\n//               country={'eg'} // Default country\n//               enableSearch={true}\n//               value={phone}\n//               onChange={(phone) => setPhone(phone)}\n//             />\n//           </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" placeholder=\"date\"/>\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s', // Add transition for smooth hover effect\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = '#fa7b14'} // Change background color on hover\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'} // Revert background color on hover out\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     {/* <button onClick={this.toggleSlotPopup}>Close</button> */}\n// \t\t\t\t\t<button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '6px 10px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n// export default AppointmentForm;\n// import React, { Component } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n// import 'react-phone-input-2/lib/style.css';\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: '',\n//       phone: \"\",\n//       name: \"\",\n//       email: \"\",\n//       date: \"\",\n//       bookingSuccess: false\n//     };\n//   }\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n//   handlePhoneChange = (value) => {\n//     this.setState({\n//       phone: value\n//     });\n//   }\n//   handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     const { name, email, phone, date, selectedSlot } = this.state;\n//     if (!name || !email || !phone || !date || !selectedSlot){\n//       alert(\"Please fill all the fields\");\n//       return;\n//     }\n//     try {\n//       const bookingResponse = await fetch('http://localhost:5050/booking', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           name,\n//           email,\n//           phone,\n//           date,\n//           slot: selectedSlot\n//         })\n//       });\n//       if (bookingResponse.ok) {\n//         // Handle successful booking\n//         // console.log('Booking successful');\n//         this.setState({\n//           bookingSuccess: true,\n//           name: \"\",\n//           email: \"\",\n//           phone: \"\",\n//           date: \"\",\n//           selectedSlot: \"\"\n//         });\n//         setTimeout(() => {\n//           this.setState({ bookingSuccess: false });\n//         }, 3000);\n//       } else {\n//         // Handle error in booking\n//         console.error('Booking failed');\n//       }\n//     } catch (error) {\n//       console.error('Error occurred:', error);\n//     }\n//   }\n//   render() {\n//     const { showSlotPopup, selectedSlot, phone, bookingSuccess } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form onSubmit={this.handleFormSubmit}>\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" onChange={(e) => this.setState({ name: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" onChange={(e) => this.setState({ email: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <PhoneInput\n//                 country={'in'} // Default country\n//                 enableSearch={true}\n//                 value={phone}\n//                 onChange={this.handlePhoneChange}\n//                 inputStyle={{ width: '100%', height: '60px', borderRadius: '10px', alignItems: 'center',fontSize: '18px' }} //\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" onChange={(e) => this.setState({ date: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//                 readOnly\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s',\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = 'orange'}\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'}\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '8px 12px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Book Appointment</button>\n//             {/* {bookingSuccess && (\n//               <div className=\"success-message\">Appointment booked successfully!</div>\n//             )} */}\n//           </form>\n//           {bookingSuccess && (\n//               <div className=\"success-message\" style={{ backgroundColor: '#5734bf', color: 'white', padding: '10px', borderRadius: '5px', marginTop: '10px' }} >Appointment booked successfully!</div>\n//             )}\n//         </div>\n//       </>\n//     );\n//   }\n// }\n// export default AppointmentForm;\n//final code\nimport React,{Component}from'react';import PhoneInput from'react-phone-input-2';import'react-phone-input-2/lib/style.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AppointmentForm=/*#__PURE__*/function(_Component){_inherits(AppointmentForm,_Component);var _super=_createSuper(AppointmentForm);function AppointmentForm(props){var _this;_classCallCheck(this,AppointmentForm);_this=_super.call(this,props);_this.toggleSlotPopup=function(){_this.setState(function(prevState){return{showSlotPopup:!prevState.showSlotPopup};});};_this.selectSlot=function(slot){_this.setState({selectedSlot:slot,showSlotPopup:false});};_this.handlePhoneChange=function(value){_this.setState({phone:value});};// handleFormSubmit = async (event) => {\n//   event.preventDefault();\n//   const { name, email, phone, date, selectedSlot } = this.state;\n//   if (!name || !email || !phone || !date || !selectedSlot) {\n//     alert('Please fill all the fields');\n//     return;\n//   }\n//   try {\n//     // Make a POST request to the booking API\n//     const bookingResponse = await fetch('http://localhost:5050/booking', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         name,\n//         email,\n//         phone,\n//         date,\n//         slot: selectedSlot,\n//       }),\n//     });\n//     if (bookingResponse.ok) {\n//       // Handle successful booking\n//       this.setState({ bookingSuccess: true,\n//         name: \"\",\n//         email: \"\",\n//         phone: \"\",\n//         date: \"\",\n//         selectedSlot: \"\"\n//       });\n//       // Make a POST request to the email API\n//       const emailResponse = await fetch('http://localhost:4040/appointment', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           name,\n//           email,\n//           phone,\n//           date,\n//           selectedSlot,\n//         }),\n//       });\n//       if (!emailResponse.ok) {\n//         console.error('Error sending email');\n//         // Handle error in sending email if needed\n//       }\n//       setTimeout(() => {\n//         this.setState({ bookingSuccess: false,\n//         name: \"\",\n//         email: \"\",\n//         phone: \"\",\n//         date: \"\",\n//         selectedSlot: \"\"\n//         });\n//       }, 3000); \n//     } else {\n//       // Handle error in booking\n//       console.error('Booking failed');\n//     }\n//   } catch (error) {\n//     console.error('Error occurred:', error);\n//   }\n// };\n_this.handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var _this$state,name,email,phone,date,selectedSlot,bookingResponse,emailResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();_this$state=_this.state,name=_this$state.name,email=_this$state.email,phone=_this$state.phone,date=_this$state.date,selectedSlot=_this$state.selectedSlot;if(!(!name||!email||!phone||!date||!selectedSlot)){_context.next=5;break;}alert('Please fill all the fields');return _context.abrupt(\"return\");case 5:_context.prev=5;_context.next=8;return fetch('http://localhost:3030/booking',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:name,email:email,phone:phone,date:date,slot:selectedSlot})});case 8:bookingResponse=_context.sent;if(!bookingResponse.ok){_context.next=19;break;}// Handle successful booking\nconsole.log('Booking successful');_this.setState({bookingSuccess:true});// Make a POST request to the email API\n_context.next=14;return fetch('http://localhost:3030/email',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:name,email:email,phone:phone,date:date,selectedSlot:selectedSlot})});case 14:emailResponse=_context.sent;if(emailResponse.ok){console.log('Email sent successfully');}else{console.error('Error sending email:',emailResponse.statusText);}// Reset input fields and success message after a delay (optional)\nsetTimeout(function(){_this.setState({bookingSuccess:false,name:'',email:'',phone:'',date:'',selectedSlot:''});},3000);// Reset after 3 seconds\n_context.next=20;break;case 19:// Handle error in booking\nconsole.error('Booking failed:',bookingResponse.statusText);case 20:_context.next=25;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](5);console.error('Error occurred:',_context.t0);case 25:case\"end\":return _context.stop();}},_callee,null,[[5,22]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={showSlotPopup:false,selectedSlot:'',phone:'',name:'',email:'',date:'',bookingSuccess:false};return _this;}_createClass(AppointmentForm,[{key:\"render\",value:function render(){var _this2=this;var _this$state2=this.state,showSlotPopup=_this$state2.showSlotPopup,selectedSlot=_this$state2.selectedSlot,phone=_this$state2.phone,bookingSuccess=_this$state2.bookingSuccess;var timeSlots=[{time:'9:00 AM',appointments:[]},{time:'10:00 AM',appointments:[]},{time:'11:00 AM',appointments:[]},{time:'12:00 PM',appointments:[]},{time:'1:00 PM',appointments:[]},{time:'2:00 PM',appointments:[]},{time:'3:00 PM',appointments:[]},{time:'4:00 PM',appointments:[]},{time:'5:00 PM',appointments:[]}];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"appointment-form form-wraper\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"title\",children:\"Book Appointment\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleFormSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Your Name\",onChange:function onChange(e){return _this2.setState({name:e.target.value});}})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",placeholder:\"Your Email\",onChange:function onChange(e){return _this2.setState({email:e.target.value});}})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(PhoneInput,{country:'in'// Default country\n,enableSearch:true,value:phone,onChange:this.handlePhoneChange,inputStyle:{width:'100%',height:'60px',borderRadius:'10px',alignItems:'center',fontSize:'18px'}//\n})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",onChange:function onChange(e){return _this2.setState({date:e.target.value});}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Slot\",onClick:this.toggleSlotPopup,value:selectedSlot,readOnly:true}),showSlotPopup&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,width:'100%',height:'100%',backgroundColor:'rgba(0, 0, 0, 0.5)',zIndex:999,display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:'20px',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Select Slot\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(3, 1fr)',gridGap:'10px'},children:timeSlots.map(function(slot,index){return/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#f0f0f0',padding:'10px',textAlign:'center',cursor:'pointer',transition:'background-color 0.3s',borderRadius:'5px'},onClick:function onClick(){return _this2.selectSlot(slot.time);},onMouseEnter:function onMouseEnter(e){return e.target.style.backgroundColor='orange';},onMouseLeave:function onMouseLeave(e){return e.target.style.backgroundColor='#f0f0f0';},children:slot.time},index);})}),/*#__PURE__*/_jsx(\"button\",{onClick:this.toggleSlotPopup,style:{marginTop:'10px',padding:'8px 12px',backgroundColor:'#12214a',color:'#fff',border:'none',borderRadius:'5px',cursor:'pointer'},children:\"Close\"})]})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-secondary btn-lg\",children:\"Book Appointment\"})]}),bookingSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",style:{backgroundColor:'#5734bf',color:'white',padding:'10px',borderRadius:'5px',marginTop:'10px'},children:\"Appointment booked successfully!\"})]})});}}]);return AppointmentForm;}(Component);export default AppointmentForm;","map":{"version":3,"names":["React","Component","PhoneInput","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppointmentForm","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","toggleSlotPopup","setState","prevState","showSlotPopup","selectSlot","slot","selectedSlot","handlePhoneChange","value","phone","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_this$state","name","email","date","bookingResponse","emailResponse","wrap","_callee$","_context","prev","next","preventDefault","state","alert","abrupt","fetch","method","headers","body","JSON","stringify","sent","ok","console","log","bookingSuccess","error","statusText","setTimeout","t0","stop","_x","apply","arguments","_createClass","key","render","_this2","_this$state2","timeSlots","time","appointments","children","className","onSubmit","type","placeholder","onChange","e","target","country","enableSearch","inputStyle","width","height","borderRadius","alignItems","fontSize","onClick","readOnly","style","position","top","left","backgroundColor","zIndex","display","justifyContent","padding","gridTemplateColumns","gridGap","map","index","textAlign","cursor","transition","onMouseEnter","onMouseLeave","marginTop","color","border"],"sources":["/root/sayeed/demo/meditro/src/markup/elements/appointment-form.jsx"],"sourcesContent":["// import React, { Component } from 'react';\n\n// class appointmentForm extends Component{\n// \trender(){\n// \t\treturn(\n// \t\t\t<>\n\t\t\t\t\n// \t\t\t\t<div className=\"appointment-form form-wraper\">\n// \t\t\t\t\t<h3 className=\"title\">Book Appointment</h3>\n// \t\t\t\t\t<form action=\"#\">\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Selecty Department</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Select Doctor</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Your Name\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n//     \t\t\t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\"Your Email\"/>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"date\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"slot\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n\t\t\t\n// \t\t\t</>\n// \t\t);\n// \t}\n// }\n\n// export default appointmentForm;\n\n\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"\" className=\"form-control\" placeholder=\"Slot\" onClick={this.toggleSlotPopup} value={selectedSlot} />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//         {showSlotPopup &&\n//           <div className=\"slot-popup\">\n//             <h3>Select Slot</h3>\n//             <ul>\n//               {timeSlots.map((slot, index) => (\n//                 <li key={index} onClick={() => this.selectSlot(slot.time)}>{slot.time}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         }\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       selectedSlot: ''\n//     };\n//   }\n\n//   handleSlotChange = (event) => {\n//     this.setState({\n//       selectedSlot: event.target.value\n//     });\n//   }\n\n//   render() {\n//     const { selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <div className=\"appointment-form form-wraper\">\n//         <h3 className=\"title\">Book Appointment</h3>\n//         <form action=\"#\">\n//           <div className=\"form-group\">\n//             <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"date\" className=\"form-control\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <select className=\"form-control\" value={selectedSlot} onChange={this.handleSlotChange}>\n//               <option value=\"\">Select Slot</option>\n//               {timeSlots.map((slot, index) => (\n//                 <option key={index} value={slot.time}>{slot.time}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer'\n//                         }} onClick={() => this.selectSlot(slot.time)}>\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n// import React, { useState } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n\n// class AppointmentForm extends Component {\n\n// \tconst [phone, setPhone] = useState(\"\");\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             {/* <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div> */}\n// \t\t\t<div className=\"form-group\">\n//             <PhoneInput\n//               country={'eg'} // Default country\n//               enableSearch={true}\n//               value={phone}\n//               onChange={(phone) => setPhone(phone)}\n//             />\n//           </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" placeholder=\"date\"/>\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s', // Add transition for smooth hover effect\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = '#fa7b14'} // Change background color on hover\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'} // Revert background color on hover out\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     {/* <button onClick={this.toggleSlotPopup}>Close</button> */}\n// \t\t\t\t\t<button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '6px 10px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n// import 'react-phone-input-2/lib/style.css';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: '',\n//       phone: \"\",\n//       name: \"\",\n//       email: \"\",\n//       date: \"\",\n//       bookingSuccess: false\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   handlePhoneChange = (value) => {\n//     this.setState({\n//       phone: value\n//     });\n//   }\n\n//   handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const { name, email, phone, date, selectedSlot } = this.state;\n\n//     if (!name || !email || !phone || !date || !selectedSlot){\n//       alert(\"Please fill all the fields\");\n//       return;\n//     }\n\n//     try {\n//       const bookingResponse = await fetch('http://localhost:5050/booking', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           name,\n//           email,\n//           phone,\n//           date,\n//           slot: selectedSlot\n//         })\n//       });\n\n//       if (bookingResponse.ok) {\n//         // Handle successful booking\n//         // console.log('Booking successful');\n//         this.setState({\n//           bookingSuccess: true,\n//           name: \"\",\n//           email: \"\",\n//           phone: \"\",\n//           date: \"\",\n//           selectedSlot: \"\"\n//         });\n\n//         setTimeout(() => {\n//           this.setState({ bookingSuccess: false });\n//         }, 3000);\n//       } else {\n//         // Handle error in booking\n//         console.error('Booking failed');\n//       }\n//     } catch (error) {\n//       console.error('Error occurred:', error);\n//     }\n\n    \n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot, phone, bookingSuccess } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form onSubmit={this.handleFormSubmit}>\n          \n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" onChange={(e) => this.setState({ name: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" onChange={(e) => this.setState({ email: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <PhoneInput\n//                 country={'in'} // Default country\n//                 enableSearch={true}\n//                 value={phone}\n//                 onChange={this.handlePhoneChange}\n//                 inputStyle={{ width: '100%', height: '60px', borderRadius: '10px', alignItems: 'center',fontSize: '18px' }} //\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" onChange={(e) => this.setState({ date: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//                 readOnly\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s',\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = 'orange'}\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'}\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '8px 12px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Book Appointment</button>\n//             {/* {bookingSuccess && (\n//               <div className=\"success-message\">Appointment booked successfully!</div>\n//             )} */}\n//           </form>\n//           {bookingSuccess && (\n//               <div className=\"success-message\" style={{ backgroundColor: '#5734bf', color: 'white', padding: '10px', borderRadius: '5px', marginTop: '10px' }} >Appointment booked successfully!</div>\n//             )}\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n\n//final code\n\nimport React, { Component } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nclass AppointmentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSlotPopup: false,\n      selectedSlot: '',\n      phone: '',\n      name: '',\n      email: '',\n      date: '',\n      bookingSuccess: false,\n    };\n  }\n\n  toggleSlotPopup = () => {\n    this.setState((prevState) => ({\n      showSlotPopup: !prevState.showSlotPopup,\n    }));\n  };\n\n  selectSlot = (slot) => {\n    this.setState({\n      selectedSlot: slot,\n      showSlotPopup: false,\n    });\n  };\n\n  handlePhoneChange = (value) => {\n    this.setState({\n      phone: value,\n    });\n  };\n\n  // handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const { name, email, phone, date, selectedSlot } = this.state;\n\n  //   if (!name || !email || !phone || !date || !selectedSlot) {\n  //     alert('Please fill all the fields');\n  //     return;\n  //   }\n\n  //   try {\n  //     // Make a POST request to the booking API\n  //     const bookingResponse = await fetch('http://localhost:5050/booking', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         name,\n  //         email,\n  //         phone,\n  //         date,\n  //         slot: selectedSlot,\n  //       }),\n  //     });\n\n  //     if (bookingResponse.ok) {\n  //       // Handle successful booking\n  //       this.setState({ bookingSuccess: true,\n  //         name: \"\",\n  //         email: \"\",\n  //         phone: \"\",\n  //         date: \"\",\n  //         selectedSlot: \"\"\n\n  //       });\n\n  //       // Make a POST request to the email API\n  //       const emailResponse = await fetch('http://localhost:4040/appointment', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({\n  //           name,\n  //           email,\n  //           phone,\n  //           date,\n  //           selectedSlot,\n  //         }),\n  //       });\n\n  //       if (!emailResponse.ok) {\n  //         console.error('Error sending email');\n  //         // Handle error in sending email if needed\n  //       }\n\n  //       setTimeout(() => {\n  //         this.setState({ bookingSuccess: false,\n  //         name: \"\",\n  //         email: \"\",\n  //         phone: \"\",\n  //         date: \"\",\n  //         selectedSlot: \"\"\n          \n  //         });\n  //       }, 3000); \n  //     } else {\n  //       // Handle error in booking\n  //       console.error('Booking failed');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error occurred:', error);\n  //   }\n  // };\n\n\n\n  handleFormSubmit = async (event) => {\n    event.preventDefault();\n  \n    const { name, email, phone, date, selectedSlot } = this.state;\n  \n    if (!name || !email || !phone || !date || !selectedSlot) {\n      alert('Please fill all the fields');\n      return;\n    }\n  \n    try {\n      // Make a POST request to the booking API\n      const bookingResponse = await fetch('http://localhost:3030/booking', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          phone,\n          date,\n          slot: selectedSlot,\n        }),\n      });\n  \n      if (bookingResponse.ok) {\n        // Handle successful booking\n        console.log('Booking successful');\n        this.setState({\n          bookingSuccess: true,\n        });\n  \n        // Make a POST request to the email API\n        const emailResponse = await fetch('http://localhost:3030/email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            phone,\n            date,\n            selectedSlot,\n          }),\n        });\n  \n        if (emailResponse.ok) {\n          console.log('Email sent successfully');\n        } else {\n          console.error('Error sending email:', emailResponse.statusText);\n        }\n  \n        // Reset input fields and success message after a delay (optional)\n        setTimeout(() => {\n          this.setState({\n            bookingSuccess: false,\n            name: '',\n            email: '',\n            phone: '',\n            date: '',\n            selectedSlot: ''\n          });\n        }, 3000); // Reset after 3 seconds\n      } else {\n        // Handle error in booking\n        console.error('Booking failed:', bookingResponse.statusText);\n      }\n    } catch (error) {\n      console.error('Error occurred:', error);\n    }\n  };\n  \n  \n  \n\n  render() {\n    const { showSlotPopup, selectedSlot, phone, bookingSuccess } = this.state;\n    const timeSlots = [\n      { time: '9:00 AM', appointments: [] },\n      { time: '10:00 AM', appointments: [] },\n      { time: '11:00 AM', appointments: [] },\n      { time: '12:00 PM', appointments: [] },\n      { time: '1:00 PM', appointments: [] },\n      { time: '2:00 PM', appointments: [] },\n      { time: '3:00 PM', appointments: [] },\n      { time: '4:00 PM', appointments: [] },\n      { time: '5:00 PM', appointments: [] },\n    ];\n\n    return (\n      <>\n        <div className=\"appointment-form form-wraper\">\n          <h3 className=\"title\">Book Appointment</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Your Name\"\n                onChange={(e) => this.setState({ name: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Your Email\"\n                onChange={(e) => this.setState({ email: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <PhoneInput\n                country={'in'} // Default country\n                enableSearch={true}\n                value={phone}\n                onChange={this.handlePhoneChange}\n                inputStyle={{\n                  width: '100%',\n                  height: '60px',\n                  borderRadius: '10px',\n                  alignItems: 'center',\n                  fontSize: '18px',\n                }} //\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                onChange={(e) => this.setState({ date: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Slot\"\n                onClick={this.toggleSlotPopup}\n                value={selectedSlot}\n                readOnly\n              />\n              {showSlotPopup && (\n                <div\n                  style={{\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    zIndex: 999,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <div\n                    style={{\n                      backgroundColor: 'white',\n                      padding: '20px',\n                      borderRadius: '5px',\n                    }}\n                  >\n                    <h3>Select Slot</h3>\n                    <div\n                      style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(3, 1fr)',\n                        gridGap: '10px',\n                      }}\n                    >\n                      {timeSlots.map((slot, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            backgroundColor: '#f0f0f0',\n                            padding: '10px',\n                            textAlign: 'center',\n                            cursor: 'pointer',\n                            transition: 'background-color 0.3s',\n                            borderRadius: '5px',\n                          }}\n                          onClick={() => this.selectSlot(slot.time)}\n                          onMouseEnter={(e) => (e.target.style.backgroundColor = 'orange')}\n                          onMouseLeave={(e) => (e.target.style.backgroundColor = '#f0f0f0')}\n                        >\n                          {slot.time}\n                        </div>\n                      ))}\n                    </div>\n                    <button\n                      onClick={this.toggleSlotPopup}\n                      style={{\n                        marginTop: '10px',\n                        padding: '8px 12px',\n                        backgroundColor: '#12214a',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer',\n                      }}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary btn-lg\">\n              Book Appointment\n            </button>\n          </form>\n          {bookingSuccess && <div className=\"success-message\" style={{ backgroundColor: '#5734bf', color: 'white', padding: '10px', borderRadius: '5px', marginTop: '10px' }}>Appointment booked successfully!</div>}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AppointmentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}