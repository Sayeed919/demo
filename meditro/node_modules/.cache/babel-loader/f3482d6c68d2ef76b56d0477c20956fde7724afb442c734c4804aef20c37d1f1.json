{"ast":null,"code":"var _jsxFileName = \"/root/sayeed/demo/meditro/src/markup/pages/prescription.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport drLogo from \"../../images/prescription/drlogo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prescription = () => {\n  _s();\n  const doctors = [{\n    name: 'Dr. Bhavesh C. Jain',\n    specialty: 'Family Physician & Homeopathic Consultant',\n    qualifications: 'BHMS, MD-Homeopathy',\n    address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n  }, {\n    name: 'Dr. Sarah Smith',\n    specialty: 'Pediatrician',\n    qualifications: 'MBBS, DCH',\n    address: '123 Elm Street, Mumbai'\n  }\n  // Add more doctor objects as needed\n  ];\n\n  const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n  const [ageError, setAgeError] = useState(false); // State for age validation error\n  const [medicineName, setMedicineName] = useState(''); // State for medicine name\n  const [dosage, setDosage] = useState(''); // State for dosage\n  const [duration, setDuration] = useState(''); // State for duration\n  const [foodType, setFoodType] = useState('before'); // State for food type\n  const [gender, setGender] = useState(''); // State for gender\n  const [errorMessage, setErrorMessage] = useState(''); // State for error message\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n  const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n  const containerStyle = {\n    maxWidth: '800px',\n    margin: '100px auto 0',\n    padding: '10px'\n  };\n  const bigBoxStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: '#f9f9f9',\n    padding: '20px',\n    marginBottom: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const logoAndDoctorInfoContainerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#6666ff',\n    // Add background color to the container\n    borderRadius: '5px',\n    padding: '10px',\n    width: '100%',\n    // Ensure the container takes full width\n    marginBottom: '20px'\n  };\n  const logoStyle = {\n    width: '100px',\n    height: '100px',\n    marginRight: '20px'\n  };\n  const labelStyle = {\n    marginRight: '10px',\n    marginBottom: '15px',\n    fontWeight: 'bold',\n    width: '150px',\n    // Adjusted width for labels\n    textAlign: 'right' // Align labels to the right\n  };\n\n  const doctorInfoStyle = {\n    color: 'white'\n  };\n  const horizontalLineStyle = {\n    borderTop: '1px solid #ccc',\n    margin: '20px 0',\n    width: '100%'\n  };\n  const inputStyle = {\n    border: 'none',\n    borderBottom: '1px solid #ccc',\n    outline: 'none',\n    padding: '5px',\n    width: '80%',\n    // Adjusted width for responsiveness\n    marginBottom: '10px',\n    textAlign: 'center'\n  };\n  const cardContainerStyle = {\n    width: '100%',\n    // Change width to 100% for responsiveness\n    marginBottom: '10px'\n  };\n  const cardStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '15px',\n    // Adjust padding to mimic the textarea size\n    width: '100%',\n    // Adjusted width\n    height: 'auto',\n    // Adjusted height to 'auto'\n    position: 'relative' // Position the textboxes relative to the card\n  };\n\n  const textboxStyle = {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '8px',\n    // Adjust padding to minimize height\n    width: '100%',\n    // Adjusted width for the first textbox\n    fontSize: '14px',\n    // Adjust font size\n    lineHeight: '1.5',\n    // Adjust line height\n    marginBottom: '20px',\n    // Add margin between textboxes\n    boxSizing: 'border-box' // Include padding and border in the width\n  };\n\n  const textboxGroupStyle = {\n    display: 'flex',\n    flexDirection: 'column' // Stack the textboxes vertically\n  };\n\n  const smallTextboxStyle = {\n    ...textboxStyle,\n    flex: '1',\n    // Use flexbox to distribute available space evenly\n    marginBottom: '10px',\n    // Adjust margin between textboxes\n    width: 'calc(25% - 20px)' // Adjusted width for the small textboxes\n  };\n\n  const medicineNameStyle = {\n    ...textboxStyle,\n    width: '50%',\n    // Adjusted width for the medicine name textbox\n    marginBottom: '30px',\n    // Remove bottom margin\n    textAlign: 'left' // Align text to the left\n  };\n\n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    // Center align the button horizontally\n    marginBottom: '10px',\n    alignItems: 'center' // Center align the button with the input fields\n  };\n\n  const buttonStyle = {\n    padding: '5px 15px',\n    // Increase padding for better visibility\n    borderRadius: '5px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer'\n  };\n  const inputNameStyle = {\n    ...inputStyle,\n    marginLeft: '20px'\n  };\n  const inputAgeStyle = {\n    ...inputStyle,\n    width: 'calc(80% - 170px)',\n    // Adjusted width for the age input\n    marginLeft: '20'\n  };\n  const inputGenderStyle = {\n    ...inputStyle,\n    width: 'calc(80% - 170px)',\n    // Adjusted width for the gender input\n    marginLeft: '20px'\n  };\n  const inputDateStyle = {\n    ...inputStyle,\n    marginTop: '10px',\n    marginLeft: 'auto',\n    // Pushes the element to the right\n    minWidth: '120px' // Ensure a minimum width for the date input\n  };\n\n  const signatureDateContainer = {\n    marginTop: '20px',\n    marginLeft: 'auto',\n    // Pushes the container to the right\n    textAlign: 'right' // Align content to the right\n  };\n\n  const signatureStyle = {\n    fontWeight: 'bold'\n  };\n  const handlePrint = () => {\n    const container = document.getElementById('container');\n    const originalDisplayStyle = container.style.display;\n    container.style.display = 'block'; // Show container for printing\n    window.print(); // Print\n    container.style.display = originalDisplayStyle; // Restore original display style\n  };\n\n  const handleAgeChange = event => {\n    const age = event.target.value;\n    if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n      setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n    } else {\n      setAgeError(false); // Clear error if input contains only digits and age is positive\n    }\n  };\n\n  const handleSubmit = () => {\n    if (!medicineName || !dosage || !duration || !gender) {\n      setErrorMessage('Please fill in all fields.');\n      setSuccessMessage('');\n    } else {\n      setErrorMessage('');\n      setSuccessMessage('Information saved successfully.');\n      // Here you can add code to submit the form data\n    }\n\n    setTimeout(() => {\n      setErrorMessage('');\n      setSuccessMessage('');\n    }, 1000);\n  };\n\n  // Get current date in \"YYYY-MM-DD\" format\n  const getCurrentDate = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    // Add leading zero to month and day if needed\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    return `${day}-${month}-${year}`;\n  };\n  const currentDate = getCurrentDate(); // Get current date\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: bigBoxStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: logoAndDoctorInfoContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: drLogo,\n            alt: \"Logo\",\n            style: logoStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: doctorInfoStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedDoctor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedDoctor.specialty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedDoctor.qualifications\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Address: \", selectedDoctor.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: horizontalLineStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: labelStyle,\n                children: \"Patient's Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                style: inputNameStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '10px',\n                marginLeft: '-100px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: labelStyle,\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: inputAgeStyle,\n                onChange: handleAgeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), ageError && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'blue'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 62\n                }, this), \" Only digits are allowed for age\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '10px',\n                marginLeft: '-70px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: labelStyle,\n                children: \"Gender:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                style: inputGenderStyle,\n                onChange: e => setGender(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: labelStyle,\n                children: \"Prescriptions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: cardContainerStyle,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: cardStyle,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    style: labelStyle,\n                    children: \"Medicine names:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    style: medicineNameStyle,\n                    placeholder: \"Medicine names\",\n                    onChange: e => setMedicineName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 7\n                  }, this), medicineName && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      marginTop: '10px'\n                    },\n                    children: [\"Medicine names: \", medicineName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: textboxGroupStyle,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      style: {\n                        ...smallTextboxStyle,\n                        marginBottom: '10px'\n                      },\n                      placeholder: \"Dosage eg. 1+0+1\",\n                      onChange: e => setDosage(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      style: {\n                        ...smallTextboxStyle,\n                        marginBottom: '10px'\n                      },\n                      placeholder: \"Duration eg. 5 days\",\n                      onChange: e => setDuration(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      style: smallTextboxStyle,\n                      onChange: e => setFoodType(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"before\",\n                        children: \"Before food\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 11\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"after\",\n                        children: \"After food\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 11\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: buttonContainerStyle,\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      style: buttonStyle,\n                      onClick: handleSubmit,\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 9\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 7\n                  }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 24\n                  }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: 'green'\n                    },\n                    children: successMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 26\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: signatureDateContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              style: signatureStyle,\n              children: \"Signature : ____________________\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: signatureStyle,\n              children: \"Date :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              style: {\n                ...inputDateStyle\n              },\n              value: currentDate,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handlePrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(Prescription, \"t1AuYy4SYO98OEdjp/i7BxAlOEs=\");\n_c = Prescription;\nexport default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicineNames, setMedicineNames] = useState(['']); // State for medicine names\n//   const [dosage, setDosage] = useState(''); // State for dosage\n//   const [duration, setDuration] = useState(''); // State for duration\n//   const [foodType, setFoodType] = useState('before'); // State for food type\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const medicineNameStyle = {\n//     ...textboxStyle,\n//     width: '50%', // Adjusted width for the medicine name textbox\n//     marginBottom: '10px', // Remove bottom margin\n//     textAlign: 'left', // Align text to the left\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicineNames([...medicineNames, '']);\n//   };\n\n//   const handleRemoveMedicine = (index) => {\n//     const updatedMedicineNames = [...medicineNames];\n//     updatedMedicineNames.splice(index, 1);\n//     setMedicineNames(updatedMedicineNames);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicineNames.every(name => name.trim()) || !dosage || !duration || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   <div style={cardStyle}>\n//                     <p style={labelStyle}>Medicine names:</p>\n//                     {medicineNames.map((medicine, index) => (\n//                       <div key={index} style={{ marginBottom: '10px' }}>\n//                         <input\n//                           type=\"text\"\n//                           style={medicineNameStyle}\n//                           value={medicine}\n//                           onChange={(e) => {\n//                             const updatedMedicineNames = [...medicineNames];\n//                             updatedMedicineNames[index] = e.target.value;\n//                             setMedicineNames(updatedMedicineNames);\n//                           }}\n//                         />\n//                         <button style={{ marginLeft: '10px' }} onClick={() => handleRemoveMedicine(index)}>Remove</button>\n//                       </div>\n//                     ))}\n//                     <button onClick={handleAddMedicine}>Add Medicine</button>\n//                     <div style={textboxGroupStyle}>\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\n//                       <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\n//                         <option value=\"before\">Before food</option>\n//                         <option value=\"after\">After food</option>\n//                       </select>\n//                     </div>\n//                     <div style={buttonContainerStyle}>\n//                       <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                     </div>\n//                     {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                     {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                   </div>\n//                 </div>\n//               </div>\n\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//     // Add more doctor objects as needed\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]); // State for medicines\n//   const [gender, setGender] = useState(''); // State for gender\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\n\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff', // Add background color to the container\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%', // Ensure the container takes full width\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px', // Adjusted width for labels\n//     textAlign: 'right', // Align labels to the right\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%', // Adjusted width for responsiveness\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%', // Change width to 100% for responsiveness\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px', // Adjust padding to mimic the textarea size\n//     width: '100%', // Adjusted width\n//     height: 'auto', // Adjusted height to 'auto'\n//     position: 'relative', // Position the textboxes relative to the card\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px', // Adjust padding to minimize height\n//     width: '100%', // Adjusted width for the first textbox\n//     fontSize: '14px', // Adjust font size\n//     lineHeight: '1.5', // Adjust line height\n//     marginBottom: '20px', // Add margin between textboxes\n//     boxSizing: 'border-box', // Include padding and border in the width\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column', // Stack the textboxes vertically\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1', // Use flexbox to distribute available space evenly\n//     marginBottom: '10px', // Adjust margin between textboxes\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center', // Center align the button horizontally\n//     marginBottom: '10px',\n//     alignItems: 'center', // Center align the button with the input fields\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px', // Increase padding for better visibility\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto', // Pushes the element to the right\n//     minWidth: '120px', // Ensure a minimum width for the date input\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto', // Pushes the container to the right\n//     textAlign: 'right', // Align content to the right\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block'; // Show container for printing\n//     window.print(); // Print\n//     container.style.display = originalDisplayStyle; // Restore original display style\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\n//     } else {\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//       // Here you can add code to submit the form data\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   // Get current date in \"YYYY-MM-DD\" format\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     // Add leading zero to month and day if needed\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate(); // Get current date\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   {/* <option value=\"\">Select</option> */}\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                         onKeyPress={(e) => {\n//                           if (e.key === 'Enter') handleAddMedicine();\n//                         }}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                   <div style={buttonContainerStyle}>\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                   </div>\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                 </div>\n//               </div>\n\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\n//   const [ageError, setAgeError] = useState(false);\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   const [gender, setGender] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const selectedDoctor = doctors[selectedDoctorIndex];\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff',\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%',\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px',\n//     textAlign: 'right',\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%',\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%',\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px',\n//     width: '100%',\n//     height: 'auto',\n//     position: 'relative',\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px',\n//     width: '100%',\n//     fontSize: '14px',\n//     lineHeight: '1.5',\n//     marginBottom: '20px',\n//     boxSizing: 'border-box',\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1',\n//     marginBottom: '10px',\n//     width: 'calc(25% - 20px)',\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     marginBottom: '10px',\n//     alignItems: 'center',\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px',\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto',\n//     minWidth: '120px',\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto',\n//     textAlign: 'right',\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block';\n//     window.print();\n//     container.style.display = originalDisplayStyle;\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true);\n//     } else {\n//       setAgeError(false);\n//     }\n//   };\n\n//   const handleAddMedicine = () => {\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n\n//     // Update the content of the next medicine box if it exists\n//     if (index < medicines.length - 1) {\n//       updatedMedicines[index + 1][field] = value;\n//     }\n\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate();\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                         onKeyPress={(e) => {\n//                           if (e.key === 'Enter') handleAddMedicine();\n//                         }}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                   <div style={buttonContainerStyle}>\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\n//                   </div>\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\n\n// import React, { useState } from 'react';\n// import drLogo from \"../../images/prescription/drlogo.png\";\n\n// const Prescription = () => {\n//   const doctors = [\n//     {\n//       name: 'Dr. Bhavesh C. Jain',\n//       specialty: 'Family Physician & Homeopathic Consultant',\n//       qualifications: 'BHMS, MD-Homeopathy',\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\n//     },\n//     {\n//       name: 'Dr. Sarah Smith',\n//       specialty: 'Pediatrician',\n//       qualifications: 'MBBS, DCH',\n//       address: '123 Elm Street, Mumbai'\n//     }\n//   ];\n\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\n//   const [ageError, setAgeError] = useState(false);\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\n//   const [gender, setGender] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const selectedDoctor = doctors[selectedDoctorIndex];\n\n//   const containerStyle = {\n//     maxWidth: '800px',\n//     margin: '100px auto 0',\n//     padding: '10px',\n//   };\n\n//   const bigBoxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     backgroundColor: '#f9f9f9',\n//     padding: '20px',\n//     marginBottom: '20px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   };\n\n//   const logoAndDoctorInfoContainerStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     backgroundColor: '#6666ff',\n//     borderRadius: '5px',\n//     padding: '10px',\n//     width: '100%',\n//     marginBottom: '20px',\n//   };\n\n//   const logoStyle = {\n//     width: '100px',\n//     height: '100px',\n//     marginRight: '20px',\n//   };\n//   const labelStyle = {\n//     marginRight: '10px',\n//     marginBottom: '15px',\n//     fontWeight: 'bold',\n//     width: '150px',\n//     textAlign: 'right',\n//   };\n//   const doctorInfoStyle = {\n//     color: 'white',\n//   };\n\n//   const horizontalLineStyle = {\n//     borderTop: '1px solid #ccc',\n//     margin: '20px 0',\n//     width: '100%',\n//   };\n\n//   const inputStyle = {\n//     border: 'none',\n//     borderBottom: '1px solid #ccc',\n//     outline: 'none',\n//     padding: '5px',\n//     width: '80%',\n//     marginBottom: '10px',\n//     textAlign: 'center'\n//   };\n\n//   const cardContainerStyle = {\n//     width: '100%',\n//     marginBottom: '10px',\n//   };\n\n//   const cardStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '15px',\n//     width: '100%',\n//     height: 'auto',\n//     position: 'relative',\n//   };\n\n//   const textboxStyle = {\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     padding: '8px',\n//     width: '100%',\n//     fontSize: '14px',\n//     lineHeight: '1.5',\n//     marginBottom: '20px',\n//     boxSizing: 'border-box',\n//   };\n\n//   const textboxGroupStyle = {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const smallTextboxStyle = {\n//     ...textboxStyle,\n//     flex: '1',\n//     marginBottom: '10px',\n//     width: 'calc(25% - 20px)',\n//   };\n\n//   const buttonContainerStyle = {\n//     display: 'none', // Hides the button container\n//   };\n\n//   const buttonStyle = {\n//     padding: '5px 15px',\n//     borderRadius: '5px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     cursor: 'pointer',\n//   };\n\n//   const inputNameStyle = {\n//     ...inputStyle,\n//     marginLeft: '20px' \n//   };\n\n//   const inputAgeStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20'\n//   };\n\n//   const inputGenderStyle = {\n//     ...inputStyle,\n//     width: 'calc(80% - 170px)',\n//     marginLeft: '20px' \n//   };\n\n//   const inputDateStyle = {\n//     ...inputStyle,\n//     marginTop: '10px',\n//     marginLeft: 'auto',\n//     minWidth: '120px',\n//   };\n\n//   const signatureDateContainer = {\n//     marginTop: '20px',\n//     marginLeft: 'auto',\n//     textAlign: 'right',\n//   };\n\n//   const signatureStyle = {\n//     fontWeight: 'bold',\n//   };\n\n//   const handlePrint = () => {\n//     const container = document.getElementById('container');\n//     const originalDisplayStyle = container.style.display;\n//     container.style.display = 'block';\n//     window.print();\n//     container.style.display = originalDisplayStyle;\n//   };\n\n//   const handleAgeChange = (event) => {\n//     const age = event.target.value;\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\n//       setAgeError(true);\n//     } else {\n//       setAgeError(false);\n//     }\n//   };\n\n//   const handleMedicineChange = (index, field, value) => {\n//     const updatedMedicines = [...medicines];\n//     updatedMedicines[index][field] = value;\n\n//     // Update the content of the next medicine box if it exists\n//     if (index < medicines.length - 1) {\n//       updatedMedicines[index + 1][field] = value;\n//     }\n\n//     // Add a new medicine box if the last medicine box is being typed in\n//     if (index === medicines.length - 1 && value.trim() !== '') {\n//       updatedMedicines.push({ name: '', dosage: '', duration: '', frequency: '', foodType: '' });\n//     }\n\n//     setMedicines(updatedMedicines);\n//   };\n\n//   const handleSubmit = () => {\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\n//       setErrorMessage('Please fill in all fields.');\n//       setSuccessMessage('');\n//     } else {\n//       setErrorMessage('');\n//       setSuccessMessage('Information saved successfully.');\n//     }\n//     setTimeout(() => {\n//       setErrorMessage('');\n//       setSuccessMessage('');\n//     }, 1000);\n//   };\n\n//   const getCurrentDate = () => {\n//     const date = new Date();\n//     const year = date.getFullYear();\n//     let month = date.getMonth() + 1;\n//     let day = date.getDate();\n\n//     if (month < 10) {\n//       month = `0${month}`;\n//     }\n//     if (day < 10) {\n//       day = `0${day}`;\n//     }\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const currentDate = getCurrentDate();\n\n//   return (\n//     <div>\n//       <div style={containerStyle} id=\"container\">\n//         <div style={bigBoxStyle}>\n//           <div style={logoAndDoctorInfoContainerStyle}>\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\n//             <div style={doctorInfoStyle}>\n//               <p>{selectedDoctor.name}</p>\n//               <p>{selectedDoctor.specialty}</p>\n//               <p>{selectedDoctor.qualifications}</p>\n//               <p>Address: {selectedDoctor.address}</p>\n//             </div>\n//           </div>\n//           <hr style={horizontalLineStyle} />\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n//             <div style={{ textAlign: 'left', width: '100%' }}>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//                 <label style={labelStyle}>Patient's Name:</label>\n//                 <input type=\"text\" style={inputNameStyle} />\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\n//                 <label style={labelStyle}>Age:</label>\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\n//               </div>\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\n//                 <label style={labelStyle}>Gender:</label>\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\n//                   <option value=\"male\">Male</option>\n//                   <option value=\"female\">Female</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n//               <div style={{ position: 'relative' }}>\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \n//                 <div style={cardContainerStyle}>\n//                   {medicines.map((medicine, index) => (\n//                     <div key={index} style={cardStyle}>\n//                       <p style={labelStyle}>Medicine name:</p>\n//                       <input\n//                         type=\"text\"\n//                         style={textboxStyle}\n//                         value={medicine.name}\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\n//                       />\n//                       <div style={textboxGroupStyle}>\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\n//                           <option value=\"before\">Before food</option>\n//                           <option value=\"after\">After food</option>\n//                         </select>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div style={signatureDateContainer}>\n//             <div>\n//               <label style={signatureStyle}>Signature : ____________________</label>\n//             </div>\n//             <div>\n//               <label style={signatureStyle}>Date :</label>\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Prescription;\nvar _c;\n$RefreshReg$(_c, \"Prescription\");","map":{"version":3,"names":["React","useState","drLogo","jsxDEV","_jsxDEV","Prescription","_s","doctors","name","specialty","qualifications","address","selectedDoctorIndex","setSelectedDoctorIndex","ageError","setAgeError","medicineName","setMedicineName","dosage","setDosage","duration","setDuration","foodType","setFoodType","gender","setGender","errorMessage","setErrorMessage","successMessage","setSuccessMessage","selectedDoctor","containerStyle","maxWidth","margin","padding","bigBoxStyle","border","borderRadius","backgroundColor","marginBottom","display","flexDirection","alignItems","logoAndDoctorInfoContainerStyle","width","logoStyle","height","marginRight","labelStyle","fontWeight","textAlign","doctorInfoStyle","color","horizontalLineStyle","borderTop","inputStyle","borderBottom","outline","cardContainerStyle","cardStyle","position","textboxStyle","fontSize","lineHeight","boxSizing","textboxGroupStyle","smallTextboxStyle","flex","medicineNameStyle","buttonContainerStyle","justifyContent","buttonStyle","cursor","inputNameStyle","marginLeft","inputAgeStyle","inputGenderStyle","inputDateStyle","marginTop","minWidth","signatureDateContainer","signatureStyle","handlePrint","container","document","getElementById","originalDisplayStyle","style","window","print","handleAgeChange","event","age","target","value","test","parseInt","handleSubmit","setTimeout","getCurrentDate","date","Date","year","getFullYear","month","getMonth","day","getDate","currentDate","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","placeholder","onClick","readOnly","_c","$RefreshReg$"],"sources":["/root/sayeed/demo/meditro/src/markup/pages/prescription.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport drLogo from \"../../images/prescription/drlogo.png\";\r\n\r\nconst Prescription = () => {\r\n  const doctors = [\r\n    {\r\n      name: 'Dr. Bhavesh C. Jain',\r\n      specialty: 'Family Physician & Homeopathic Consultant',\r\n      qualifications: 'BHMS, MD-Homeopathy',\r\n      address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\r\n    },\r\n    {\r\n      name: 'Dr. Sarah Smith',\r\n      specialty: 'Pediatrician',\r\n      qualifications: 'MBBS, DCH',\r\n      address: '123 Elm Street, Mumbai'\r\n    }\r\n    // Add more doctor objects as needed\r\n  ];\r\n\r\n  const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\r\n  const [ageError, setAgeError] = useState(false); // State for age validation error\r\n  const [medicineName, setMedicineName] = useState(''); // State for medicine name\r\n  const [dosage, setDosage] = useState(''); // State for dosage\r\n  const [duration, setDuration] = useState(''); // State for duration\r\n  const [foodType, setFoodType] = useState('before'); // State for food type\r\n  const [gender, setGender] = useState(''); // State for gender\r\n  const [errorMessage, setErrorMessage] = useState(''); // State for error message\r\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\r\n\r\n  const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\r\n\r\n  const containerStyle = {\r\n    maxWidth: '800px',\r\n    margin: '100px auto 0',\r\n    padding: '10px',\r\n  };\r\n\r\n  const bigBoxStyle = {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    backgroundColor: '#f9f9f9',\r\n    padding: '20px',\r\n    marginBottom: '20px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  const logoAndDoctorInfoContainerStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: '#6666ff', // Add background color to the container\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    width: '100%', // Ensure the container takes full width\r\n    marginBottom: '20px',\r\n  };\r\n  \r\n  const logoStyle = {\r\n    width: '100px',\r\n    height: '100px',\r\n    marginRight: '20px',\r\n  };\r\n  const labelStyle = {\r\n    marginRight: '10px',\r\n    marginBottom: '15px',\r\n    fontWeight: 'bold',\r\n    width: '150px', // Adjusted width for labels\r\n    textAlign: 'right', // Align labels to the right\r\n  };\r\n  const doctorInfoStyle = {\r\n    color: 'white',\r\n  };\r\n  \r\n  const horizontalLineStyle = {\r\n    borderTop: '1px solid #ccc',\r\n    margin: '20px 0',\r\n    width: '100%',\r\n  };\r\n\r\n  const inputStyle = {\r\n    border: 'none',\r\n    borderBottom: '1px solid #ccc',\r\n    outline: 'none',\r\n    padding: '5px',\r\n    width: '80%', // Adjusted width for responsiveness\r\n    marginBottom: '10px',\r\n    textAlign: 'center'\r\n  };\r\n\r\n  const cardContainerStyle = {\r\n    width: '100%', // Change width to 100% for responsiveness\r\n    marginBottom: '10px',\r\n  };\r\n\r\n  const cardStyle = {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    padding: '15px', // Adjust padding to mimic the textarea size\r\n    width: '100%', // Adjusted width\r\n    height: 'auto', // Adjusted height to 'auto'\r\n    position: 'relative', // Position the textboxes relative to the card\r\n  };\r\n\r\n  const textboxStyle = {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    padding: '8px', // Adjust padding to minimize height\r\n    width: '100%', // Adjusted width for the first textbox\r\n    fontSize: '14px', // Adjust font size\r\n    lineHeight: '1.5', // Adjust line height\r\n    marginBottom: '20px', // Add margin between textboxes\r\n    boxSizing: 'border-box', // Include padding and border in the width\r\n  };\r\n\r\n  const textboxGroupStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column', // Stack the textboxes vertically\r\n  };\r\n\r\n  const smallTextboxStyle = {\r\n    ...textboxStyle,\r\n    flex: '1', // Use flexbox to distribute available space evenly\r\n    marginBottom: '10px', // Adjust margin between textboxes\r\n    width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\r\n  };\r\n\r\n  const medicineNameStyle = {\r\n    ...textboxStyle,\r\n    width: '50%', // Adjusted width for the medicine name textbox\r\n    marginBottom: '30px', // Remove bottom margin\r\n    textAlign: 'left', // Align text to the left\r\n  };\r\n  \r\n  const buttonContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center', // Center align the button horizontally\r\n    marginBottom: '10px',\r\n    alignItems: 'center', // Center align the button with the input fields\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '5px 15px', // Increase padding for better visibility\r\n    borderRadius: '5px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  };\r\n  \r\n  const inputNameStyle = {\r\n    ...inputStyle,\r\n    marginLeft: '20px' \r\n  };\r\n\r\n  const inputAgeStyle = {\r\n    ...inputStyle,\r\n    width: 'calc(80% - 170px)', // Adjusted width for the age input\r\n    marginLeft: '20'\r\n  };\r\n\r\n  const inputGenderStyle = {\r\n    ...inputStyle,\r\n    width: 'calc(80% - 170px)', // Adjusted width for the gender input\r\n    marginLeft: '20px' \r\n  };\r\n\r\n  const inputDateStyle = {\r\n    ...inputStyle,\r\n    marginTop: '10px',\r\n    marginLeft: 'auto', // Pushes the element to the right\r\n    minWidth: '120px', // Ensure a minimum width for the date input\r\n  };\r\n  \r\n  const signatureDateContainer = {\r\n    marginTop: '20px',\r\n    marginLeft: 'auto', // Pushes the container to the right\r\n    textAlign: 'right', // Align content to the right\r\n  };\r\n  \r\n  const signatureStyle = {\r\n    fontWeight: 'bold',\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const container = document.getElementById('container');\r\n    const originalDisplayStyle = container.style.display;\r\n    container.style.display = 'block'; // Show container for printing\r\n    window.print(); // Print\r\n    container.style.display = originalDisplayStyle; // Restore original display style\r\n  };\r\n\r\n  const handleAgeChange = (event) => {\r\n    const age = event.target.value;\r\n    if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\r\n      setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\r\n    } else {\r\n      setAgeError(false); // Clear error if input contains only digits and age is positive\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    if (!medicineName || !dosage || !duration || !gender) {\r\n      setErrorMessage('Please fill in all fields.');\r\n      setSuccessMessage('');\r\n    } else {\r\n      setErrorMessage('');\r\n      setSuccessMessage('Information saved successfully.');\r\n      // Here you can add code to submit the form data\r\n    }\r\n    setTimeout(() => {\r\n      setErrorMessage('');\r\n      setSuccessMessage('');\r\n    }, 1000);\r\n  };\r\n\r\n  // Get current date in \"YYYY-MM-DD\" format\r\n  const getCurrentDate = () => {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    // Add leading zero to month and day if needed\r\n    if (month < 10) {\r\n      month = `0${month}`;\r\n    }\r\n    if (day < 10) {\r\n      day = `0${day}`;\r\n    }\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = getCurrentDate(); // Get current date\r\n\r\n  return (\r\n    <div>\r\n      <div style={containerStyle} id=\"container\">\r\n        <div style={bigBoxStyle}>\r\n          <div style={logoAndDoctorInfoContainerStyle}>\r\n            <img src={drLogo} alt=\"Logo\" style={logoStyle} />\r\n            <div style={doctorInfoStyle}>\r\n              <p>{selectedDoctor.name}</p>\r\n              <p>{selectedDoctor.specialty}</p>\r\n              <p>{selectedDoctor.qualifications}</p>\r\n              <p>Address: {selectedDoctor.address}</p>\r\n            </div>\r\n          </div>\r\n          <hr style={horizontalLineStyle} />\r\n          <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ textAlign: 'left', width: '100%' }}>\r\n              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n                <label style={labelStyle}>Patient's Name:</label>\r\n                <input type=\"text\" style={inputNameStyle} />\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\r\n                <label style={labelStyle}>Age:</label>\r\n                <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\r\n                {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\r\n                <label style={labelStyle}>Gender:</label>\r\n                <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\r\n                  {/* <option value=\"\">Select</option> */}\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                  <option value=\"other\">Other</option>\r\n                </select>\r\n              </div>\r\n              <div style={{ position: 'relative' }}>\r\n  <label style={labelStyle}>Prescriptions:</label><br /> \r\n  <div style={cardContainerStyle}>\r\n    <div style={cardStyle}>\r\n      <p style={labelStyle}>Medicine names:</p>\r\n      <input type=\"text\" style={medicineNameStyle} placeholder=\"Medicine names\" onChange={(e) => setMedicineName(e.target.value)} />\r\n      {medicineName && <p style={{ marginTop: '10px' }}>Medicine names: {medicineName}</p>}\r\n\r\n      <div style={textboxGroupStyle}>\r\n        <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\r\n        <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\r\n        <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\r\n          <option value=\"before\">Before food</option>\r\n          <option value=\"after\">After food</option>\r\n        </select>\r\n      </div>\r\n      <div style={buttonContainerStyle}>\r\n        <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n            </div>\r\n          </div>\r\n          <div style={signatureDateContainer}>\r\n            <div>\r\n              <label style={signatureStyle}>Signature : ____________________</label>\r\n            </div>\r\n            <div>\r\n              <label style={signatureStyle}>Date :</label>\r\n              <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <button style={buttonStyle} onClick={handlePrint}>Print</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prescription;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import drLogo from \"../../images/prescription/drlogo.png\";\r\n\r\n// const Prescription = () => {\r\n//   const doctors = [\r\n//     {\r\n//       name: 'Dr. Bhavesh C. Jain',\r\n//       specialty: 'Family Physician & Homeopathic Consultant',\r\n//       qualifications: 'BHMS, MD-Homeopathy',\r\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\r\n//     },\r\n//     {\r\n//       name: 'Dr. Sarah Smith',\r\n//       specialty: 'Pediatrician',\r\n//       qualifications: 'MBBS, DCH',\r\n//       address: '123 Elm Street, Mumbai'\r\n//     }\r\n//     // Add more doctor objects as needed\r\n//   ];\r\n\r\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\r\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\r\n//   const [medicineNames, setMedicineNames] = useState(['']); // State for medicine names\r\n//   const [dosage, setDosage] = useState(''); // State for dosage\r\n//   const [duration, setDuration] = useState(''); // State for duration\r\n//   const [foodType, setFoodType] = useState('before'); // State for food type\r\n//   const [gender, setGender] = useState(''); // State for gender\r\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\r\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\r\n\r\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\r\n\r\n//   const containerStyle = {\r\n//     maxWidth: '800px',\r\n//     margin: '100px auto 0',\r\n//     padding: '10px',\r\n//   };\r\n\r\n//   const bigBoxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#f9f9f9',\r\n//     padding: '20px',\r\n//     marginBottom: '20px',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   };\r\n\r\n//   const logoAndDoctorInfoContainerStyle = {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     backgroundColor: '#6666ff', // Add background color to the container\r\n//     borderRadius: '5px',\r\n//     padding: '10px',\r\n//     width: '100%', // Ensure the container takes full width\r\n//     marginBottom: '20px',\r\n//   };\r\n  \r\n//   const logoStyle = {\r\n//     width: '100px',\r\n//     height: '100px',\r\n//     marginRight: '20px',\r\n//   };\r\n//   const labelStyle = {\r\n//     marginRight: '10px',\r\n//     marginBottom: '15px',\r\n//     fontWeight: 'bold',\r\n//     width: '150px', // Adjusted width for labels\r\n//     textAlign: 'right', // Align labels to the right\r\n//   };\r\n//   const doctorInfoStyle = {\r\n//     color: 'white',\r\n//   };\r\n  \r\n//   const horizontalLineStyle = {\r\n//     borderTop: '1px solid #ccc',\r\n//     margin: '20px 0',\r\n//     width: '100%',\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     border: 'none',\r\n//     borderBottom: '1px solid #ccc',\r\n//     outline: 'none',\r\n//     padding: '5px',\r\n//     width: '80%', // Adjusted width for responsiveness\r\n//     marginBottom: '10px',\r\n//     textAlign: 'center'\r\n//   };\r\n\r\n//   const cardContainerStyle = {\r\n//     width: '100%', // Change width to 100% for responsiveness\r\n//     marginBottom: '10px',\r\n//   };\r\n\r\n//   const cardStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '15px', // Adjust padding to mimic the textarea size\r\n//     width: '100%', // Adjusted width\r\n//     height: 'auto', // Adjusted height to 'auto'\r\n//     position: 'relative', // Position the textboxes relative to the card\r\n//   };\r\n\r\n//   const textboxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '8px', // Adjust padding to minimize height\r\n//     width: '100%', // Adjusted width for the first textbox\r\n//     fontSize: '14px', // Adjust font size\r\n//     lineHeight: '1.5', // Adjust line height\r\n//     marginBottom: '20px', // Add margin between textboxes\r\n//     boxSizing: 'border-box', // Include padding and border in the width\r\n//   };\r\n\r\n//   const textboxGroupStyle = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column', // Stack the textboxes vertically\r\n//   };\r\n\r\n//   const smallTextboxStyle = {\r\n//     ...textboxStyle,\r\n//     flex: '1', // Use flexbox to distribute available space evenly\r\n//     marginBottom: '10px', // Adjust margin between textboxes\r\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\r\n//   };\r\n\r\n//   const medicineNameStyle = {\r\n//     ...textboxStyle,\r\n//     width: '50%', // Adjusted width for the medicine name textbox\r\n//     marginBottom: '10px', // Remove bottom margin\r\n//     textAlign: 'left', // Align text to the left\r\n//   };\r\n  \r\n//   const buttonContainerStyle = {\r\n//     display: 'flex',\r\n//     justifyContent: 'center', // Center align the button horizontally\r\n//     marginBottom: '10px',\r\n//     alignItems: 'center', // Center align the button with the input fields\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: '5px 15px', // Increase padding for better visibility\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     cursor: 'pointer',\r\n//   };\r\n  \r\n//   const inputNameStyle = {\r\n//     ...inputStyle,\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputAgeStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\r\n//     marginLeft: '20'\r\n//   };\r\n\r\n//   const inputGenderStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputDateStyle = {\r\n//     ...inputStyle,\r\n//     marginTop: '10px',\r\n//     marginLeft: 'auto', // Pushes the element to the right\r\n//     minWidth: '120px', // Ensure a minimum width for the date input\r\n//   };\r\n  \r\n//   const signatureDateContainer = {\r\n//     marginTop: '20px',\r\n//     marginLeft: 'auto', // Pushes the container to the right\r\n//     textAlign: 'right', // Align content to the right\r\n//   };\r\n  \r\n//   const signatureStyle = {\r\n//     fontWeight: 'bold',\r\n//   };\r\n\r\n//   const handlePrint = () => {\r\n//     const container = document.getElementById('container');\r\n//     const originalDisplayStyle = container.style.display;\r\n//     container.style.display = 'block'; // Show container for printing\r\n//     window.print(); // Print\r\n//     container.style.display = originalDisplayStyle; // Restore original display style\r\n//   };\r\n\r\n//   const handleAgeChange = (event) => {\r\n//     const age = event.target.value;\r\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\r\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\r\n//     } else {\r\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\r\n//     }\r\n//   };\r\n\r\n//   const handleAddMedicine = () => {\r\n//     setMedicineNames([...medicineNames, '']);\r\n//   };\r\n\r\n//   const handleRemoveMedicine = (index) => {\r\n//     const updatedMedicineNames = [...medicineNames];\r\n//     updatedMedicineNames.splice(index, 1);\r\n//     setMedicineNames(updatedMedicineNames);\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!medicineNames.every(name => name.trim()) || !dosage || !duration || !gender) {\r\n//       setErrorMessage('Please fill in all fields.');\r\n//       setSuccessMessage('');\r\n//     } else {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('Information saved successfully.');\r\n//       // Here you can add code to submit the form data\r\n//     }\r\n//     setTimeout(() => {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('');\r\n//     }, 1000);\r\n//   };\r\n\r\n//   // Get current date in \"YYYY-MM-DD\" format\r\n//   const getCurrentDate = () => {\r\n//     const date = new Date();\r\n//     const year = date.getFullYear();\r\n//     let month = date.getMonth() + 1;\r\n//     let day = date.getDate();\r\n\r\n//     // Add leading zero to month and day if needed\r\n//     if (month < 10) {\r\n//       month = `0${month}`;\r\n//     }\r\n//     if (day < 10) {\r\n//       day = `0${day}`;\r\n//     }\r\n\r\n//     return `${day}-${month}-${year}`;\r\n//   };\r\n\r\n//   const currentDate = getCurrentDate(); // Get current date\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={containerStyle} id=\"container\">\r\n//         <div style={bigBoxStyle}>\r\n//           <div style={logoAndDoctorInfoContainerStyle}>\r\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\r\n//             <div style={doctorInfoStyle}>\r\n//               <p>{selectedDoctor.name}</p>\r\n//               <p>{selectedDoctor.specialty}</p>\r\n//               <p>{selectedDoctor.qualifications}</p>\r\n//               <p>Address: {selectedDoctor.address}</p>\r\n//             </div>\r\n//           </div>\r\n//           <hr style={horizontalLineStyle} />\r\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n//             <div style={{ textAlign: 'left', width: '100%' }}>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                 <label style={labelStyle}>Patient's Name:</label>\r\n//                 <input type=\"text\" style={inputNameStyle} />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\r\n//                 <label style={labelStyle}>Age:</label>\r\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\r\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\r\n//                 <label style={labelStyle}>Gender:</label>\r\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\r\n//                   {/* <option value=\"\">Select</option> */}\r\n//                   <option value=\"male\">Male</option>\r\n//                   <option value=\"female\">Female</option>\r\n//                   <option value=\"other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div style={{ position: 'relative' }}>\r\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \r\n//                 <div style={cardContainerStyle}>\r\n//                   <div style={cardStyle}>\r\n//                     <p style={labelStyle}>Medicine names:</p>\r\n//                     {medicineNames.map((medicine, index) => (\r\n//                       <div key={index} style={{ marginBottom: '10px' }}>\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           style={medicineNameStyle}\r\n//                           value={medicine}\r\n//                           onChange={(e) => {\r\n//                             const updatedMedicineNames = [...medicineNames];\r\n//                             updatedMedicineNames[index] = e.target.value;\r\n//                             setMedicineNames(updatedMedicineNames);\r\n//                           }}\r\n//                         />\r\n//                         <button style={{ marginLeft: '10px' }} onClick={() => handleRemoveMedicine(index)}>Remove</button>\r\n//                       </div>\r\n//                     ))}\r\n//                     <button onClick={handleAddMedicine}>Add Medicine</button>\r\n//                     <div style={textboxGroupStyle}>\r\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Dosage eg. 1+0+1\" onChange={(e) => setDosage(e.target.value)} />\r\n//                       <input type=\"text\" style={{ ...smallTextboxStyle, marginBottom: '10px' }} placeholder=\"Duration eg. 5 days\" onChange={(e) => setDuration(e.target.value)} />\r\n//                       <select style={smallTextboxStyle} onChange={(e) => setFoodType(e.target.value)}>\r\n//                         <option value=\"before\">Before food</option>\r\n//                         <option value=\"after\">After food</option>\r\n//                       </select>\r\n//                     </div>\r\n//                     <div style={buttonContainerStyle}>\r\n//                       <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\r\n//                     </div>\r\n//                     {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n//                     {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//             </div>\r\n//           </div>\r\n//           <div style={signatureDateContainer}>\r\n//             <div>\r\n//               <label style={signatureStyle}>Signature : ____________________</label>\r\n//             </div>\r\n//             <div>\r\n//               <label style={signatureStyle}>Date :</label>\r\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Prescription;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import drLogo from \"../../images/prescription/drlogo.png\";\r\n\r\n// const Prescription = () => {\r\n//   const doctors = [\r\n//     {\r\n//       name: 'Dr. Bhavesh C. Jain',\r\n//       specialty: 'Family Physician & Homeopathic Consultant',\r\n//       qualifications: 'BHMS, MD-Homeopathy',\r\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\r\n//     },\r\n//     {\r\n//       name: 'Dr. Sarah Smith',\r\n//       specialty: 'Pediatrician',\r\n//       qualifications: 'MBBS, DCH',\r\n//       address: '123 Elm Street, Mumbai'\r\n//     }\r\n//     // Add more doctor objects as needed\r\n//   ];\r\n\r\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0); // Index of the selected doctor\r\n//   const [ageError, setAgeError] = useState(false); // State for age validation error\r\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]); // State for medicines\r\n//   const [gender, setGender] = useState(''); // State for gender\r\n//   const [errorMessage, setErrorMessage] = useState(''); // State for error message\r\n//   const [successMessage, setSuccessMessage] = useState(''); // State for success message\r\n\r\n//   const selectedDoctor = doctors[selectedDoctorIndex]; // Selected doctor details\r\n\r\n//   const containerStyle = {\r\n//     maxWidth: '800px',\r\n//     margin: '100px auto 0',\r\n//     padding: '10px',\r\n//   };\r\n\r\n//   const bigBoxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#f9f9f9',\r\n//     padding: '20px',\r\n//     marginBottom: '20px',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   };\r\n\r\n//   const logoAndDoctorInfoContainerStyle = {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     backgroundColor: '#6666ff', // Add background color to the container\r\n//     borderRadius: '5px',\r\n//     padding: '10px',\r\n//     width: '100%', // Ensure the container takes full width\r\n//     marginBottom: '20px',\r\n//   };\r\n  \r\n//   const logoStyle = {\r\n//     width: '100px',\r\n//     height: '100px',\r\n//     marginRight: '20px',\r\n//   };\r\n//   const labelStyle = {\r\n//     marginRight: '10px',\r\n//     marginBottom: '15px',\r\n//     fontWeight: 'bold',\r\n//     width: '150px', // Adjusted width for labels\r\n//     textAlign: 'right', // Align labels to the right\r\n//   };\r\n//   const doctorInfoStyle = {\r\n//     color: 'white',\r\n//   };\r\n  \r\n//   const horizontalLineStyle = {\r\n//     borderTop: '1px solid #ccc',\r\n//     margin: '20px 0',\r\n//     width: '100%',\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     border: 'none',\r\n//     borderBottom: '1px solid #ccc',\r\n//     outline: 'none',\r\n//     padding: '5px',\r\n//     width: '80%', // Adjusted width for responsiveness\r\n//     marginBottom: '10px',\r\n//     textAlign: 'center'\r\n//   };\r\n\r\n//   const cardContainerStyle = {\r\n//     width: '100%', // Change width to 100% for responsiveness\r\n//     marginBottom: '10px',\r\n//   };\r\n\r\n//   const cardStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '15px', // Adjust padding to mimic the textarea size\r\n//     width: '100%', // Adjusted width\r\n//     height: 'auto', // Adjusted height to 'auto'\r\n//     position: 'relative', // Position the textboxes relative to the card\r\n//   };\r\n\r\n//   const textboxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '8px', // Adjust padding to minimize height\r\n//     width: '100%', // Adjusted width for the first textbox\r\n//     fontSize: '14px', // Adjust font size\r\n//     lineHeight: '1.5', // Adjust line height\r\n//     marginBottom: '20px', // Add margin between textboxes\r\n//     boxSizing: 'border-box', // Include padding and border in the width\r\n//   };\r\n\r\n//   const textboxGroupStyle = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column', // Stack the textboxes vertically\r\n//   };\r\n\r\n//   const smallTextboxStyle = {\r\n//     ...textboxStyle,\r\n//     flex: '1', // Use flexbox to distribute available space evenly\r\n//     marginBottom: '10px', // Adjust margin between textboxes\r\n//     width: 'calc(25% - 20px)', // Adjusted width for the small textboxes\r\n//   };\r\n\r\n//   const buttonContainerStyle = {\r\n//     display: 'flex',\r\n//     justifyContent: 'center', // Center align the button horizontally\r\n//     marginBottom: '10px',\r\n//     alignItems: 'center', // Center align the button with the input fields\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: '5px 15px', // Increase padding for better visibility\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     cursor: 'pointer',\r\n//   };\r\n  \r\n//   const inputNameStyle = {\r\n//     ...inputStyle,\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputAgeStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)', // Adjusted width for the age input\r\n//     marginLeft: '20'\r\n//   };\r\n\r\n//   const inputGenderStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)', // Adjusted width for the gender input\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputDateStyle = {\r\n//     ...inputStyle,\r\n//     marginTop: '10px',\r\n//     marginLeft: 'auto', // Pushes the element to the right\r\n//     minWidth: '120px', // Ensure a minimum width for the date input\r\n//   };\r\n  \r\n//   const signatureDateContainer = {\r\n//     marginTop: '20px',\r\n//     marginLeft: 'auto', // Pushes the container to the right\r\n//     textAlign: 'right', // Align content to the right\r\n//   };\r\n  \r\n//   const signatureStyle = {\r\n//     fontWeight: 'bold',\r\n//   };\r\n\r\n//   const handlePrint = () => {\r\n//     const container = document.getElementById('container');\r\n//     const originalDisplayStyle = container.style.display;\r\n//     container.style.display = 'block'; // Show container for printing\r\n//     window.print(); // Print\r\n//     container.style.display = originalDisplayStyle; // Restore original display style\r\n//   };\r\n\r\n//   const handleAgeChange = (event) => {\r\n//     const age = event.target.value;\r\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\r\n//       setAgeError(true); // Set error if input contains non-digit characters or if age is negative or zero\r\n//     } else {\r\n//       setAgeError(false); // Clear error if input contains only digits and age is positive\r\n//     }\r\n//   };\r\n\r\n//   const handleAddMedicine = () => {\r\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\r\n//   };\r\n\r\n//   const handleMedicineChange = (index, field, value) => {\r\n//     const updatedMedicines = [...medicines];\r\n//     updatedMedicines[index][field] = value;\r\n//     setMedicines(updatedMedicines);\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\r\n//       setErrorMessage('Please fill in all fields.');\r\n//       setSuccessMessage('');\r\n//     } else {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('Information saved successfully.');\r\n//       // Here you can add code to submit the form data\r\n//     }\r\n//     setTimeout(() => {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('');\r\n//     }, 1000);\r\n//   };\r\n\r\n//   // Get current date in \"YYYY-MM-DD\" format\r\n//   const getCurrentDate = () => {\r\n//     const date = new Date();\r\n//     const year = date.getFullYear();\r\n//     let month = date.getMonth() + 1;\r\n//     let day = date.getDate();\r\n\r\n//     // Add leading zero to month and day if needed\r\n//     if (month < 10) {\r\n//       month = `0${month}`;\r\n//     }\r\n//     if (day < 10) {\r\n//       day = `0${day}`;\r\n//     }\r\n\r\n//     return `${day}-${month}-${year}`;\r\n//   };\r\n\r\n//   const currentDate = getCurrentDate(); // Get current date\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={containerStyle} id=\"container\">\r\n//         <div style={bigBoxStyle}>\r\n//           <div style={logoAndDoctorInfoContainerStyle}>\r\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\r\n//             <div style={doctorInfoStyle}>\r\n//               <p>{selectedDoctor.name}</p>\r\n//               <p>{selectedDoctor.specialty}</p>\r\n//               <p>{selectedDoctor.qualifications}</p>\r\n//               <p>Address: {selectedDoctor.address}</p>\r\n//             </div>\r\n//           </div>\r\n//           <hr style={horizontalLineStyle} />\r\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n//             <div style={{ textAlign: 'left', width: '100%' }}>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                 <label style={labelStyle}>Patient's Name:</label>\r\n//                 <input type=\"text\" style={inputNameStyle} />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\r\n//                 <label style={labelStyle}>Age:</label>\r\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\r\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\r\n//                 <label style={labelStyle}>Gender:</label>\r\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\r\n//                   {/* <option value=\"\">Select</option> */}\r\n//                   <option value=\"male\">Male</option>\r\n//                   <option value=\"female\">Female</option>\r\n//                   <option value=\"other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div style={{ position: 'relative' }}>\r\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \r\n//                 <div style={cardContainerStyle}>\r\n//                   {medicines.map((medicine, index) => (\r\n//                     <div key={index} style={cardStyle}>\r\n//                       <p style={labelStyle}>Medicine name:</p>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         style={textboxStyle}\r\n//                         value={medicine.name}\r\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\r\n//                         onKeyPress={(e) => {\r\n//                           if (e.key === 'Enter') handleAddMedicine();\r\n//                         }}\r\n//                       />\r\n//                       <div style={textboxGroupStyle}>\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\r\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\r\n//                           <option value=\"before\">Before food</option>\r\n//                           <option value=\"after\">After food</option>\r\n//                         </select>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                   <div style={buttonContainerStyle}>\r\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\r\n//                   </div>\r\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n//                 </div>\r\n//               </div>\r\n              \r\n//             </div>\r\n//           </div>\r\n//           <div style={signatureDateContainer}>\r\n//             <div>\r\n//               <label style={signatureStyle}>Signature : ____________________</label>\r\n//             </div>\r\n//             <div>\r\n//               <label style={signatureStyle}>Date :</label>\r\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Prescription;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import drLogo from \"../../images/prescription/drlogo.png\";\r\n\r\n// const Prescription = () => {\r\n//   const doctors = [\r\n//     {\r\n//       name: 'Dr. Bhavesh C. Jain',\r\n//       specialty: 'Family Physician & Homeopathic Consultant',\r\n//       qualifications: 'BHMS, MD-Homeopathy',\r\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\r\n//     },\r\n//     {\r\n//       name: 'Dr. Sarah Smith',\r\n//       specialty: 'Pediatrician',\r\n//       qualifications: 'MBBS, DCH',\r\n//       address: '123 Elm Street, Mumbai'\r\n//     }\r\n//   ];\r\n\r\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\r\n//   const [ageError, setAgeError] = useState(false);\r\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\r\n//   const [gender, setGender] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n\r\n//   const selectedDoctor = doctors[selectedDoctorIndex];\r\n\r\n//   const containerStyle = {\r\n//     maxWidth: '800px',\r\n//     margin: '100px auto 0',\r\n//     padding: '10px',\r\n//   };\r\n\r\n//   const bigBoxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#f9f9f9',\r\n//     padding: '20px',\r\n//     marginBottom: '20px',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   };\r\n\r\n//   const logoAndDoctorInfoContainerStyle = {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     backgroundColor: '#6666ff',\r\n//     borderRadius: '5px',\r\n//     padding: '10px',\r\n//     width: '100%',\r\n//     marginBottom: '20px',\r\n//   };\r\n  \r\n//   const logoStyle = {\r\n//     width: '100px',\r\n//     height: '100px',\r\n//     marginRight: '20px',\r\n//   };\r\n//   const labelStyle = {\r\n//     marginRight: '10px',\r\n//     marginBottom: '15px',\r\n//     fontWeight: 'bold',\r\n//     width: '150px',\r\n//     textAlign: 'right',\r\n//   };\r\n//   const doctorInfoStyle = {\r\n//     color: 'white',\r\n//   };\r\n  \r\n//   const horizontalLineStyle = {\r\n//     borderTop: '1px solid #ccc',\r\n//     margin: '20px 0',\r\n//     width: '100%',\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     border: 'none',\r\n//     borderBottom: '1px solid #ccc',\r\n//     outline: 'none',\r\n//     padding: '5px',\r\n//     width: '80%',\r\n//     marginBottom: '10px',\r\n//     textAlign: 'center'\r\n//   };\r\n\r\n//   const cardContainerStyle = {\r\n//     width: '100%',\r\n//     marginBottom: '10px',\r\n//   };\r\n\r\n//   const cardStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '15px',\r\n//     width: '100%',\r\n//     height: 'auto',\r\n//     position: 'relative',\r\n//   };\r\n\r\n//   const textboxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '8px',\r\n//     width: '100%',\r\n//     fontSize: '14px',\r\n//     lineHeight: '1.5',\r\n//     marginBottom: '20px',\r\n//     boxSizing: 'border-box',\r\n//   };\r\n\r\n//   const textboxGroupStyle = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//   };\r\n\r\n//   const smallTextboxStyle = {\r\n//     ...textboxStyle,\r\n//     flex: '1',\r\n//     marginBottom: '10px',\r\n//     width: 'calc(25% - 20px)',\r\n//   };\r\n\r\n//   const buttonContainerStyle = {\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     marginBottom: '10px',\r\n//     alignItems: 'center',\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: '5px 15px',\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     cursor: 'pointer',\r\n//   };\r\n  \r\n//   const inputNameStyle = {\r\n//     ...inputStyle,\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputAgeStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)',\r\n//     marginLeft: '20'\r\n//   };\r\n\r\n//   const inputGenderStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)',\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputDateStyle = {\r\n//     ...inputStyle,\r\n//     marginTop: '10px',\r\n//     marginLeft: 'auto',\r\n//     minWidth: '120px',\r\n//   };\r\n  \r\n//   const signatureDateContainer = {\r\n//     marginTop: '20px',\r\n//     marginLeft: 'auto',\r\n//     textAlign: 'right',\r\n//   };\r\n  \r\n//   const signatureStyle = {\r\n//     fontWeight: 'bold',\r\n//   };\r\n\r\n//   const handlePrint = () => {\r\n//     const container = document.getElementById('container');\r\n//     const originalDisplayStyle = container.style.display;\r\n//     container.style.display = 'block';\r\n//     window.print();\r\n//     container.style.display = originalDisplayStyle;\r\n//   };\r\n\r\n//   const handleAgeChange = (event) => {\r\n//     const age = event.target.value;\r\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\r\n//       setAgeError(true);\r\n//     } else {\r\n//       setAgeError(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddMedicine = () => {\r\n//     setMedicines([...medicines, { name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\r\n//   };\r\n\r\n//   const handleMedicineChange = (index, field, value) => {\r\n//     const updatedMedicines = [...medicines];\r\n//     updatedMedicines[index][field] = value;\r\n    \r\n//     // Update the content of the next medicine box if it exists\r\n//     if (index < medicines.length - 1) {\r\n//       updatedMedicines[index + 1][field] = value;\r\n//     }\r\n    \r\n//     setMedicines(updatedMedicines);\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\r\n//       setErrorMessage('Please fill in all fields.');\r\n//       setSuccessMessage('');\r\n//     } else {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('Information saved successfully.');\r\n//     }\r\n//     setTimeout(() => {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('');\r\n//     }, 1000);\r\n//   };\r\n\r\n//   const getCurrentDate = () => {\r\n//     const date = new Date();\r\n//     const year = date.getFullYear();\r\n//     let month = date.getMonth() + 1;\r\n//     let day = date.getDate();\r\n\r\n//     if (month < 10) {\r\n//       month = `0${month}`;\r\n//     }\r\n//     if (day < 10) {\r\n//       day = `0${day}`;\r\n//     }\r\n\r\n//     return `${day}-${month}-${year}`;\r\n//   };\r\n\r\n//   const currentDate = getCurrentDate();\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={containerStyle} id=\"container\">\r\n//         <div style={bigBoxStyle}>\r\n//           <div style={logoAndDoctorInfoContainerStyle}>\r\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\r\n//             <div style={doctorInfoStyle}>\r\n//               <p>{selectedDoctor.name}</p>\r\n//               <p>{selectedDoctor.specialty}</p>\r\n//               <p>{selectedDoctor.qualifications}</p>\r\n//               <p>Address: {selectedDoctor.address}</p>\r\n//             </div>\r\n//           </div>\r\n//           <hr style={horizontalLineStyle} />\r\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n//             <div style={{ textAlign: 'left', width: '100%' }}>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                 <label style={labelStyle}>Patient's Name:</label>\r\n//                 <input type=\"text\" style={inputNameStyle} />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\r\n//                 <label style={labelStyle}>Age:</label>\r\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\r\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\r\n//                 <label style={labelStyle}>Gender:</label>\r\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\r\n//                   <option value=\"male\">Male</option>\r\n//                   <option value=\"female\">Female</option>\r\n//                   <option value=\"other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div style={{ position: 'relative' }}>\r\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \r\n//                 <div style={cardContainerStyle}>\r\n//                   {medicines.map((medicine, index) => (\r\n//                     <div key={index} style={cardStyle}>\r\n//                       <p style={labelStyle}>Medicine name:</p>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         style={textboxStyle}\r\n//                         value={medicine.name}\r\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\r\n//                         onKeyPress={(e) => {\r\n//                           if (e.key === 'Enter') handleAddMedicine();\r\n//                         }}\r\n//                       />\r\n//                       <div style={textboxGroupStyle}>\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\r\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\r\n//                           <option value=\"before\">Before food</option>\r\n//                           <option value=\"after\">After food</option>\r\n//                         </select>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                   <div style={buttonContainerStyle}>\r\n//                     <button style={buttonStyle} onClick={handleSubmit}>Submit</button>\r\n//                   </div>\r\n//                   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n//                   {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div style={signatureDateContainer}>\r\n//             <div>\r\n//               <label style={signatureStyle}>Signature : ____________________</label>\r\n//             </div>\r\n//             <div>\r\n//               <label style={signatureStyle}>Date :</label>\r\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Prescription;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import drLogo from \"../../images/prescription/drlogo.png\";\r\n\r\n// const Prescription = () => {\r\n//   const doctors = [\r\n//     {\r\n//       name: 'Dr. Bhavesh C. Jain',\r\n//       specialty: 'Family Physician & Homeopathic Consultant',\r\n//       qualifications: 'BHMS, MD-Homeopathy',\r\n//       address: 'Mantri Aangan Complex, Pingale Wasti Mundhawa, Pune - 411036.'\r\n//     },\r\n//     {\r\n//       name: 'Dr. Sarah Smith',\r\n//       specialty: 'Pediatrician',\r\n//       qualifications: 'MBBS, DCH',\r\n//       address: '123 Elm Street, Mumbai'\r\n//     }\r\n//   ];\r\n\r\n//   const [selectedDoctorIndex, setSelectedDoctorIndex] = useState(0);\r\n//   const [ageError, setAgeError] = useState(false);\r\n//   const [medicines, setMedicines] = useState([{ name: '', dosage: '', duration: '', frequency: '', foodType: '' }]);\r\n//   const [gender, setGender] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n\r\n//   const selectedDoctor = doctors[selectedDoctorIndex];\r\n\r\n//   const containerStyle = {\r\n//     maxWidth: '800px',\r\n//     margin: '100px auto 0',\r\n//     padding: '10px',\r\n//   };\r\n\r\n//   const bigBoxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#f9f9f9',\r\n//     padding: '20px',\r\n//     marginBottom: '20px',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   };\r\n\r\n//   const logoAndDoctorInfoContainerStyle = {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     backgroundColor: '#6666ff',\r\n//     borderRadius: '5px',\r\n//     padding: '10px',\r\n//     width: '100%',\r\n//     marginBottom: '20px',\r\n//   };\r\n  \r\n//   const logoStyle = {\r\n//     width: '100px',\r\n//     height: '100px',\r\n//     marginRight: '20px',\r\n//   };\r\n//   const labelStyle = {\r\n//     marginRight: '10px',\r\n//     marginBottom: '15px',\r\n//     fontWeight: 'bold',\r\n//     width: '150px',\r\n//     textAlign: 'right',\r\n//   };\r\n//   const doctorInfoStyle = {\r\n//     color: 'white',\r\n//   };\r\n  \r\n//   const horizontalLineStyle = {\r\n//     borderTop: '1px solid #ccc',\r\n//     margin: '20px 0',\r\n//     width: '100%',\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     border: 'none',\r\n//     borderBottom: '1px solid #ccc',\r\n//     outline: 'none',\r\n//     padding: '5px',\r\n//     width: '80%',\r\n//     marginBottom: '10px',\r\n//     textAlign: 'center'\r\n//   };\r\n\r\n//   const cardContainerStyle = {\r\n//     width: '100%',\r\n//     marginBottom: '10px',\r\n//   };\r\n\r\n//   const cardStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '15px',\r\n//     width: '100%',\r\n//     height: 'auto',\r\n//     position: 'relative',\r\n//   };\r\n\r\n//   const textboxStyle = {\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     padding: '8px',\r\n//     width: '100%',\r\n//     fontSize: '14px',\r\n//     lineHeight: '1.5',\r\n//     marginBottom: '20px',\r\n//     boxSizing: 'border-box',\r\n//   };\r\n\r\n//   const textboxGroupStyle = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//   };\r\n\r\n//   const smallTextboxStyle = {\r\n//     ...textboxStyle,\r\n//     flex: '1',\r\n//     marginBottom: '10px',\r\n//     width: 'calc(25% - 20px)',\r\n//   };\r\n\r\n//   const buttonContainerStyle = {\r\n//     display: 'none', // Hides the button container\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: '5px 15px',\r\n//     borderRadius: '5px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     cursor: 'pointer',\r\n//   };\r\n  \r\n//   const inputNameStyle = {\r\n//     ...inputStyle,\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputAgeStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)',\r\n//     marginLeft: '20'\r\n//   };\r\n\r\n//   const inputGenderStyle = {\r\n//     ...inputStyle,\r\n//     width: 'calc(80% - 170px)',\r\n//     marginLeft: '20px' \r\n//   };\r\n\r\n//   const inputDateStyle = {\r\n//     ...inputStyle,\r\n//     marginTop: '10px',\r\n//     marginLeft: 'auto',\r\n//     minWidth: '120px',\r\n//   };\r\n  \r\n//   const signatureDateContainer = {\r\n//     marginTop: '20px',\r\n//     marginLeft: 'auto',\r\n//     textAlign: 'right',\r\n//   };\r\n  \r\n//   const signatureStyle = {\r\n//     fontWeight: 'bold',\r\n//   };\r\n\r\n//   const handlePrint = () => {\r\n//     const container = document.getElementById('container');\r\n//     const originalDisplayStyle = container.style.display;\r\n//     container.style.display = 'block';\r\n//     window.print();\r\n//     container.style.display = originalDisplayStyle;\r\n//   };\r\n\r\n//   const handleAgeChange = (event) => {\r\n//     const age = event.target.value;\r\n//     if (!/^\\d+$/.test(age) || parseInt(age, 10) <= 0) {\r\n//       setAgeError(true);\r\n//     } else {\r\n//       setAgeError(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleMedicineChange = (index, field, value) => {\r\n//     const updatedMedicines = [...medicines];\r\n//     updatedMedicines[index][field] = value;\r\n    \r\n//     // Update the content of the next medicine box if it exists\r\n//     if (index < medicines.length - 1) {\r\n//       updatedMedicines[index + 1][field] = value;\r\n//     }\r\n    \r\n//     // Add a new medicine box if the last medicine box is being typed in\r\n//     if (index === medicines.length - 1 && value.trim() !== '') {\r\n//       updatedMedicines.push({ name: '', dosage: '', duration: '', frequency: '', foodType: '' });\r\n//     }\r\n    \r\n//     setMedicines(updatedMedicines);\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     if (!medicines.every(({ name }) => name.trim()) || !gender) {\r\n//       setErrorMessage('Please fill in all fields.');\r\n//       setSuccessMessage('');\r\n//     } else {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('Information saved successfully.');\r\n//     }\r\n//     setTimeout(() => {\r\n//       setErrorMessage('');\r\n//       setSuccessMessage('');\r\n//     }, 1000);\r\n//   };\r\n\r\n//   const getCurrentDate = () => {\r\n//     const date = new Date();\r\n//     const year = date.getFullYear();\r\n//     let month = date.getMonth() + 1;\r\n//     let day = date.getDate();\r\n\r\n//     if (month < 10) {\r\n//       month = `0${month}`;\r\n//     }\r\n//     if (day < 10) {\r\n//       day = `0${day}`;\r\n//     }\r\n\r\n//     return `${day}-${month}-${year}`;\r\n//   };\r\n\r\n//   const currentDate = getCurrentDate();\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={containerStyle} id=\"container\">\r\n//         <div style={bigBoxStyle}>\r\n//           <div style={logoAndDoctorInfoContainerStyle}>\r\n//             <img src={drLogo} alt=\"Logo\" style={logoStyle} />\r\n//             <div style={doctorInfoStyle}>\r\n//               <p>{selectedDoctor.name}</p>\r\n//               <p>{selectedDoctor.specialty}</p>\r\n//               <p>{selectedDoctor.qualifications}</p>\r\n//               <p>Address: {selectedDoctor.address}</p>\r\n//             </div>\r\n//           </div>\r\n//           <hr style={horizontalLineStyle} />\r\n//           <div style={{ textAlign: 'center', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n//             <div style={{ textAlign: 'left', width: '100%' }}>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//                 <label style={labelStyle}>Patient's Name:</label>\r\n//                 <input type=\"text\" style={inputNameStyle} />\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-100px' }}>\r\n//                 <label style={labelStyle}>Age:</label>\r\n//                 <input type=\"number\" style={inputAgeStyle} onChange={handleAgeChange} />\r\n//                 {ageError && <span style={{ color: 'blue' }}><br /> Only digits are allowed for age</span>}\r\n//               </div>\r\n//               <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', marginLeft:'-70px' }}>\r\n//                 <label style={labelStyle}>Gender:</label>\r\n//                 <select style={inputGenderStyle} onChange={(e) => setGender(e.target.value)}>\r\n//                   <option value=\"male\">Male</option>\r\n//                   <option value=\"female\">Female</option>\r\n//                   <option value=\"other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div style={{ position: 'relative' }}>\r\n//                 <label style={labelStyle}>Prescriptions:</label><br /> \r\n//                 <div style={cardContainerStyle}>\r\n//                   {medicines.map((medicine, index) => (\r\n//                     <div key={index} style={cardStyle}>\r\n//                       <p style={labelStyle}>Medicine name:</p>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         style={textboxStyle}\r\n//                         value={medicine.name}\r\n//                         onChange={(e) => handleMedicineChange(index, 'name', e.target.value)}\r\n//                       />\r\n//                       <div style={textboxGroupStyle}>\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Dosage\" onChange={(e) => handleMedicineChange(index, 'dosage', e.target.value)} />\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Duration\" onChange={(e) => handleMedicineChange(index, 'duration', e.target.value)} />\r\n//                         <input type=\"text\" style={smallTextboxStyle} placeholder=\"Frequency\" onChange={(e) => handleMedicineChange(index, 'frequency', e.target.value)} />\r\n//                         <select style={smallTextboxStyle} onChange={(e) => handleMedicineChange(index, 'foodType', e.target.value)}>\r\n//                           <option value=\"before\">Before food</option>\r\n//                           <option value=\"after\">After food</option>\r\n//                         </select>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div style={signatureDateContainer}>\r\n//             <div>\r\n//               <label style={signatureStyle}>Signature : ____________________</label>\r\n//             </div>\r\n//             <div>\r\n//               <label style={signatureStyle}>Date :</label>\r\n//               <input type=\"text\" style={{ ...inputDateStyle }} value={currentDate} readOnly />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n//         <button style={buttonStyle} onClick={handlePrint}>Print</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Prescription;\r\n"],"mappings":"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;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAesH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}