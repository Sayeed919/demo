{"ast":null,"code":"import _objectSpread from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/root/sayeed/demo/meditro/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState, useRef } from 'react';\n// const ChatBox = () => {\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [messages, setMessages] = useState({});\n//   const [inputValue, setInputValue] = useState('');\n//   const inputRef = useRef(null);\n//   const containerStyle = {\n//     display: 'flex',\n//     height: 'calc(100vh - 100px)', // Adjusted to ensure proper square box format\n//     marginTop: '100px',\n//   };\n//   const leftBoxStyle = {\n//     flex: '0 0 20%',\n//     backgroundColor: '#f0f0f0',\n//     padding: '20px',\n//     height: '100%', // Adjusted to ensure proper square box format\n//     overflowY: 'auto',\n//   };\n//   const rightBoxStyle = {\n//     flex: 1,\n//     backgroundColor: '#ffffff',\n//     padding: '20px',\n//     cursor: 'text',\n//     position: 'relative', // Added for positioning the input and send button\n//   };\n//   const userList = [\n//     { id: 1, name: 'Ajinkya', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 2, name: 'Aditi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 3, name: 'Shruti', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 4, name: 'Pallavi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 5, name: 'Chetan', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 6, name: 'Rutuja', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'Gouri', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 6, name: 'Dnyaneshwari', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'palle', profilePhoto: require('../../images/chat/chat7.jpg') },\n//   ];\n//   const userStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//     marginBottom: '10px',\n//     cursor: 'pointer',\n//     borderBottom: '1px solid #ccc',\n//     paddingBottom: '10px',\n//   };\n//   const profilePhotoStyle = {\n//     width: '50px',\n//     height: '50px',\n//     borderRadius: '50%',\n//     marginRight: '10px',\n//   };\n//   const handleInputClick = () => {\n//     if (inputRef.current) {\n//       inputRef.current.focus();\n//     }\n//   };\n//   const handleMessageSend = () => {\n//     if (inputValue.trim() !== '') {\n//       const updatedMessages = { ...messages };\n//       if (!updatedMessages[selectedUser.id]) {\n//         updatedMessages[selectedUser.id] = [];\n//       }\n//       updatedMessages[selectedUser.id].push({\n//         text: inputValue,\n//         sender: 'me',\n//       });\n//       setMessages(updatedMessages);\n//       setInputValue('');\n//     }\n//   };\n//   const handleKeyPress = (e) => {\n//     if (e.key === 'Enter' && inputValue.trim() !== '') {\n//       e.preventDefault();\n//       handleMessageSend();\n//     }\n//   };\n//   return (\n//     <div style={containerStyle}>\n//       <div style={leftBoxStyle}>\n//         <h3 style={{ marginBottom: '30px', marginTop: '10px', textAlign: 'center' }}>Messages</h3>\n//         {userList.map((user) => (\n//           <div key={user.id} style={userStyle} onClick={() => setSelectedUser(user)}>\n//             <div style={{ display: 'flex', alignItems: 'center' }}>\n//               <img src={user.profilePhoto} alt={`${user.name} Profile`} style={profilePhotoStyle} />\n//               <span>{user.name}</span>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div style={rightBoxStyle} onClick={handleInputClick}>\n//         {selectedUser && (\n//           <div>\n//             <div style={{ maxHeight: 'calc(100% - 70px)', overflowY: 'auto' }}>\n//               <h3 style={{ marginBottom: '30px', marginTop: '20px', fontSize: '20px' }}>Chat with {selectedUser.name}</h3>\n//               {messages[selectedUser.id] &&\n//                 messages[selectedUser.id].map((message, index) => (\n//                   <div key={index} style={{ marginBottom: '10px', textAlign: message.sender === 'me' ? 'right' : 'left' }}>\n//                     <div style={{ display: 'inline-block', backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff', padding: '10px', borderRadius: '10px' }}>\n//                       {message.text}\n//                     </div>\n//                   </div>\n//                 ))}\n//             </div>\n//             <div style={{ position: 'absolute', bottom: '20px', left: 0, width: '100%', display: 'flex' }}>\n//               <input\n//                 ref={inputRef}\n//                 type=\"text\"\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//                 placeholder=\"Type your message...\"\n//                 style={{ flex: 1, padding: '10px', marginRight: '10px' }}\n//                 onKeyPress={handleKeyPress}\n//               />\n//               <button style={{ width: '100px', borderRadius: '8px', border: 'none', backgroundColor: '#3D3AFF', color: 'white' }} onClick={handleMessageSend}>Send</button>\n//             </div>\n//           </div>\n//         )}\n//         {!selectedUser && <div>Please select a user to start chatting. </div>}\n//       </div>\n//     </div>\n//   );\n// };\n// export default ChatBox;\nimport React,{useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatBox=function ChatBox(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),inputValue=_useState6[0],setInputValue=_useState6[1];var inputRef=useRef(null);var containerStyle={display:'flex',height:'calc(100vh - 100px)',// Adjusted to ensure proper square box format\nmarginTop:'100px'};var leftBoxStyle={flex:'0 0 20%',backgroundColor:'#f0f0f0',padding:'20px',height:'100%',// Adjusted to ensure proper square box format\noverflowY:'auto'};var rightBoxStyle={flex:1,backgroundColor:'#ffffff',padding:'20px',cursor:'text',position:'relative'// Added for positioning the input and send button\n};var userList=[{id:1,name:'Ajinkya',profilePhoto:require('../../images/chat/chat6.jpg')},{id:2,name:'Aditi',profilePhoto:require('../../images/chat/chat7.jpg')},{id:3,name:'Shruti',profilePhoto:require('../../images/chat/user5.jpg')},{id:4,name:'Pallavi',profilePhoto:require('../../images/chat/chat7.jpg')},{id:5,name:'Chetan',profilePhoto:require('../../images/chat/chat6.jpg')},{id:6,name:'Rutuja',profilePhoto:require('../../images/chat/user5.jpg')},{id:5,name:'Gouri',profilePhoto:require('../../images/chat/chat7.jpg')},{id:6,name:'Dnyaneshwari',profilePhoto:require('../../images/chat/user5.jpg')},{id:5,name:'palle',profilePhoto:require('../../images/chat/chat7.jpg')}];var userStyle={display:'flex',alignItems:'center',justifyContent:'space-between',marginBottom:'10px',cursor:'pointer',borderBottom:'1px solid #ccc',paddingBottom:'10px'};var profilePhotoStyle={width:'50px',height:'50px',borderRadius:'50%',marginRight:'10px'};var handleInputClick=function handleInputClick(){if(inputRef.current){inputRef.current.focus();}};var handleMessageSend=function handleMessageSend(){if(inputValue.trim()!==''){var updatedMessages=_objectSpread({},messages);if(!updatedMessages[selectedUser.id]){updatedMessages[selectedUser.id]=[];}updatedMessages[selectedUser.id].push({text:inputValue,sender:'me'});setMessages(updatedMessages);setInputValue('');}};var handleKeyPress=function handleKeyPress(e){if(e.key==='Enter'&&inputValue.trim()!==''){e.preventDefault();handleMessageSend();}};return/*#__PURE__*/_jsxs(\"div\",{style:containerStyle,children:[/*#__PURE__*/_jsxs(\"div\",{style:leftBoxStyle,children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'30px',marginTop:'10px',textAlign:'center'},children:\"Messages\"}),userList.map(function(user){return/*#__PURE__*/_jsx(\"div\",{style:userStyle,onClick:function onClick(){return setSelectedUser(user);},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"img\",{src:user.profilePhoto,alt:\"\".concat(user.name,\" Profile\"),style:profilePhotoStyle}),/*#__PURE__*/_jsx(\"span\",{children:user.name})]})},user.id);})]}),/*#__PURE__*/_jsxs(\"div\",{style:rightBoxStyle,onClick:handleInputClick,children:[selectedUser&&/*#__PURE__*/_jsxs(\"div\",{style:{width:'800px',margin:'0 auto'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{maxHeight:'calc(100vh - 170px)',overflowY:'scroll',overflowX:'hidden',scrollbarWidth:'none',msOverflowStyle:'none'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{marginBottom:'30px',marginTop:'20px',fontSize:'20px'},children:[\"Chat with \",selectedUser.name]}),messages[selectedUser.id]&&messages[selectedUser.id].map(function(message,index){return/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px',textAlign:message.sender==='me'?'right':'left'},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'inline-block',backgroundColor:message.sender==='me'?'#dcf8c6':'#fff',padding:'10px',borderRadius:'10px',wordWrap:'break-word',maxWidth:'70%'},children:message.text})},index);})]}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',bottom:'20px',left:0,width:'100%',display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:inputValue,onChange:function onChange(e){return setInputValue(e.target.value);},placeholder:\"Type your message...\",style:{flex:1,padding:'10px',marginRight:'10px'},onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{style:{width:'100px',borderRadius:'8px',border:'none',backgroundColor:'#3D3AFF',color:'white'},onClick:handleMessageSend,children:\"Send\"})]})]}),!selectedUser&&/*#__PURE__*/_jsx(\"div\",{children:\"Please select a user to start chatting. \"})]})]});};export default ChatBox;","map":{"version":3,"names":["React","useState","useRef","jsx","_jsx","jsxs","_jsxs","ChatBox","_useState","_useState2","_slicedToArray","selectedUser","setSelectedUser","_useState3","_useState4","messages","setMessages","_useState5","_useState6","inputValue","setInputValue","inputRef","containerStyle","display","height","marginTop","leftBoxStyle","flex","backgroundColor","padding","overflowY","rightBoxStyle","cursor","position","userList","id","name","profilePhoto","require","userStyle","alignItems","justifyContent","marginBottom","borderBottom","paddingBottom","profilePhotoStyle","width","borderRadius","marginRight","handleInputClick","current","focus","handleMessageSend","trim","updatedMessages","_objectSpread","push","text","sender","handleKeyPress","e","key","preventDefault","style","children","textAlign","map","user","onClick","src","alt","concat","margin","maxHeight","overflowX","scrollbarWidth","msOverflowStyle","fontSize","message","index","wordWrap","maxWidth","bottom","left","ref","type","value","onChange","target","placeholder","onKeyPress","border","color"],"sources":["/root/sayeed/demo/meditro/src/markup/pages/chat.jsx"],"sourcesContent":["// import React, { useState, useRef } from 'react';\n\n// const ChatBox = () => {\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [messages, setMessages] = useState({});\n//   const [inputValue, setInputValue] = useState('');\n//   const inputRef = useRef(null);\n\n//   const containerStyle = {\n//     display: 'flex',\n//     height: 'calc(100vh - 100px)', // Adjusted to ensure proper square box format\n//     marginTop: '100px',\n//   };\n\n//   const leftBoxStyle = {\n//     flex: '0 0 20%',\n//     backgroundColor: '#f0f0f0',\n//     padding: '20px',\n//     height: '100%', // Adjusted to ensure proper square box format\n//     overflowY: 'auto',\n//   };\n\n//   const rightBoxStyle = {\n//     flex: 1,\n//     backgroundColor: '#ffffff',\n//     padding: '20px',\n//     cursor: 'text',\n//     position: 'relative', // Added for positioning the input and send button\n//   };\n\n//   const userList = [\n//     { id: 1, name: 'Ajinkya', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 2, name: 'Aditi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 3, name: 'Shruti', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 4, name: 'Pallavi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 5, name: 'Chetan', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 6, name: 'Rutuja', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'Gouri', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 6, name: 'Dnyaneshwari', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'palle', profilePhoto: require('../../images/chat/chat7.jpg') },\n//   ];\n\n\n//   const userStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//     marginBottom: '10px',\n//     cursor: 'pointer',\n//     borderBottom: '1px solid #ccc',\n//     paddingBottom: '10px',\n//   };\n\n//   const profilePhotoStyle = {\n//     width: '50px',\n//     height: '50px',\n//     borderRadius: '50%',\n//     marginRight: '10px',\n//   };\n\n//   const handleInputClick = () => {\n//     if (inputRef.current) {\n//       inputRef.current.focus();\n//     }\n//   };\n\n//   const handleMessageSend = () => {\n//     if (inputValue.trim() !== '') {\n//       const updatedMessages = { ...messages };\n//       if (!updatedMessages[selectedUser.id]) {\n//         updatedMessages[selectedUser.id] = [];\n//       }\n//       updatedMessages[selectedUser.id].push({\n//         text: inputValue,\n//         sender: 'me',\n//       });\n//       setMessages(updatedMessages);\n//       setInputValue('');\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === 'Enter' && inputValue.trim() !== '') {\n//       e.preventDefault();\n//       handleMessageSend();\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={leftBoxStyle}>\n//         <h3 style={{ marginBottom: '30px', marginTop: '10px', textAlign: 'center' }}>Messages</h3>\n//         {userList.map((user) => (\n//           <div key={user.id} style={userStyle} onClick={() => setSelectedUser(user)}>\n//             <div style={{ display: 'flex', alignItems: 'center' }}>\n//               <img src={user.profilePhoto} alt={`${user.name} Profile`} style={profilePhotoStyle} />\n//               <span>{user.name}</span>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div style={rightBoxStyle} onClick={handleInputClick}>\n//         {selectedUser && (\n//           <div>\n//             <div style={{ maxHeight: 'calc(100% - 70px)', overflowY: 'auto' }}>\n//               <h3 style={{ marginBottom: '30px', marginTop: '20px', fontSize: '20px' }}>Chat with {selectedUser.name}</h3>\n//               {messages[selectedUser.id] &&\n//                 messages[selectedUser.id].map((message, index) => (\n//                   <div key={index} style={{ marginBottom: '10px', textAlign: message.sender === 'me' ? 'right' : 'left' }}>\n//                     <div style={{ display: 'inline-block', backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff', padding: '10px', borderRadius: '10px' }}>\n//                       {message.text}\n//                     </div>\n//                   </div>\n//                 ))}\n//             </div>\n//             <div style={{ position: 'absolute', bottom: '20px', left: 0, width: '100%', display: 'flex' }}>\n//               <input\n//                 ref={inputRef}\n//                 type=\"text\"\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//                 placeholder=\"Type your message...\"\n//                 style={{ flex: 1, padding: '10px', marginRight: '10px' }}\n//                 onKeyPress={handleKeyPress}\n//               />\n//               <button style={{ width: '100px', borderRadius: '8px', border: 'none', backgroundColor: '#3D3AFF', color: 'white' }} onClick={handleMessageSend}>Send</button>\n//             </div>\n//           </div>\n//         )}\n//         {!selectedUser && <div>Please select a user to start chatting. </div>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatBox;\n\nimport React, { useState, useRef } from 'react';\n\nconst ChatBox = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef(null);\n\n  const containerStyle = {\n    display: 'flex',\n    height: 'calc(100vh - 100px)', // Adjusted to ensure proper square box format\n    marginTop: '100px',\n  };\n\n  const leftBoxStyle = {\n    flex: '0 0 20%',\n    backgroundColor: '#f0f0f0',\n    padding: '20px',\n    height: '100%', // Adjusted to ensure proper square box format\n    overflowY: 'auto',\n  };\n\n  const rightBoxStyle = {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    padding: '20px',\n    cursor: 'text',\n    position: 'relative', // Added for positioning the input and send button\n  };\n\n  const userList = [\n    { id: 1, name: 'Ajinkya', profilePhoto: require('../../images/chat/chat6.jpg') },\n    { id: 2, name: 'Aditi', profilePhoto: require('../../images/chat/chat7.jpg') },\n    { id: 3, name: 'Shruti', profilePhoto: require('../../images/chat/user5.jpg') },\n    { id: 4, name: 'Pallavi', profilePhoto: require('../../images/chat/chat7.jpg') },\n    { id: 5, name: 'Chetan', profilePhoto: require('../../images/chat/chat6.jpg') },\n    { id: 6, name: 'Rutuja', profilePhoto: require('../../images/chat/user5.jpg') },\n    { id: 5, name: 'Gouri', profilePhoto: require('../../images/chat/chat7.jpg') },\n    { id: 6, name: 'Dnyaneshwari', profilePhoto: require('../../images/chat/user5.jpg') },\n    { id: 5, name: 'palle', profilePhoto: require('../../images/chat/chat7.jpg') },\n  ];\n\n\n  const userStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: '10px',\n    cursor: 'pointer',\n    borderBottom: '1px solid #ccc',\n    paddingBottom: '10px',\n  };\n\n  const profilePhotoStyle = {\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    marginRight: '10px',\n  };\n\n  const handleInputClick = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== '') {\n      const updatedMessages = { ...messages };\n      if (!updatedMessages[selectedUser.id]) {\n        updatedMessages[selectedUser.id] = [];\n      }\n      updatedMessages[selectedUser.id].push({\n        text: inputValue,\n        sender: 'me',\n      });\n      setMessages(updatedMessages);\n      setInputValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && inputValue.trim() !== '') {\n      e.preventDefault();\n      handleMessageSend();\n    }\n  };\n\n  return (\n    <div style={containerStyle}>\n      <div style={leftBoxStyle}>\n        <h3 style={{ marginBottom: '30px', marginTop: '10px', textAlign: 'center' }}>Messages</h3>\n        {userList.map((user) => (\n          <div key={user.id} style={userStyle} onClick={() => setSelectedUser(user)}>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <img src={user.profilePhoto} alt={`${user.name} Profile`} style={profilePhotoStyle} />\n              <span>{user.name}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div style={rightBoxStyle} onClick={handleInputClick}>\n      {selectedUser && (\n  <div style={{ width: '800px', margin: '0 auto' }}> \n<div style={{ maxHeight: 'calc(100vh - 170px)', overflowY: 'scroll', overflowX: 'hidden', scrollbarWidth: 'none', msOverflowStyle: 'none' }}> \n\n      <h3 style={{ marginBottom: '30px', marginTop: '20px', fontSize: '20px' }}>Chat with {selectedUser.name}</h3>\n      {messages[selectedUser.id] &&\n        messages[selectedUser.id].map((message, index) => (\n          <div key={index} style={{ marginBottom: '10px', textAlign: message.sender === 'me' ? 'right' : 'left' }}>\n            <div style={{ display: 'inline-block', backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff', padding: '10px', borderRadius: '10px', wordWrap: 'break-word', maxWidth: '70%' }}>\n              {message.text}\n            </div>\n          </div>\n        ))}\n    </div>\n            <div style={{ position: 'absolute', bottom: '20px', left: 0, width: '100%', display: 'flex' }}>\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                placeholder=\"Type your message...\"\n                style={{ flex: 1, padding: '10px', marginRight: '10px' }}\n                onKeyPress={handleKeyPress}\n              />\n              <button style={{ width: '100px', borderRadius: '8px', border: 'none', backgroundColor: '#3D3AFF', color: 'white' }} onClick={handleMessageSend}>Send</button>\n            </div>\n          </div>\n        )}\n        {!selectedUser && <div>Please select a user to start chatting. </div>}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}