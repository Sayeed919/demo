{"ast":null,"code":"var _jsxFileName = \"/Users/trailiqueinfotech/Desktop/demo/meditro/src/markup/pages/chat.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef } from 'react';\n\n// const ChatBox = () => {\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [messages, setMessages] = useState({});\n//   const [inputValue, setInputValue] = useState('');\n//   const inputRef = useRef(null);\n\n//   const containerStyle = {\n//     display: 'flex',\n//     height: 'calc(100vh - 100px)', // Adjusted to ensure proper square box format\n//     marginTop: '100px',\n//   };\n\n//   const leftBoxStyle = {\n//     flex: '0 0 20%',\n//     backgroundColor: '#f0f0f0',\n//     padding: '20px',\n//     height: '100%', // Adjusted to ensure proper square box format\n//     overflowY: 'auto',\n//   };\n\n//   const rightBoxStyle = {\n//     flex: 1,\n//     backgroundColor: '#ffffff',\n//     padding: '20px',\n//     cursor: 'text',\n//     position: 'relative', // Added for positioning the input and send button\n//   };\n\n//   const userList = [\n//     { id: 1, name: 'Ajinkya', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 2, name: 'Aditi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 3, name: 'Shruti', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 4, name: 'Pallavi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 5, name: 'Chetan', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 6, name: 'Rutuja', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'Gouri', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 6, name: 'Dnyaneshwari', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'palle', profilePhoto: require('../../images/chat/chat7.jpg') },\n//   ];\n\n//   const userStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//     marginBottom: '10px',\n//     cursor: 'pointer',\n//     borderBottom: '1px solid #ccc',\n//     paddingBottom: '10px',\n//   };\n\n//   const profilePhotoStyle = {\n//     width: '50px',\n//     height: '50px',\n//     borderRadius: '50%',\n//     marginRight: '10px',\n//   };\n\n//   const handleInputClick = () => {\n//     if (inputRef.current) {\n//       inputRef.current.focus();\n//     }\n//   };\n\n//   const handleMessageSend = () => {\n//     if (inputValue.trim() !== '') {\n//       const updatedMessages = { ...messages };\n//       if (!updatedMessages[selectedUser.id]) {\n//         updatedMessages[selectedUser.id] = [];\n//       }\n//       updatedMessages[selectedUser.id].push({\n//         text: inputValue,\n//         sender: 'me',\n//       });\n//       setMessages(updatedMessages);\n//       setInputValue('');\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === 'Enter' && inputValue.trim() !== '') {\n//       e.preventDefault();\n//       handleMessageSend();\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={leftBoxStyle}>\n//         <h3 style={{ marginBottom: '30px', marginTop: '10px', textAlign: 'center' }}>Messages</h3>\n//         {userList.map((user) => (\n//           <div key={user.id} style={userStyle} onClick={() => setSelectedUser(user)}>\n//             <div style={{ display: 'flex', alignItems: 'center' }}>\n//               <img src={user.profilePhoto} alt={`${user.name} Profile`} style={profilePhotoStyle} />\n//               <span>{user.name}</span>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div style={rightBoxStyle} onClick={handleInputClick}>\n//         {selectedUser && (\n//           <div>\n//             <div style={{ maxHeight: 'calc(100% - 70px)', overflowY: 'auto' }}>\n//               <h3 style={{ marginBottom: '30px', marginTop: '20px', fontSize: '20px' }}>Chat with {selectedUser.name}</h3>\n//               {messages[selectedUser.id] &&\n//                 messages[selectedUser.id].map((message, index) => (\n//                   <div key={index} style={{ marginBottom: '10px', textAlign: message.sender === 'me' ? 'right' : 'left' }}>\n//                     <div style={{ display: 'inline-block', backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff', padding: '10px', borderRadius: '10px' }}>\n//                       {message.text}\n//                     </div>\n//                   </div>\n//                 ))}\n//             </div>\n//             <div style={{ position: 'absolute', bottom: '20px', left: 0, width: '100%', display: 'flex' }}>\n//               <input\n//                 ref={inputRef}\n//                 type=\"text\"\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//                 placeholder=\"Type your message...\"\n//                 style={{ flex: 1, padding: '10px', marginRight: '10px' }}\n//                 onKeyPress={handleKeyPress}\n//               />\n//               <button style={{ width: '100px', borderRadius: '8px', border: 'none', backgroundColor: '#3D3AFF', color: 'white' }} onClick={handleMessageSend}>Send</button>\n//             </div>\n//           </div>\n//         )}\n//         {!selectedUser && <div>Please select a user to start chatting. </div>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatBox;\n\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef(null);\n  const containerStyle = {\n    display: 'flex',\n    height: 'calc(100vh - 100px)',\n    // Adjusted to ensure proper square box format\n    marginTop: '100px'\n  };\n  const leftBoxStyle = {\n    flex: '0 0 20%',\n    backgroundColor: '#f0f0f0',\n    padding: '20px',\n    height: '100%',\n    // Adjusted to ensure proper square box format\n    overflowY: 'auto'\n  };\n  const rightBoxStyle = {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    padding: '20px',\n    cursor: 'text',\n    position: 'relative' // Added for positioning the input and send button\n  };\n\n  const userList = [{\n    id: 1,\n    name: 'Ajinkya',\n    profilePhoto: require('../../images/chat/chat6.jpg')\n  }, {\n    id: 2,\n    name: 'Aditi',\n    profilePhoto: require('../../images/chat/chat7.jpg')\n  }, {\n    id: 3,\n    name: 'Shruti',\n    profilePhoto: require('../../images/chat/user5.jpg')\n  }, {\n    id: 4,\n    name: 'Pallavi',\n    profilePhoto: require('../../images/chat/chat7.jpg')\n  }, {\n    id: 5,\n    name: 'Chetan',\n    profilePhoto: require('../../images/chat/chat6.jpg')\n  }, {\n    id: 6,\n    name: 'Rutuja',\n    profilePhoto: require('../../images/chat/user5.jpg')\n  }, {\n    id: 5,\n    name: 'Gouri',\n    profilePhoto: require('../../images/chat/chat7.jpg')\n  }, {\n    id: 6,\n    name: 'Dnyaneshwari',\n    profilePhoto: require('../../images/chat/user5.jpg')\n  }, {\n    id: 5,\n    name: 'palle',\n    profilePhoto: require('../../images/chat/chat7.jpg')\n  }];\n  const userStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: '10px',\n    cursor: 'pointer',\n    borderBottom: '1px solid #ccc',\n    paddingBottom: '10px'\n  };\n  const profilePhotoStyle = {\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    marginRight: '10px'\n  };\n  const handleInputClick = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== '') {\n      const updatedMessages = {\n        ...messages\n      };\n      if (!updatedMessages[selectedUser.id]) {\n        updatedMessages[selectedUser.id] = [];\n      }\n      updatedMessages[selectedUser.id].push({\n        text: inputValue,\n        sender: 'me'\n      });\n      setMessages(updatedMessages);\n      setInputValue('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && inputValue.trim() !== '') {\n      e.preventDefault();\n      handleMessageSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: leftBoxStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '30px',\n          marginTop: '10px',\n          textAlign: 'center'\n        },\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), userList.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: userStyle,\n        onClick: () => setSelectedUser(user),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.profilePhoto,\n            alt: `${user.name} Profile`,\n            style: profilePhotoStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rightBoxStyle,\n      onClick: handleInputClick,\n      children: [selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '800px',\n          margin: '0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: 'calc(100vh - 170px)',\n            overflowY: 'scroll',\n            overflowX: 'hidden',\n            scrollbarWidth: 'none',\n            msOverflowStyle: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '30px',\n              marginTop: '20px',\n              fontSize: '20px'\n            },\n            children: [\"Chat with \", selectedUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 7\n          }, this), messages[selectedUser.id] && messages[selectedUser.id].map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px',\n              textAlign: message.sender === 'me' ? 'right' : 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'inline-block',\n                backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff',\n                padding: '10px',\n                borderRadius: '10px',\n                wordWrap: 'break-word',\n                maxWidth: '70%'\n              },\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '20px',\n            left: 0,\n            width: '100%',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            placeholder: \"Type your message...\",\n            style: {\n              flex: 1,\n              padding: '10px',\n              marginRight: '10px'\n            },\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '100px',\n              borderRadius: '8px',\n              border: 'none',\n              backgroundColor: '#3D3AFF',\n              color: 'white'\n            },\n            onClick: handleMessageSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 3\n      }, this), !selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please select a user to start chatting. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"oM10yKSsdNt8WGGukhmtAYtk1wc=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","ChatBox","_s","selectedUser","setSelectedUser","messages","setMessages","inputValue","setInputValue","inputRef","containerStyle","display","height","marginTop","leftBoxStyle","flex","backgroundColor","padding","overflowY","rightBoxStyle","cursor","position","userList","id","name","profilePhoto","require","userStyle","alignItems","justifyContent","marginBottom","borderBottom","paddingBottom","profilePhotoStyle","width","borderRadius","marginRight","handleInputClick","current","focus","handleMessageSend","trim","updatedMessages","push","text","sender","handleKeyPress","e","key","preventDefault","style","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","src","alt","margin","maxHeight","overflowX","scrollbarWidth","msOverflowStyle","fontSize","message","index","wordWrap","maxWidth","bottom","left","ref","type","value","onChange","target","placeholder","onKeyPress","border","color","_c","$RefreshReg$"],"sources":["/Users/trailiqueinfotech/Desktop/demo/meditro/src/markup/pages/chat.jsx"],"sourcesContent":["// import React, { useState, useRef } from 'react';\n\n// const ChatBox = () => {\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [messages, setMessages] = useState({});\n//   const [inputValue, setInputValue] = useState('');\n//   const inputRef = useRef(null);\n\n//   const containerStyle = {\n//     display: 'flex',\n//     height: 'calc(100vh - 100px)', // Adjusted to ensure proper square box format\n//     marginTop: '100px',\n//   };\n\n//   const leftBoxStyle = {\n//     flex: '0 0 20%',\n//     backgroundColor: '#f0f0f0',\n//     padding: '20px',\n//     height: '100%', // Adjusted to ensure proper square box format\n//     overflowY: 'auto',\n//   };\n\n//   const rightBoxStyle = {\n//     flex: 1,\n//     backgroundColor: '#ffffff',\n//     padding: '20px',\n//     cursor: 'text',\n//     position: 'relative', // Added for positioning the input and send button\n//   };\n\n//   const userList = [\n//     { id: 1, name: 'Ajinkya', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 2, name: 'Aditi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 3, name: 'Shruti', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 4, name: 'Pallavi', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 5, name: 'Chetan', profilePhoto: require('../../images/chat/chat6.jpg') },\n//     { id: 6, name: 'Rutuja', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'Gouri', profilePhoto: require('../../images/chat/chat7.jpg') },\n//     { id: 6, name: 'Dnyaneshwari', profilePhoto: require('../../images/chat/user5.jpg') },\n//     { id: 5, name: 'palle', profilePhoto: require('../../images/chat/chat7.jpg') },\n//   ];\n\n\n//   const userStyle = {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//     marginBottom: '10px',\n//     cursor: 'pointer',\n//     borderBottom: '1px solid #ccc',\n//     paddingBottom: '10px',\n//   };\n\n//   const profilePhotoStyle = {\n//     width: '50px',\n//     height: '50px',\n//     borderRadius: '50%',\n//     marginRight: '10px',\n//   };\n\n//   const handleInputClick = () => {\n//     if (inputRef.current) {\n//       inputRef.current.focus();\n//     }\n//   };\n\n//   const handleMessageSend = () => {\n//     if (inputValue.trim() !== '') {\n//       const updatedMessages = { ...messages };\n//       if (!updatedMessages[selectedUser.id]) {\n//         updatedMessages[selectedUser.id] = [];\n//       }\n//       updatedMessages[selectedUser.id].push({\n//         text: inputValue,\n//         sender: 'me',\n//       });\n//       setMessages(updatedMessages);\n//       setInputValue('');\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === 'Enter' && inputValue.trim() !== '') {\n//       e.preventDefault();\n//       handleMessageSend();\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={leftBoxStyle}>\n//         <h3 style={{ marginBottom: '30px', marginTop: '10px', textAlign: 'center' }}>Messages</h3>\n//         {userList.map((user) => (\n//           <div key={user.id} style={userStyle} onClick={() => setSelectedUser(user)}>\n//             <div style={{ display: 'flex', alignItems: 'center' }}>\n//               <img src={user.profilePhoto} alt={`${user.name} Profile`} style={profilePhotoStyle} />\n//               <span>{user.name}</span>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       <div style={rightBoxStyle} onClick={handleInputClick}>\n//         {selectedUser && (\n//           <div>\n//             <div style={{ maxHeight: 'calc(100% - 70px)', overflowY: 'auto' }}>\n//               <h3 style={{ marginBottom: '30px', marginTop: '20px', fontSize: '20px' }}>Chat with {selectedUser.name}</h3>\n//               {messages[selectedUser.id] &&\n//                 messages[selectedUser.id].map((message, index) => (\n//                   <div key={index} style={{ marginBottom: '10px', textAlign: message.sender === 'me' ? 'right' : 'left' }}>\n//                     <div style={{ display: 'inline-block', backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff', padding: '10px', borderRadius: '10px' }}>\n//                       {message.text}\n//                     </div>\n//                   </div>\n//                 ))}\n//             </div>\n//             <div style={{ position: 'absolute', bottom: '20px', left: 0, width: '100%', display: 'flex' }}>\n//               <input\n//                 ref={inputRef}\n//                 type=\"text\"\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//                 placeholder=\"Type your message...\"\n//                 style={{ flex: 1, padding: '10px', marginRight: '10px' }}\n//                 onKeyPress={handleKeyPress}\n//               />\n//               <button style={{ width: '100px', borderRadius: '8px', border: 'none', backgroundColor: '#3D3AFF', color: 'white' }} onClick={handleMessageSend}>Send</button>\n//             </div>\n//           </div>\n//         )}\n//         {!selectedUser && <div>Please select a user to start chatting. </div>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatBox;\n\nimport React, { useState, useRef } from 'react';\n\nconst ChatBox = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef(null);\n\n  const containerStyle = {\n    display: 'flex',\n    height: 'calc(100vh - 100px)', // Adjusted to ensure proper square box format\n    marginTop: '100px',\n  };\n\n  const leftBoxStyle = {\n    flex: '0 0 20%',\n    backgroundColor: '#f0f0f0',\n    padding: '20px',\n    height: '100%', // Adjusted to ensure proper square box format\n    overflowY: 'auto',\n  };\n\n  const rightBoxStyle = {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    padding: '20px',\n    cursor: 'text',\n    position: 'relative', // Added for positioning the input and send button\n  };\n\n  const userList = [\n    { id: 1, name: 'Ajinkya', profilePhoto: require('../../images/chat/chat6.jpg') },\n    { id: 2, name: 'Aditi', profilePhoto: require('../../images/chat/chat7.jpg') },\n    { id: 3, name: 'Shruti', profilePhoto: require('../../images/chat/user5.jpg') },\n    { id: 4, name: 'Pallavi', profilePhoto: require('../../images/chat/chat7.jpg') },\n    { id: 5, name: 'Chetan', profilePhoto: require('../../images/chat/chat6.jpg') },\n    { id: 6, name: 'Rutuja', profilePhoto: require('../../images/chat/user5.jpg') },\n    { id: 5, name: 'Gouri', profilePhoto: require('../../images/chat/chat7.jpg') },\n    { id: 6, name: 'Dnyaneshwari', profilePhoto: require('../../images/chat/user5.jpg') },\n    { id: 5, name: 'palle', profilePhoto: require('../../images/chat/chat7.jpg') },\n  ];\n\n\n  const userStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: '10px',\n    cursor: 'pointer',\n    borderBottom: '1px solid #ccc',\n    paddingBottom: '10px',\n  };\n\n  const profilePhotoStyle = {\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    marginRight: '10px',\n  };\n\n  const handleInputClick = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== '') {\n      const updatedMessages = { ...messages };\n      if (!updatedMessages[selectedUser.id]) {\n        updatedMessages[selectedUser.id] = [];\n      }\n      updatedMessages[selectedUser.id].push({\n        text: inputValue,\n        sender: 'me',\n      });\n      setMessages(updatedMessages);\n      setInputValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && inputValue.trim() !== '') {\n      e.preventDefault();\n      handleMessageSend();\n    }\n  };\n\n  return (\n    <div style={containerStyle}>\n      <div style={leftBoxStyle}>\n        <h3 style={{ marginBottom: '30px', marginTop: '10px', textAlign: 'center' }}>Messages</h3>\n        {userList.map((user) => (\n          <div key={user.id} style={userStyle} onClick={() => setSelectedUser(user)}>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <img src={user.profilePhoto} alt={`${user.name} Profile`} style={profilePhotoStyle} />\n              <span>{user.name}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div style={rightBoxStyle} onClick={handleInputClick}>\n      {selectedUser && (\n  <div style={{ width: '800px', margin: '0 auto' }}> \n<div style={{ maxHeight: 'calc(100vh - 170px)', overflowY: 'scroll', overflowX: 'hidden', scrollbarWidth: 'none', msOverflowStyle: 'none' }}> \n\n      <h3 style={{ marginBottom: '30px', marginTop: '20px', fontSize: '20px' }}>Chat with {selectedUser.name}</h3>\n      {messages[selectedUser.id] &&\n        messages[selectedUser.id].map((message, index) => (\n          <div key={index} style={{ marginBottom: '10px', textAlign: message.sender === 'me' ? 'right' : 'left' }}>\n            <div style={{ display: 'inline-block', backgroundColor: message.sender === 'me' ? '#dcf8c6' : '#fff', padding: '10px', borderRadius: '10px', wordWrap: 'break-word', maxWidth: '70%' }}>\n              {message.text}\n            </div>\n          </div>\n        ))}\n    </div>\n            <div style={{ position: 'absolute', bottom: '20px', left: 0, width: '100%', display: 'flex' }}>\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                placeholder=\"Type your message...\"\n                style={{ flex: 1, padding: '10px', marginRight: '10px' }}\n                onKeyPress={handleKeyPress}\n              />\n              <button style={{ width: '100px', borderRadius: '8px', border: 'none', backgroundColor: '#3D3AFF', color: 'white' }} onClick={handleMessageSend}>Send</button>\n            </div>\n          </div>\n        )}\n        {!selectedUser && <div>Please select a user to start chatting. </div>}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMY,cAAc,GAAG;IACrBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,qBAAqB;IAAE;IAC/BC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,IAAI,EAAE,SAAS;IACfC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,MAAM;IACfL,MAAM,EAAE,MAAM;IAAE;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}