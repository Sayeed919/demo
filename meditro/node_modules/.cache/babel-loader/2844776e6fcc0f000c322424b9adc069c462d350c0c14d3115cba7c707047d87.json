{"ast":null,"code":"var _jsxFileName = \"/root/sayeed/demo/meditro/src/markup/elements/appointment-form.jsx\";\n// import React, { Component } from 'react';\n\n// class appointmentForm extends Component{\n// \trender(){\n// \t\treturn(\n// \t\t\t<>\n\n// \t\t\t\t<div className=\"appointment-form form-wraper\">\n// \t\t\t\t\t<h3 className=\"title\">Book Appointment</h3>\n// \t\t\t\t\t<form action=\"#\">\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Selecty Department</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Select Doctor</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Your Name\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n//     \t\t\t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\"Your Email\"/>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"date\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"slot\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n\n// \t\t\t</>\n// \t\t);\n// \t}\n// }\n\n// export default appointmentForm;\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"\" className=\"form-control\" placeholder=\"Slot\" onClick={this.toggleSlotPopup} value={selectedSlot} />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//         {showSlotPopup &&\n//           <div className=\"slot-popup\">\n//             <h3>Select Slot</h3>\n//             <ul>\n//               {timeSlots.map((slot, index) => (\n//                 <li key={index} onClick={() => this.selectSlot(slot.time)}>{slot.time}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         }\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       selectedSlot: ''\n//     };\n//   }\n\n//   handleSlotChange = (event) => {\n//     this.setState({\n//       selectedSlot: event.target.value\n//     });\n//   }\n\n//   render() {\n//     const { selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <div className=\"appointment-form form-wraper\">\n//         <h3 className=\"title\">Book Appointment</h3>\n//         <form action=\"#\">\n//           <div className=\"form-group\">\n//             <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"date\" className=\"form-control\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <select className=\"form-control\" value={selectedSlot} onChange={this.handleSlotChange}>\n//               <option value=\"\">Select Slot</option>\n//               {timeSlots.map((slot, index) => (\n//                 <option key={index} value={slot.time}>{slot.time}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer'\n//                         }} onClick={() => this.selectSlot(slot.time)}>\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n// import React, { useState } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n\n// class AppointmentForm extends Component {\n\n// \tconst [phone, setPhone] = useState(\"\");\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             {/* <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div> */}\n// \t\t\t<div className=\"form-group\">\n//             <PhoneInput\n//               country={'eg'} // Default country\n//               enableSearch={true}\n//               value={phone}\n//               onChange={(phone) => setPhone(phone)}\n//             />\n//           </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" placeholder=\"date\"/>\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s', // Add transition for smooth hover effect\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = '#fa7b14'} // Change background color on hover\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'} // Revert background color on hover out\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     {/* <button onClick={this.toggleSlotPopup}>Close</button> */}\n// \t\t\t\t\t<button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '6px 10px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n// import 'react-phone-input-2/lib/style.css';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: '',\n//       phone: \"\",\n//       name: \"\",\n//       email: \"\",\n//       date: \"\",\n//       bookingSuccess: false\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   handlePhoneChange = (value) => {\n//     this.setState({\n//       phone: value\n//     });\n//   }\n\n//   handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const { name, email, phone, date, selectedSlot } = this.state;\n\n//     if (!name || !email || !phone || !date || !selectedSlot){\n//       alert(\"Please fill all the fields\");\n//       return;\n//     }\n\n//     try {\n//       const bookingResponse = await fetch('http://localhost:5050/booking', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           name,\n//           email,\n//           phone,\n//           date,\n//           slot: selectedSlot\n//         })\n//       });\n\n//       if (bookingResponse.ok) {\n//         // Handle successful booking\n//         // console.log('Booking successful');\n//         this.setState({\n//           bookingSuccess: true,\n//           name: \"\",\n//           email: \"\",\n//           phone: \"\",\n//           date: \"\",\n//           selectedSlot: \"\"\n//         });\n\n//         setTimeout(() => {\n//           this.setState({ bookingSuccess: false });\n//         }, 3000);\n//       } else {\n//         // Handle error in booking\n//         console.error('Booking failed');\n//       }\n//     } catch (error) {\n//       console.error('Error occurred:', error);\n//     }\n\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot, phone, bookingSuccess } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form onSubmit={this.handleFormSubmit}>\n\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" onChange={(e) => this.setState({ name: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" onChange={(e) => this.setState({ email: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <PhoneInput\n//                 country={'in'} // Default country\n//                 enableSearch={true}\n//                 value={phone}\n//                 onChange={this.handlePhoneChange}\n//                 inputStyle={{ width: '100%', height: '60px', borderRadius: '10px', alignItems: 'center',fontSize: '18px' }} //\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" onChange={(e) => this.setState({ date: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//                 readOnly\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s',\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = 'orange'}\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'}\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '8px 12px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Book Appointment</button>\n//             {/* {bookingSuccess && (\n//               <div className=\"success-message\">Appointment booked successfully!</div>\n//             )} */}\n//           </form>\n//           {bookingSuccess && (\n//               <div className=\"success-message\" style={{ backgroundColor: '#5734bf', color: 'white', padding: '10px', borderRadius: '5px', marginTop: '10px' }} >Appointment booked successfully!</div>\n//             )}\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n//final code\n\nimport React, { Component } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass AppointmentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleSlotPopup = () => {\n      this.setState(prevState => ({\n        showSlotPopup: !prevState.showSlotPopup\n      }));\n    };\n    this.selectSlot = slot => {\n      this.setState({\n        selectedSlot: slot,\n        showSlotPopup: false\n      });\n    };\n    this.handlePhoneChange = value => {\n      this.setState({\n        phone: value\n      });\n    };\n    // handleFormSubmit = async (event) => {\n    //   event.preventDefault();\n    //   const { name, email, phone, date, selectedSlot } = this.state;\n    //   if (!name || !email || !phone || !date || !selectedSlot) {\n    //     alert('Please fill all the fields');\n    //     return;\n    //   }\n    //   try {\n    //     // Make a POST request to the booking API\n    //     const bookingResponse = await fetch('http://localhost:5050/booking', {\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //       body: JSON.stringify({\n    //         name,\n    //         email,\n    //         phone,\n    //         date,\n    //         slot: selectedSlot,\n    //       }),\n    //     });\n    //     if (bookingResponse.ok) {\n    //       // Handle successful booking\n    //       this.setState({ bookingSuccess: true,\n    //         name: \"\",\n    //         email: \"\",\n    //         phone: \"\",\n    //         date: \"\",\n    //         selectedSlot: \"\"\n    //       });\n    //       // Make a POST request to the email API\n    //       const emailResponse = await fetch('http://localhost:4040/appointment', {\n    //         method: 'POST',\n    //         headers: {\n    //           'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify({\n    //           name,\n    //           email,\n    //           phone,\n    //           date,\n    //           selectedSlot,\n    //         }),\n    //       });\n    //       if (!emailResponse.ok) {\n    //         console.error('Error sending email');\n    //         // Handle error in sending email if needed\n    //       }\n    //       setTimeout(() => {\n    //         this.setState({ bookingSuccess: false,\n    //         name: \"\",\n    //         email: \"\",\n    //         phone: \"\",\n    //         date: \"\",\n    //         selectedSlot: \"\"\n    //         });\n    //       }, 3000); \n    //     } else {\n    //       // Handle error in booking\n    //       console.error('Booking failed');\n    //     }\n    //   } catch (error) {\n    //     console.error('Error occurred:', error);\n    //   }\n    // };\n    this.handleFormSubmit = async event => {\n      event.preventDefault();\n      const {\n        name,\n        email,\n        phone,\n        date,\n        selectedSlot\n      } = this.state;\n      if (!name || !email || !phone || !date || !selectedSlot) {\n        alert('Please fill all the fields');\n        return;\n      }\n      try {\n        // Make a POST request to the booking API\n        const bookingResponse = await fetch('http://localhost:3030/booking', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            phone,\n            date,\n            slot: selectedSlot\n          })\n        });\n        if (bookingResponse.ok) {\n          // Handle successful booking\n          console.log('Booking successful');\n          this.setState({\n            bookingSuccess: true\n          });\n\n          // Make a POST request to the email API\n          const emailResponse = await fetch('http://localhost:3030/email', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name,\n              email,\n              phone,\n              date,\n              selectedSlot\n            })\n          });\n          if (emailResponse.ok) {\n            console.log('Email sent successfully');\n          } else {\n            console.error('Error sending email:', emailResponse.statusText);\n          }\n\n          // Reset input fields and success message after a delay (optional)\n          setTimeout(() => {\n            this.setState({\n              bookingSuccess: false,\n              name: '',\n              email: '',\n              phone: '',\n              date: '',\n              selectedSlot: ''\n            });\n          }, 3000); // Reset after 3 seconds\n        } else {\n          // Handle error in booking\n          console.error('Booking failed:', bookingResponse.statusText);\n        }\n      } catch (error) {\n        console.error('Error occurred:', error);\n      }\n    };\n    this.state = {\n      showSlotPopup: false,\n      selectedSlot: '',\n      phone: '',\n      name: '',\n      email: '',\n      date: '',\n      bookingSuccess: false\n    };\n  }\n  render() {\n    const {\n      showSlotPopup,\n      selectedSlot,\n      phone,\n      bookingSuccess\n    } = this.state;\n    const timeSlots = [{\n      time: '9:00 AM',\n      appointments: []\n    }, {\n      time: '10:00 AM',\n      appointments: []\n    }, {\n      time: '11:00 AM',\n      appointments: []\n    }, {\n      time: '12:00 PM',\n      appointments: []\n    }, {\n      time: '1:00 PM',\n      appointments: []\n    }, {\n      time: '2:00 PM',\n      appointments: []\n    }, {\n      time: '3:00 PM',\n      appointments: []\n    }, {\n      time: '4:00 PM',\n      appointments: []\n    }, {\n      time: '5:00 PM',\n      appointments: []\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-form form-wraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: \"Book Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Your Name\",\n              onChange: e => this.setState({\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"Your Email\",\n              onChange: e => this.setState({\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n              country: 'in' // Default country\n              ,\n              enableSearch: true,\n              value: phone,\n              onChange: this.handlePhoneChange,\n              inputStyle: {\n                width: '100%',\n                height: '60px',\n                borderRadius: '10px',\n                alignItems: 'center',\n                fontSize: '18px'\n              } //\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              onChange: e => this.setState({\n                date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Slot\",\n              onClick: this.toggleSlotPopup,\n              value: selectedSlot,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }, this), showSlotPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                zIndex: 999,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: 'white',\n                  padding: '20px',\n                  borderRadius: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Select Slot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(3, 1fr)',\n                    gridGap: '10px'\n                  },\n                  children: timeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      backgroundColor: '#f0f0f0',\n                      padding: '10px',\n                      textAlign: 'center',\n                      cursor: 'pointer',\n                      transition: 'background-color 0.3s',\n                      borderRadius: '5px'\n                    },\n                    onClick: () => this.selectSlot(slot.time),\n                    onMouseEnter: e => e.target.style.backgroundColor = 'orange',\n                    onMouseLeave: e => e.target.style.backgroundColor = '#f0f0f0',\n                    children: slot.time\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.toggleSlotPopup,\n                  style: {\n                    marginTop: '10px',\n                    padding: '8px 12px',\n                    backgroundColor: '#12214a',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: '5px',\n                    cursor: 'pointer'\n                  },\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary btn-lg\",\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this), bookingSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          style: {\n            backgroundColor: '#5734bf',\n            color: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            marginTop: '10px'\n          },\n          children: \"Appointment booked successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default AppointmentForm;","map":{"version":3,"names":["React","Component","PhoneInput","jsxDEV","_jsxDEV","Fragment","_Fragment","AppointmentForm","constructor","props","toggleSlotPopup","setState","prevState","showSlotPopup","selectSlot","slot","selectedSlot","handlePhoneChange","value","phone","handleFormSubmit","event","preventDefault","name","email","date","state","alert","bookingResponse","fetch","method","headers","body","JSON","stringify","ok","console","log","bookingSuccess","emailResponse","error","statusText","setTimeout","render","timeSlots","time","appointments","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","e","target","country","enableSearch","inputStyle","width","height","borderRadius","alignItems","fontSize","onClick","readOnly","style","position","top","left","backgroundColor","zIndex","display","justifyContent","padding","gridTemplateColumns","gridGap","map","index","textAlign","cursor","transition","onMouseEnter","onMouseLeave","marginTop","color","border"],"sources":["/root/sayeed/demo/meditro/src/markup/elements/appointment-form.jsx"],"sourcesContent":["// import React, { Component } from 'react';\n\n// class appointmentForm extends Component{\n// \trender(){\n// \t\treturn(\n// \t\t\t<>\n\t\t\t\t\n// \t\t\t\t<div className=\"appointment-form form-wraper\">\n// \t\t\t\t\t<h3 className=\"title\">Book Appointment</h3>\n// \t\t\t\t\t<form action=\"#\">\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Selecty Department</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t{/* <div className=\"form-group\">\n// \t\t\t\t\t\t\t<select className=\"form-select form-control\">\n// \t\t\t\t\t\t\t\t<option defaultValue>Select Doctor</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"1\">One</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"2\">Two</option>\n// \t\t\t\t\t\t\t\t<option defaultValue=\"3\">Three</option>\n// \t\t\t\t\t\t\t</select>\n// \t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Your Name\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n//     \t\t\t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\"Your Email\"/>\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"date\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t\t<input type=\"slot\" className=\"form-control\"/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n\t\t\t\n// \t\t\t</>\n// \t\t);\n// \t}\n// }\n\n// export default appointmentForm;\n\n\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"\" className=\"form-control\" placeholder=\"Slot\" onClick={this.toggleSlotPopup} value={selectedSlot} />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//         {showSlotPopup &&\n//           <div className=\"slot-popup\">\n//             <h3>Select Slot</h3>\n//             <ul>\n//               {timeSlots.map((slot, index) => (\n//                 <li key={index} onClick={() => this.selectSlot(slot.time)}>{slot.time}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         }\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       selectedSlot: ''\n//     };\n//   }\n\n//   handleSlotChange = (event) => {\n//     this.setState({\n//       selectedSlot: event.target.value\n//     });\n//   }\n\n//   render() {\n//     const { selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <div className=\"appointment-form form-wraper\">\n//         <h3 className=\"title\">Book Appointment</h3>\n//         <form action=\"#\">\n//           <div className=\"form-group\">\n//             <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <input type=\"date\" className=\"form-control\" />\n//           </div>\n//           <div className=\"form-group\">\n//             <select className=\"form-control\" value={selectedSlot} onChange={this.handleSlotChange}>\n//               <option value=\"\">Select Slot</option>\n//               {timeSlots.map((slot, index) => (\n//                 <option key={index} value={slot.time}>{slot.time}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer'\n//                         }} onClick={() => this.selectSlot(slot.time)}>\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n// import React, { useState } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n\n// class AppointmentForm extends Component {\n\n// \tconst [phone, setPhone] = useState(\"\");\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: ''\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form action=\"#\">\n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\n//             </div>\n//             {/* <div className=\"form-group\">\n//               <input type=\"tel\" className=\"form-control\" placeholder=\"Phone Numbers\" />\n//             </div> */}\n// \t\t\t<div className=\"form-group\">\n//             <PhoneInput\n//               country={'eg'} // Default country\n//               enableSearch={true}\n//               value={phone}\n//               onChange={(phone) => setPhone(phone)}\n//             />\n//           </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" placeholder=\"date\"/>\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s', // Add transition for smooth hover effect\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = '#fa7b14'} // Change background color on hover\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'} // Revert background color on hover out\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     {/* <button onClick={this.toggleSlotPopup}>Close</button> */}\n// \t\t\t\t\t<button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '6px 10px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Appointment Now</button>\n//           </form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n// import React, { Component } from 'react';\n// import PhoneInput from 'react-phone-input-2';\n// import 'react-phone-input-2/lib/style.css';\n\n// class AppointmentForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSlotPopup: false,\n//       selectedSlot: '',\n//       phone: \"\",\n//       name: \"\",\n//       email: \"\",\n//       date: \"\",\n//       bookingSuccess: false\n//     };\n//   }\n\n//   toggleSlotPopup = () => {\n//     this.setState(prevState => ({\n//       showSlotPopup: !prevState.showSlotPopup\n//     }));\n//   }\n\n//   selectSlot = (slot) => {\n//     this.setState({\n//       selectedSlot: slot,\n//       showSlotPopup: false\n//     });\n//   }\n\n//   handlePhoneChange = (value) => {\n//     this.setState({\n//       phone: value\n//     });\n//   }\n\n//   handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const { name, email, phone, date, selectedSlot } = this.state;\n\n//     if (!name || !email || !phone || !date || !selectedSlot){\n//       alert(\"Please fill all the fields\");\n//       return;\n//     }\n\n//     try {\n//       const bookingResponse = await fetch('http://localhost:5050/booking', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           name,\n//           email,\n//           phone,\n//           date,\n//           slot: selectedSlot\n//         })\n//       });\n\n//       if (bookingResponse.ok) {\n//         // Handle successful booking\n//         // console.log('Booking successful');\n//         this.setState({\n//           bookingSuccess: true,\n//           name: \"\",\n//           email: \"\",\n//           phone: \"\",\n//           date: \"\",\n//           selectedSlot: \"\"\n//         });\n\n//         setTimeout(() => {\n//           this.setState({ bookingSuccess: false });\n//         }, 3000);\n//       } else {\n//         // Handle error in booking\n//         console.error('Booking failed');\n//       }\n//     } catch (error) {\n//       console.error('Error occurred:', error);\n//     }\n\n    \n//   }\n\n//   render() {\n//     const { showSlotPopup, selectedSlot, phone, bookingSuccess } = this.state;\n//     const timeSlots = [\n//       { time: '9:00 AM', appointments: [] },\n//       { time: '10:00 AM', appointments: [] },\n//       { time: '11:00 AM', appointments: [] },\n//       { time: '12:00 PM', appointments: [] },\n//       { time: '1:00 PM', appointments: [] },\n//       { time: '2:00 PM', appointments: [] },\n//       { time: '3:00 PM', appointments: [] },\n//       { time: '4:00 PM', appointments: [] },\n//       { time: '5:00 PM', appointments: [] },\n//     ];\n\n//     return (\n//       <>\n//         <div className=\"appointment-form form-wraper\">\n//           <h3 className=\"title\">Book Appointment</h3>\n//           <form onSubmit={this.handleFormSubmit}>\n          \n//             <div className=\"form-group\">\n//               <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" onChange={(e) => this.setState({ name: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" onChange={(e) => this.setState({ email: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <PhoneInput\n//                 country={'in'} // Default country\n//                 enableSearch={true}\n//                 value={phone}\n//                 onChange={this.handlePhoneChange}\n//                 inputStyle={{ width: '100%', height: '60px', borderRadius: '10px', alignItems: 'center',fontSize: '18px' }} //\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"date\" className=\"form-control\" onChange={(e) => this.setState({ date: e.target.value })} />\n//             </div>\n//             <div className=\"form-group\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Slot\"\n//                 onClick={this.toggleSlotPopup}\n//                 value={selectedSlot}\n//                 readOnly\n//               />\n//               {showSlotPopup && (\n//                 <div style={{\n//                   position: 'fixed',\n//                   top: 0,\n//                   left: 0,\n//                   width: '100%',\n//                   height: '100%',\n//                   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//                   zIndex: 999,\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center'\n//                 }}>\n//                   <div style={{\n//                     backgroundColor: 'white',\n//                     padding: '20px',\n//                     borderRadius: '5px'\n//                   }}>\n//                     <h3>Select Slot</h3>\n//                     <div style={{\n//                       display: 'grid',\n//                       gridTemplateColumns: 'repeat(3, 1fr)',\n//                       gridGap: '10px'\n//                     }}>\n//                       {timeSlots.map((slot, index) => (\n//                         <div key={index} style={{\n//                           backgroundColor: '#f0f0f0',\n//                           padding: '10px',\n//                           textAlign: 'center',\n//                           cursor: 'pointer',\n//                           transition: 'background-color 0.3s',\n//                           borderRadius: '5px',\n//                         }} onClick={() => this.selectSlot(slot.time)}\n//                           onMouseEnter={(e) => e.target.style.backgroundColor = 'orange'}\n//                           onMouseLeave={(e) => e.target.style.backgroundColor = '#f0f0f0'}\n//                         >\n//                           {slot.time}\n//                         </div>\n//                       ))}\n//                     </div>\n//                     <button onClick={this.toggleSlotPopup} style={{ marginTop: '10px', padding: '8px 12px', backgroundColor: '#12214a', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Close</button>\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-secondary btn-lg\">Book Appointment</button>\n//             {/* {bookingSuccess && (\n//               <div className=\"success-message\">Appointment booked successfully!</div>\n//             )} */}\n//           </form>\n//           {bookingSuccess && (\n//               <div className=\"success-message\" style={{ backgroundColor: '#5734bf', color: 'white', padding: '10px', borderRadius: '5px', marginTop: '10px' }} >Appointment booked successfully!</div>\n//             )}\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default AppointmentForm;\n\n\n//final code\n\nimport React, { Component } from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nclass AppointmentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSlotPopup: false,\n      selectedSlot: '',\n      phone: '',\n      name: '',\n      email: '',\n      date: '',\n      bookingSuccess: false,\n    };\n  }\n\n  toggleSlotPopup = () => {\n    this.setState((prevState) => ({\n      showSlotPopup: !prevState.showSlotPopup,\n    }));\n  };\n\n  selectSlot = (slot) => {\n    this.setState({\n      selectedSlot: slot,\n      showSlotPopup: false,\n    });\n  };\n\n  handlePhoneChange = (value) => {\n    this.setState({\n      phone: value,\n    });\n  };\n\n  // handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const { name, email, phone, date, selectedSlot } = this.state;\n\n  //   if (!name || !email || !phone || !date || !selectedSlot) {\n  //     alert('Please fill all the fields');\n  //     return;\n  //   }\n\n  //   try {\n  //     // Make a POST request to the booking API\n  //     const bookingResponse = await fetch('http://localhost:5050/booking', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         name,\n  //         email,\n  //         phone,\n  //         date,\n  //         slot: selectedSlot,\n  //       }),\n  //     });\n\n  //     if (bookingResponse.ok) {\n  //       // Handle successful booking\n  //       this.setState({ bookingSuccess: true,\n  //         name: \"\",\n  //         email: \"\",\n  //         phone: \"\",\n  //         date: \"\",\n  //         selectedSlot: \"\"\n\n  //       });\n\n  //       // Make a POST request to the email API\n  //       const emailResponse = await fetch('http://localhost:4040/appointment', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({\n  //           name,\n  //           email,\n  //           phone,\n  //           date,\n  //           selectedSlot,\n  //         }),\n  //       });\n\n  //       if (!emailResponse.ok) {\n  //         console.error('Error sending email');\n  //         // Handle error in sending email if needed\n  //       }\n\n  //       setTimeout(() => {\n  //         this.setState({ bookingSuccess: false,\n  //         name: \"\",\n  //         email: \"\",\n  //         phone: \"\",\n  //         date: \"\",\n  //         selectedSlot: \"\"\n          \n  //         });\n  //       }, 3000); \n  //     } else {\n  //       // Handle error in booking\n  //       console.error('Booking failed');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error occurred:', error);\n  //   }\n  // };\n\n\n\n  handleFormSubmit = async (event) => {\n    event.preventDefault();\n  \n    const { name, email, phone, date, selectedSlot } = this.state;\n  \n    if (!name || !email || !phone || !date || !selectedSlot) {\n      alert('Please fill all the fields');\n      return;\n    }\n  \n    try {\n      // Make a POST request to the booking API\n      const bookingResponse = await fetch('http://localhost:3030/booking', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          phone,\n          date,\n          slot: selectedSlot,\n        }),\n      });\n  \n      if (bookingResponse.ok) {\n        // Handle successful booking\n        console.log('Booking successful');\n        this.setState({\n          bookingSuccess: true,\n        });\n  \n        // Make a POST request to the email API\n        const emailResponse = await fetch('http://localhost:3030/email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            phone,\n            date,\n            selectedSlot,\n          }),\n        });\n  \n        if (emailResponse.ok) {\n          console.log('Email sent successfully');\n        } else {\n          console.error('Error sending email:', emailResponse.statusText);\n        }\n  \n        // Reset input fields and success message after a delay (optional)\n        setTimeout(() => {\n          this.setState({\n            bookingSuccess: false,\n            name: '',\n            email: '',\n            phone: '',\n            date: '',\n            selectedSlot: ''\n          });\n        }, 3000); // Reset after 3 seconds\n      } else {\n        // Handle error in booking\n        console.error('Booking failed:', bookingResponse.statusText);\n      }\n    } catch (error) {\n      console.error('Error occurred:', error);\n    }\n  };\n  \n  \n  \n\n  render() {\n    const { showSlotPopup, selectedSlot, phone, bookingSuccess } = this.state;\n    const timeSlots = [\n      { time: '9:00 AM', appointments: [] },\n      { time: '10:00 AM', appointments: [] },\n      { time: '11:00 AM', appointments: [] },\n      { time: '12:00 PM', appointments: [] },\n      { time: '1:00 PM', appointments: [] },\n      { time: '2:00 PM', appointments: [] },\n      { time: '3:00 PM', appointments: [] },\n      { time: '4:00 PM', appointments: [] },\n      { time: '5:00 PM', appointments: [] },\n    ];\n\n    return (\n      <>\n        <div className=\"appointment-form form-wraper\">\n          <h3 className=\"title\">Book Appointment</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Your Name\"\n                onChange={(e) => this.setState({ name: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Your Email\"\n                onChange={(e) => this.setState({ email: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <PhoneInput\n                country={'in'} // Default country\n                enableSearch={true}\n                value={phone}\n                onChange={this.handlePhoneChange}\n                inputStyle={{\n                  width: '100%',\n                  height: '60px',\n                  borderRadius: '10px',\n                  alignItems: 'center',\n                  fontSize: '18px',\n                }} //\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                onChange={(e) => this.setState({ date: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Slot\"\n                onClick={this.toggleSlotPopup}\n                value={selectedSlot}\n                readOnly\n              />\n              {showSlotPopup && (\n                <div\n                  style={{\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    zIndex: 999,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <div\n                    style={{\n                      backgroundColor: 'white',\n                      padding: '20px',\n                      borderRadius: '5px',\n                    }}\n                  >\n                    <h3>Select Slot</h3>\n                    <div\n                      style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(3, 1fr)',\n                        gridGap: '10px',\n                      }}\n                    >\n                      {timeSlots.map((slot, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            backgroundColor: '#f0f0f0',\n                            padding: '10px',\n                            textAlign: 'center',\n                            cursor: 'pointer',\n                            transition: 'background-color 0.3s',\n                            borderRadius: '5px',\n                          }}\n                          onClick={() => this.selectSlot(slot.time)}\n                          onMouseEnter={(e) => (e.target.style.backgroundColor = 'orange')}\n                          onMouseLeave={(e) => (e.target.style.backgroundColor = '#f0f0f0')}\n                        >\n                          {slot.time}\n                        </div>\n                      ))}\n                    </div>\n                    <button\n                      onClick={this.toggleSlotPopup}\n                      style={{\n                        marginTop: '10px',\n                        padding: '8px 12px',\n                        backgroundColor: '#12214a',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer',\n                      }}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary btn-lg\">\n              Book Appointment\n            </button>\n          </form>\n          {bookingSuccess && <div className=\"success-message\" style={{ backgroundColor: '#5734bf', color: 'white', padding: '10px', borderRadius: '5px', marginTop: '10px' }}>Appointment booked successfully!</div>}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AppointmentForm;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,eAAe,SAASN,SAAS,CAAC;EACtCO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAYfC,eAAe,GAAG,MAAM;MACtB,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,aAAa,EAAE,CAACD,SAAS,CAACC;MAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,KAEDC,UAAU,GAAIC,IAAI,IAAK;MACrB,IAAI,CAACJ,QAAQ,CAAC;QACZK,YAAY,EAAED,IAAI;QAClBF,aAAa,EAAE;MACjB,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDI,iBAAiB,GAAIC,KAAK,IAAK;MAC7B,IAAI,CAACP,QAAQ,CAAC;QACZQ,KAAK,EAAED;MACT,CAAC,CAAC;IACJ,CAAC;IAED;IACA;IAEA;IAEA;IACA;IACA;IACA;IAEA;IACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}